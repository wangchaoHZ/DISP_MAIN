

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon May 05 19:41:36 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=2
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=2
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=2
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=2
    14                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Generated 17/10/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4520 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62   000FE0                     bsr             equ	4064
    63   000FE9                     fsr0            equ	4073
    64   000FEA                     fsr0h           equ	4074
    65   000FE9                     fsr0l           equ	4073
    66   000FE1                     fsr1            equ	4065
    67   000FE2                     fsr1h           equ	4066
    68   000FE1                     fsr1l           equ	4065
    69   000FD9                     fsr2            equ	4057
    70   000FDA                     fsr2h           equ	4058
    71   000FD9                     fsr2l           equ	4057
    72   000FEF                     indf0           equ	4079
    73   000FE7                     indf1           equ	4071
    74   000FDF                     indf2           equ	4063
    75   000FF2                     intcon          equ	4082
    76   000000                     nvmcon          equ	0
    77   000FF9                     pcl             equ	4089
    78   000FFA                     pclath          equ	4090
    79   000FFB                     pclatu          equ	4091
    80   000FEB                     plusw0          equ	4075
    81   000FE3                     plusw1          equ	4067
    82   000FDB                     plusw2          equ	4059
    83   000FED                     postdec0        equ	4077
    84   000FE5                     postdec1        equ	4069
    85   000FDD                     postdec2        equ	4061
    86   000FEE                     postinc0        equ	4078
    87   000FE6                     postinc1        equ	4070
    88   000FDE                     postinc2        equ	4062
    89   000FEC                     preinc0         equ	4076
    90   000FE4                     preinc1         equ	4068
    91   000FDC                     preinc2         equ	4060
    92   000FF3                     prod            equ	4083
    93   000FF4                     prodh           equ	4084
    94   000FF3                     prodl           equ	4083
    95   000FD8                     status          equ	4056
    96   000FF5                     tablat          equ	4085
    97   000FF6                     tblptr          equ	4086
    98   000FF7                     tblptrh         equ	4087
    99   000FF6                     tblptrl         equ	4086
   100   000FF8                     tblptru         equ	4088
   101   000FFD                     tosl            equ	4093
   102   000FE8                     wreg            equ	4072
   103   000F80                     PORTA           equ	3968	;# 
   104   000F81                     PORTB           equ	3969	;# 
   105   000F82                     PORTC           equ	3970	;# 
   106   000F83                     PORTD           equ	3971	;# 
   107   000F84                     PORTE           equ	3972	;# 
   108   000F89                     LATA            equ	3977	;# 
   109   000F8A                     LATB            equ	3978	;# 
   110   000F8B                     LATC            equ	3979	;# 
   111   000F8C                     LATD            equ	3980	;# 
   112   000F8D                     LATE            equ	3981	;# 
   113   000F92                     TRISA           equ	3986	;# 
   114   000F92                     DDRA            equ	3986	;# 
   115   000F93                     TRISB           equ	3987	;# 
   116   000F93                     DDRB            equ	3987	;# 
   117   000F94                     TRISC           equ	3988	;# 
   118   000F94                     DDRC            equ	3988	;# 
   119   000F95                     TRISD           equ	3989	;# 
   120   000F95                     DDRD            equ	3989	;# 
   121   000F96                     TRISE           equ	3990	;# 
   122   000F96                     DDRE            equ	3990	;# 
   123   000F9B                     OSCTUNE         equ	3995	;# 
   124   000F9D                     PIE1            equ	3997	;# 
   125   000F9E                     PIR1            equ	3998	;# 
   126   000F9F                     IPR1            equ	3999	;# 
   127   000FA0                     PIE2            equ	4000	;# 
   128   000FA1                     PIR2            equ	4001	;# 
   129   000FA2                     IPR2            equ	4002	;# 
   130   000FA6                     EECON1          equ	4006	;# 
   131   000FA7                     EECON2          equ	4007	;# 
   132   000FA8                     EEDATA          equ	4008	;# 
   133   000FA9                     EEADR           equ	4009	;# 
   134   000FAB                     RCSTA           equ	4011	;# 
   135   000FAB                     RCSTA1          equ	4011	;# 
   136   000FAC                     TXSTA           equ	4012	;# 
   137   000FAC                     TXSTA1          equ	4012	;# 
   138   000FAD                     TXREG           equ	4013	;# 
   139   000FAD                     TXREG1          equ	4013	;# 
   140   000FAE                     RCREG           equ	4014	;# 
   141   000FAE                     RCREG1          equ	4014	;# 
   142   000FAF                     SPBRG           equ	4015	;# 
   143   000FAF                     SPBRG1          equ	4015	;# 
   144   000FB0                     SPBRGH          equ	4016	;# 
   145   000FB1                     T3CON           equ	4017	;# 
   146   000FB2                     TMR3            equ	4018	;# 
   147   000FB2                     TMR3L           equ	4018	;# 
   148   000FB3                     TMR3H           equ	4019	;# 
   149   000FB4                     CMCON           equ	4020	;# 
   150   000FB5                     CVRCON          equ	4021	;# 
   151   000FB6                     ECCP1AS         equ	4022	;# 
   152   000FB6                     ECCPAS          equ	4022	;# 
   153   000FB7                     PWM1CON         equ	4023	;# 
   154   000FB7                     ECCP1DEL        equ	4023	;# 
   155   000FB8                     BAUDCON         equ	4024	;# 
   156   000FB8                     BAUDCTL         equ	4024	;# 
   157   000FBA                     CCP2CON         equ	4026	;# 
   158   000FBB                     CCPR2           equ	4027	;# 
   159   000FBB                     CCPR2L          equ	4027	;# 
   160   000FBC                     CCPR2H          equ	4028	;# 
   161   000FBD                     CCP1CON         equ	4029	;# 
   162   000FBE                     CCPR1           equ	4030	;# 
   163   000FBE                     CCPR1L          equ	4030	;# 
   164   000FBF                     CCPR1H          equ	4031	;# 
   165   000FC0                     ADCON2          equ	4032	;# 
   166   000FC1                     ADCON1          equ	4033	;# 
   167   000FC2                     ADCON0          equ	4034	;# 
   168   000FC3                     ADRES           equ	4035	;# 
   169   000FC3                     ADRESL          equ	4035	;# 
   170   000FC4                     ADRESH          equ	4036	;# 
   171   000FC5                     SSPCON2         equ	4037	;# 
   172   000FC6                     SSPCON1         equ	4038	;# 
   173   000FC7                     SSPSTAT         equ	4039	;# 
   174   000FC8                     SSPADD          equ	4040	;# 
   175   000FC9                     SSPBUF          equ	4041	;# 
   176   000FCA                     T2CON           equ	4042	;# 
   177   000FCB                     PR2             equ	4043	;# 
   178   000FCB                     MEMCON          equ	4043	;# 
   179   000FCC                     TMR2            equ	4044	;# 
   180   000FCD                     T1CON           equ	4045	;# 
   181   000FCE                     TMR1            equ	4046	;# 
   182   000FCE                     TMR1L           equ	4046	;# 
   183   000FCF                     TMR1H           equ	4047	;# 
   184   000FD0                     RCON            equ	4048	;# 
   185   000FD1                     WDTCON          equ	4049	;# 
   186   000FD2                     HLVDCON         equ	4050	;# 
   187   000FD2                     LVDCON          equ	4050	;# 
   188   000FD3                     OSCCON          equ	4051	;# 
   189   000FD5                     T0CON           equ	4053	;# 
   190   000FD6                     TMR0            equ	4054	;# 
   191   000FD6                     TMR0L           equ	4054	;# 
   192   000FD7                     TMR0H           equ	4055	;# 
   193   000FD8                     STATUS          equ	4056	;# 
   194   000FD9                     FSR2            equ	4057	;# 
   195   000FD9                     FSR2L           equ	4057	;# 
   196   000FDA                     FSR2H           equ	4058	;# 
   197   000FDB                     PLUSW2          equ	4059	;# 
   198   000FDC                     PREINC2         equ	4060	;# 
   199   000FDD                     POSTDEC2        equ	4061	;# 
   200   000FDE                     POSTINC2        equ	4062	;# 
   201   000FDF                     INDF2           equ	4063	;# 
   202   000FE0                     BSR             equ	4064	;# 
   203   000FE1                     FSR1            equ	4065	;# 
   204   000FE1                     FSR1L           equ	4065	;# 
   205   000FE2                     FSR1H           equ	4066	;# 
   206   000FE3                     PLUSW1          equ	4067	;# 
   207   000FE4                     PREINC1         equ	4068	;# 
   208   000FE5                     POSTDEC1        equ	4069	;# 
   209   000FE6                     POSTINC1        equ	4070	;# 
   210   000FE7                     INDF1           equ	4071	;# 
   211   000FE8                     WREG            equ	4072	;# 
   212   000FE9                     FSR0            equ	4073	;# 
   213   000FE9                     FSR0L           equ	4073	;# 
   214   000FEA                     FSR0H           equ	4074	;# 
   215   000FEB                     PLUSW0          equ	4075	;# 
   216   000FEC                     PREINC0         equ	4076	;# 
   217   000FED                     POSTDEC0        equ	4077	;# 
   218   000FEE                     POSTINC0        equ	4078	;# 
   219   000FEF                     INDF0           equ	4079	;# 
   220   000FF0                     INTCON3         equ	4080	;# 
   221   000FF1                     INTCON2         equ	4081	;# 
   222   000FF2                     INTCON          equ	4082	;# 
   223   000FF3                     PROD            equ	4083	;# 
   224   000FF3                     PRODL           equ	4083	;# 
   225   000FF4                     PRODH           equ	4084	;# 
   226   000FF5                     TABLAT          equ	4085	;# 
   227   000FF6                     TBLPTR          equ	4086	;# 
   228   000FF6                     TBLPTRL         equ	4086	;# 
   229   000FF7                     TBLPTRH         equ	4087	;# 
   230   000FF8                     TBLPTRU         equ	4088	;# 
   231   000FF9                     PCLAT           equ	4089	;# 
   232   000FF9                     PC              equ	4089	;# 
   233   000FF9                     PCL             equ	4089	;# 
   234   000FFA                     PCLATH          equ	4090	;# 
   235   000FFB                     PCLATU          equ	4091	;# 
   236   000FFC                     STKPTR          equ	4092	;# 
   237   000FFD                     TOS             equ	4093	;# 
   238   000FFD                     TOSL            equ	4093	;# 
   239   000FFE                     TOSH            equ	4094	;# 
   240   000FFF                     TOSU            equ	4095	;# 
   241   000F80                     PORTA           equ	3968	;# 
   242   000F81                     PORTB           equ	3969	;# 
   243   000F82                     PORTC           equ	3970	;# 
   244   000F83                     PORTD           equ	3971	;# 
   245   000F84                     PORTE           equ	3972	;# 
   246   000F89                     LATA            equ	3977	;# 
   247   000F8A                     LATB            equ	3978	;# 
   248   000F8B                     LATC            equ	3979	;# 
   249   000F8C                     LATD            equ	3980	;# 
   250   000F8D                     LATE            equ	3981	;# 
   251   000F92                     TRISA           equ	3986	;# 
   252   000F92                     DDRA            equ	3986	;# 
   253   000F93                     TRISB           equ	3987	;# 
   254   000F93                     DDRB            equ	3987	;# 
   255   000F94                     TRISC           equ	3988	;# 
   256   000F94                     DDRC            equ	3988	;# 
   257   000F95                     TRISD           equ	3989	;# 
   258   000F95                     DDRD            equ	3989	;# 
   259   000F96                     TRISE           equ	3990	;# 
   260   000F96                     DDRE            equ	3990	;# 
   261   000F9B                     OSCTUNE         equ	3995	;# 
   262   000F9D                     PIE1            equ	3997	;# 
   263   000F9E                     PIR1            equ	3998	;# 
   264   000F9F                     IPR1            equ	3999	;# 
   265   000FA0                     PIE2            equ	4000	;# 
   266   000FA1                     PIR2            equ	4001	;# 
   267   000FA2                     IPR2            equ	4002	;# 
   268   000FA6                     EECON1          equ	4006	;# 
   269   000FA7                     EECON2          equ	4007	;# 
   270   000FA8                     EEDATA          equ	4008	;# 
   271   000FA9                     EEADR           equ	4009	;# 
   272   000FAB                     RCSTA           equ	4011	;# 
   273   000FAB                     RCSTA1          equ	4011	;# 
   274   000FAC                     TXSTA           equ	4012	;# 
   275   000FAC                     TXSTA1          equ	4012	;# 
   276   000FAD                     TXREG           equ	4013	;# 
   277   000FAD                     TXREG1          equ	4013	;# 
   278   000FAE                     RCREG           equ	4014	;# 
   279   000FAE                     RCREG1          equ	4014	;# 
   280   000FAF                     SPBRG           equ	4015	;# 
   281   000FAF                     SPBRG1          equ	4015	;# 
   282   000FB0                     SPBRGH          equ	4016	;# 
   283   000FB1                     T3CON           equ	4017	;# 
   284   000FB2                     TMR3            equ	4018	;# 
   285   000FB2                     TMR3L           equ	4018	;# 
   286   000FB3                     TMR3H           equ	4019	;# 
   287   000FB4                     CMCON           equ	4020	;# 
   288   000FB5                     CVRCON          equ	4021	;# 
   289   000FB6                     ECCP1AS         equ	4022	;# 
   290   000FB6                     ECCPAS          equ	4022	;# 
   291   000FB7                     PWM1CON         equ	4023	;# 
   292   000FB7                     ECCP1DEL        equ	4023	;# 
   293   000FB8                     BAUDCON         equ	4024	;# 
   294   000FB8                     BAUDCTL         equ	4024	;# 
   295   000FBA                     CCP2CON         equ	4026	;# 
   296   000FBB                     CCPR2           equ	4027	;# 
   297   000FBB                     CCPR2L          equ	4027	;# 
   298   000FBC                     CCPR2H          equ	4028	;# 
   299   000FBD                     CCP1CON         equ	4029	;# 
   300   000FBE                     CCPR1           equ	4030	;# 
   301   000FBE                     CCPR1L          equ	4030	;# 
   302   000FBF                     CCPR1H          equ	4031	;# 
   303   000FC0                     ADCON2          equ	4032	;# 
   304   000FC1                     ADCON1          equ	4033	;# 
   305   000FC2                     ADCON0          equ	4034	;# 
   306   000FC3                     ADRES           equ	4035	;# 
   307   000FC3                     ADRESL          equ	4035	;# 
   308   000FC4                     ADRESH          equ	4036	;# 
   309   000FC5                     SSPCON2         equ	4037	;# 
   310   000FC6                     SSPCON1         equ	4038	;# 
   311   000FC7                     SSPSTAT         equ	4039	;# 
   312   000FC8                     SSPADD          equ	4040	;# 
   313   000FC9                     SSPBUF          equ	4041	;# 
   314   000FCA                     T2CON           equ	4042	;# 
   315   000FCB                     PR2             equ	4043	;# 
   316   000FCB                     MEMCON          equ	4043	;# 
   317   000FCC                     TMR2            equ	4044	;# 
   318   000FCD                     T1CON           equ	4045	;# 
   319   000FCE                     TMR1            equ	4046	;# 
   320   000FCE                     TMR1L           equ	4046	;# 
   321   000FCF                     TMR1H           equ	4047	;# 
   322   000FD0                     RCON            equ	4048	;# 
   323   000FD1                     WDTCON          equ	4049	;# 
   324   000FD2                     HLVDCON         equ	4050	;# 
   325   000FD2                     LVDCON          equ	4050	;# 
   326   000FD3                     OSCCON          equ	4051	;# 
   327   000FD5                     T0CON           equ	4053	;# 
   328   000FD6                     TMR0            equ	4054	;# 
   329   000FD6                     TMR0L           equ	4054	;# 
   330   000FD7                     TMR0H           equ	4055	;# 
   331   000FD8                     STATUS          equ	4056	;# 
   332   000FD9                     FSR2            equ	4057	;# 
   333   000FD9                     FSR2L           equ	4057	;# 
   334   000FDA                     FSR2H           equ	4058	;# 
   335   000FDB                     PLUSW2          equ	4059	;# 
   336   000FDC                     PREINC2         equ	4060	;# 
   337   000FDD                     POSTDEC2        equ	4061	;# 
   338   000FDE                     POSTINC2        equ	4062	;# 
   339   000FDF                     INDF2           equ	4063	;# 
   340   000FE0                     BSR             equ	4064	;# 
   341   000FE1                     FSR1            equ	4065	;# 
   342   000FE1                     FSR1L           equ	4065	;# 
   343   000FE2                     FSR1H           equ	4066	;# 
   344   000FE3                     PLUSW1          equ	4067	;# 
   345   000FE4                     PREINC1         equ	4068	;# 
   346   000FE5                     POSTDEC1        equ	4069	;# 
   347   000FE6                     POSTINC1        equ	4070	;# 
   348   000FE7                     INDF1           equ	4071	;# 
   349   000FE8                     WREG            equ	4072	;# 
   350   000FE9                     FSR0            equ	4073	;# 
   351   000FE9                     FSR0L           equ	4073	;# 
   352   000FEA                     FSR0H           equ	4074	;# 
   353   000FEB                     PLUSW0          equ	4075	;# 
   354   000FEC                     PREINC0         equ	4076	;# 
   355   000FED                     POSTDEC0        equ	4077	;# 
   356   000FEE                     POSTINC0        equ	4078	;# 
   357   000FEF                     INDF0           equ	4079	;# 
   358   000FF0                     INTCON3         equ	4080	;# 
   359   000FF1                     INTCON2         equ	4081	;# 
   360   000FF2                     INTCON          equ	4082	;# 
   361   000FF3                     PROD            equ	4083	;# 
   362   000FF3                     PRODL           equ	4083	;# 
   363   000FF4                     PRODH           equ	4084	;# 
   364   000FF5                     TABLAT          equ	4085	;# 
   365   000FF6                     TBLPTR          equ	4086	;# 
   366   000FF6                     TBLPTRL         equ	4086	;# 
   367   000FF7                     TBLPTRH         equ	4087	;# 
   368   000FF8                     TBLPTRU         equ	4088	;# 
   369   000FF9                     PCLAT           equ	4089	;# 
   370   000FF9                     PC              equ	4089	;# 
   371   000FF9                     PCL             equ	4089	;# 
   372   000FFA                     PCLATH          equ	4090	;# 
   373   000FFB                     PCLATU          equ	4091	;# 
   374   000FFC                     STKPTR          equ	4092	;# 
   375   000FFD                     TOS             equ	4093	;# 
   376   000FFD                     TOSL            equ	4093	;# 
   377   000FFE                     TOSH            equ	4094	;# 
   378   000FFF                     TOSU            equ	4095	;# 
   379   007CF4                     _TXIF           set	31988
   380   007F97                     _GIE            set	32663
   381   007F96                     _PEIE           set	32662
   382   007CED                     _RCIE           set	31981
   383   007CF5                     _RCIF           set	31989
   384   007D5C                     _CREN           set	32092
   385   007D65                     _TXEN           set	32101
   386   007D5F                     _SPEN           set	32095
   387   007D64                     _SYNC           set	32100
   388   007DC3                     _BRG16          set	32195
   389   007D62                     _BRGH           set	32098
   390   007CA7                     _TRISC7         set	31911
   391   007CA6                     _TRISC6         set	31910
   392   000FAE                     _RCREG          set	4014
   393   000FAD                     _TXREG          set	4013
   394   000FAF                     _SPBRG          set	4015
   395   000F8D                     _LATEbits       set	3981
   396   000F89                     _LATAbits       set	3977
   397   000F96                     _TRISEbits      set	3990
   398   000F92                     _TRISAbits      set	3986
   399   000F93                     _TRISBbits      set	3987
   400   000F8B                     _LATC           set	3979
   401   000F8A                     _LATBbits       set	3978
   402   000F8C                     _LATD           set	3980
   403                           
   404                           	psect	smallconst
   405   000600                     __psmallconst:
   406                           	callstack 0
   407   000600  00                 	db	0
   408   000601                     STR_3:
   409   000601  43                 	db	67	;'C'
   410   000602  4F                 	db	79	;'O'
   411   000603  4E                 	db	78	;'N'
   412   000604  4E                 	db	78	;'N'
   413   000605  5F                 	db	95	;'_'
   414   000606  41                 	db	65	;'A'
   415   000607  43                 	db	67	;'C'
   416   000608  4B                 	db	75	;'K'
   417   000609  0D                 	db	13
   418   00060A  0A                 	db	10
   419   00060B  00                 	db	0
   420   00060C                     STR_16:
   421   00060C  53                 	db	83	;'S'
   422   00060D  48                 	db	72	;'H'
   423   00060E  4F                 	db	79	;'O'
   424   00060F  57                 	db	87	;'W'
   425   000610  5F                 	db	95	;'_'
   426   000611  30                 	db	48	;'0'
   427   000612  30                 	db	48	;'0'
   428   000613  30                 	db	48	;'0'
   429   000614  00                 	db	0
   430   000615                     STR_4:
   431   000615  53                 	db	83	;'S'
   432   000616  48                 	db	72	;'H'
   433   000617  4F                 	db	79	;'O'
   434   000618  57                 	db	87	;'W'
   435   000619  5F                 	db	95	;'_'
   436   00061A  30                 	db	48	;'0'
   437   00061B  30                 	db	48	;'0'
   438   00061C  31                 	db	49	;'1'
   439   00061D  00                 	db	0
   440   00061E                     STR_6:
   441   00061E  53                 	db	83	;'S'
   442   00061F  48                 	db	72	;'H'
   443   000620  4F                 	db	79	;'O'
   444   000621  57                 	db	87	;'W'
   445   000622  5F                 	db	95	;'_'
   446   000623  30                 	db	48	;'0'
   447   000624  30                 	db	48	;'0'
   448   000625  32                 	db	50	;'2'
   449   000626  00                 	db	0
   450   000627                     STR_8:
   451   000627  53                 	db	83	;'S'
   452   000628  48                 	db	72	;'H'
   453   000629  4F                 	db	79	;'O'
   454   00062A  57                 	db	87	;'W'
   455   00062B  5F                 	db	95	;'_'
   456   00062C  30                 	db	48	;'0'
   457   00062D  30                 	db	48	;'0'
   458   00062E  33                 	db	51	;'3'
   459   00062F  00                 	db	0
   460   000630                     STR_10:
   461   000630  53                 	db	83	;'S'
   462   000631  48                 	db	72	;'H'
   463   000632  4F                 	db	79	;'O'
   464   000633  57                 	db	87	;'W'
   465   000634  5F                 	db	95	;'_'
   466   000635  30                 	db	48	;'0'
   467   000636  30                 	db	48	;'0'
   468   000637  34                 	db	52	;'4'
   469   000638  00                 	db	0
   470   000639                     STR_12:
   471   000639  53                 	db	83	;'S'
   472   00063A  48                 	db	72	;'H'
   473   00063B  4F                 	db	79	;'O'
   474   00063C  57                 	db	87	;'W'
   475   00063D  5F                 	db	95	;'_'
   476   00063E  30                 	db	48	;'0'
   477   00063F  30                 	db	48	;'0'
   478   000640  35                 	db	53	;'5'
   479   000641  00                 	db	0
   480   000642                     STR_14:
   481   000642  53                 	db	83	;'S'
   482   000643  48                 	db	72	;'H'
   483   000644  4F                 	db	79	;'O'
   484   000645  57                 	db	87	;'W'
   485   000646  5F                 	db	95	;'_'
   486   000647  30                 	db	48	;'0'
   487   000648  30                 	db	48	;'0'
   488   000649  36                 	db	54	;'6'
   489   00064A  00                 	db	0
   490   00064B                     STR_1:
   491   00064B  43                 	db	67	;'C'
   492   00064C  4F                 	db	79	;'O'
   493   00064D  4E                 	db	78	;'N'
   494   00064E  4E                 	db	78	;'N'
   495   00064F  5F                 	db	95	;'_'
   496   000650  52                 	db	82	;'R'
   497   000651  45                 	db	69	;'E'
   498   000652  51                 	db	81	;'Q'
   499   000653  00                 	db	0
   500   00064B                     STR_2           equ	STR_1
   501   000642                     STR_15          equ	STR_14
   502   000639                     STR_13          equ	STR_12
   503   000630                     STR_11          equ	STR_10
   504   000627                     STR_9           equ	STR_8
   505   00061E                     STR_7           equ	STR_6
   506   000615                     STR_5           equ	STR_4
   507   00060C                     STR_17          equ	STR_16
   508   000654  00                 	db	0	; dummy byte at the end
   509   000600                     __smallconst    set	__psmallconst
   510   000600                     __mediumconst   set	__psmallconst
   511   000002                     __activetblptr  equ	2
   512                           
   513                           ; #config settings
   514                           
   515                           	psect	cinit
   516   000AEA                     __pcinit:
   517                           	callstack 0
   518   000AEA                     start_initialization:
   519                           	callstack 0
   520   000AEA                     __initialization:
   521                           	callstack 0
   522                           
   523                           ; Clear objects allocated to COMRAM (32 bytes)
   524   000AEA  EE00  F001         	lfsr	0,__pbssCOMRAM
   525   000AEE  0E20               	movlw	32
   526   000AF0                     clear_0:
   527   000AF0  6AEE               	clrf	postinc0,c
   528   000AF2  06E8               	decf	wreg,f,c
   529   000AF4  E1FD               	bnz	clear_0
   530   000AF6                     end_of_initialization:
   531                           	callstack 0
   532   000AF6                     __end_of__initialization:
   533                           	callstack 0
   534   000AF6  902D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   535   000AF8  922D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   536   000AFA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   537   000AFC  6EF8               	movwf	tblptru,c
   538   000AFE  0100               	movlb	0
   539   000B00  EF2B  F003         	goto	_main	;jump to C main() function
   540                           
   541                           	psect	bssCOMRAM
   542   000001                     __pbssCOMRAM:
   543                           	callstack 0
   544   000001                     _buffer:
   545                           	callstack 0
   546   000001                     	ds	20
   547   000015                     _uart_rx_index:
   548                           	callstack 0
   549   000015                     	ds	1
   550   000016                     _uart_frame_ready:
   551                           	callstack 0
   552   000016                     	ds	1
   553   000017                     _uart_rx_buffer:
   554                           	callstack 0
   555   000017                     	ds	10
   556                           
   557                           	psect	cstackCOMRAM
   558   000021                     __pcstackCOMRAM:
   559                           	callstack 0
   560   000021                     ??_ISR:
   561                           
   562                           ; 1 bytes @ 0x0
   563   000021                     	ds	2
   564   000023                     ISR@received:
   565                           	callstack 0
   566                           
   567                           ; 1 bytes @ 0x2
   568   000023                     	ds	1
   569   000024                     ?_strchr:
   570                           	callstack 0
   571   000024                     ?_strlen:
   572                           	callstack 0
   573   000024                     ?_strncmp:
   574                           	callstack 0
   575   000024                     latch_data@seg_data:
   576                           	callstack 0
   577   000024                     SelectIO@index:
   578                           	callstack 0
   579   000024                     UART_SendChar@ch:
   580                           	callstack 0
   581   000024                     strchr@s:
   582                           	callstack 0
   583   000024                     strlen@s:
   584                           	callstack 0
   585   000024                     strncmp@l:
   586                           	callstack 0
   587   000024                     delay_ms@ms:
   588                           	callstack 0
   589   000024                     
   590                           ; 1 bytes @ 0x3
   591   000024                     	ds	1
   592   000025                     UART_SendString@str:
   593                           	callstack 0
   594   000025                     strncmp@r:
   595                           	callstack 0
   596   000025                     strchr@c:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0x4
   600   000025                     	ds	1
   601   000026                     strlen@a:
   602                           	callstack 0
   603   000026                     strncmp@n:
   604                           	callstack 0
   605   000026                     ??_delay_ms:
   606                           
   607                           ; 1 bytes @ 0x5
   608   000026                     	ds	1
   609   000027                     
   610                           ; 1 bytes @ 0x6
   611   000027                     	ds	1
   612   000028                     ??_strncmp:
   613                           
   614                           ; 1 bytes @ 0x7
   615   000028                     	ds	1
   616   000029                     ?_strstr:
   617                           	callstack 0
   618   000029                     strstr@h:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x8
   622   000029                     	ds	1
   623   00002A                     strstr@n:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0x9
   627   00002A                     	ds	1
   628   00002B                     strstr@nl:
   629                           	callstack 0
   630   00002B                     
   631                           ; 1 bytes @ 0xA
   632   00002B                     	ds	2
   633   00002D                     
   634                           ; 1 bytes @ 0xC
   635 ;;
   636 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   637 ;;
   638 ;; *************** function _main *****************
   639 ;; Defined at:
   640 ;;		line 125 in file "main.c"
   641 ;; Parameters:    Size  Location     Type
   642 ;;		None
   643 ;; Auto vars:     Size  Location     Type
   644 ;;		None
   645 ;; Return value:  Size  Location     Type
   646 ;;                  1    wreg      void 
   647 ;; Registers used:
   648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   649 ;; Tracked objects:
   650 ;;		On entry : 0/0
   651 ;;		On exit  : 0/0
   652 ;;		Unchanged: 0/0
   653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   654 ;;      Params:         0       0       0       0       0       0       0
   655 ;;      Locals:         0       0       0       0       0       0       0
   656 ;;      Temps:          0       0       0       0       0       0       0
   657 ;;      Totals:         0       0       0       0       0       0       0
   658 ;;Total ram usage:        0 bytes
   659 ;; Hardware stack levels required when called: 3
   660 ;; This function calls:
   661 ;;		_SelectIO
   662 ;;		_UART_Init
   663 ;;		_UART_SendString
   664 ;;		_delay_ms
   665 ;;		_init_ports
   666 ;;		_latch_data
   667 ;;		_strstr
   668 ;; This function is called by:
   669 ;;		Startup code after reset
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           	psect	text0
   674   000656                     __ptext0:
   675                           	callstack 0
   676   000656                     _main:
   677                           	callstack 28
   678   000656                     
   679                           ;main.c: 127:             {
   680   000656  0E01               	movlw	1
   681   000658  6E25               	movwf	(delay_ms@ms+1)^0,c
   682   00065A  0EF4               	movlw	244
   683   00065C  6E24               	movwf	delay_ms@ms^0,c
   684   00065E  EC40  F005         	call	_delay_ms	;wreg free
   685   000662                     
   686                           ;main.c: 129:                 SelectIO(3);
   687   000662  EC66  F005         	call	_UART_Init	;wreg free
   688   000666                     
   689                           ;main.c: 132:             {
   690   000666  EC8D  F005         	call	_init_ports	;wreg free
   691   00066A                     
   692                           ;main.c: 134:                 SelectIO(4);
   693   00066A  0E00               	movlw	0
   694   00066C  EC8A  F004         	call	_SelectIO
   695   000670                     
   696                           ;main.c: 135:             }
   697   000670  0EFF               	movlw	255
   698   000672  EC57  F005         	call	_latch_data
   699   000676                     l1179:
   700                           
   701                           ;main.c: 138: ;main.c: 139:                 SelectIO(5);
   702   000676  5016               	movf	_uart_frame_ready^0,w,c	;volatile
   703   000678  B4D8               	btfsc	status,2,c
   704   00067A  EF41  F003         	goto	u431
   705   00067E  EF43  F003         	goto	u430
   706   000682                     u431:
   707   000682  EF3B  F003         	goto	l1179
   708   000686                     u430:
   709   000686                     
   710                           ;main.c: 140:             };main.c: 141:             else if (strstr((char*)uart_rx_buff
      +                          er, "SHOW_006"))
   711   000686  6A16               	clrf	_uart_frame_ready^0,c	;volatile
   712   000688                     
   713                           ;main.c: 149:                 SelectIO(0);
   714   000688  0E17               	movlw	low _uart_rx_buffer
   715   00068A  6E29               	movwf	strstr@h^0,c
   716   00068C  0E4B               	movlw	low STR_1
   717   00068E  6E2A               	movwf	strstr@n^0,c
   718   000690  EC40  F004         	call	_strstr	;wreg free
   719   000694  0900               	iorlw	0
   720   000696  B4D8               	btfsc	status,2,c
   721   000698  EF50  F003         	goto	u441
   722   00069C  EF52  F003         	goto	u440
   723   0006A0                     u441:
   724   0006A0  EF58  F003         	goto	l1187
   725   0006A4                     u440:
   726   0006A4                     
   727                           ;main.c: 150:             };main.c: 151:             uart_rx_index = 0;
   728   0006A4  0E01               	movlw	low STR_3
   729   0006A6  6E25               	movwf	UART_SendString@str^0,c
   730   0006A8  EC26  F005         	call	_UART_SendString	;wreg free
   731                           
   732                           ;main.c: 152:         }
   733   0006AC  EFDD  F003         	goto	l1215
   734   0006B0                     l1187:
   735   0006B0  0E17               	movlw	low _uart_rx_buffer
   736   0006B2  6E29               	movwf	strstr@h^0,c
   737   0006B4  0E15               	movlw	low STR_4
   738   0006B6  6E2A               	movwf	strstr@n^0,c
   739   0006B8  EC40  F004         	call	_strstr	;wreg free
   740   0006BC  0900               	iorlw	0
   741   0006BE  B4D8               	btfsc	status,2,c
   742   0006C0  EF64  F003         	goto	u451
   743   0006C4  EF66  F003         	goto	u450
   744   0006C8                     u451:
   745   0006C8  EF6B  F003         	goto	l1191
   746   0006CC                     u450:
   747   0006CC                     
   748                           ;main.c: 154: }
   749   0006CC  0E01               	movlw	1
   750   0006CE  EC8A  F004         	call	_SelectIO
   751   0006D2  EFDD  F003         	goto	l1215
   752   0006D6                     l1191:
   753   0006D6  0E17               	movlw	low _uart_rx_buffer
   754   0006D8  6E29               	movwf	strstr@h^0,c
   755   0006DA  0E1E               	movlw	low STR_6
   756   0006DC  6E2A               	movwf	strstr@n^0,c
   757   0006DE  EC40  F004         	call	_strstr	;wreg free
   758   0006E2  0900               	iorlw	0
   759   0006E4  B4D8               	btfsc	status,2,c
   760   0006E6  EF77  F003         	goto	u461
   761   0006EA  EF79  F003         	goto	u460
   762   0006EE                     u461:
   763   0006EE  EF7E  F003         	goto	l1195
   764   0006F2                     u460:
   765   0006F2  0E02               	movlw	2
   766   0006F4  EC8A  F004         	call	_SelectIO
   767   0006F8  EFDD  F003         	goto	l1215
   768   0006FC                     l1195:
   769   0006FC  0E17               	movlw	low _uart_rx_buffer
   770   0006FE  6E29               	movwf	strstr@h^0,c
   771   000700  0E27               	movlw	low STR_8
   772   000702  6E2A               	movwf	strstr@n^0,c
   773   000704  EC40  F004         	call	_strstr	;wreg free
   774   000708  0900               	iorlw	0
   775   00070A  B4D8               	btfsc	status,2,c
   776   00070C  EF8A  F003         	goto	u471
   777   000710  EF8C  F003         	goto	u470
   778   000714                     u471:
   779   000714  EF91  F003         	goto	l1199
   780   000718                     u470:
   781   000718  0E03               	movlw	3
   782   00071A  EC8A  F004         	call	_SelectIO
   783   00071E  EFDD  F003         	goto	l1215
   784   000722                     l1199:
   785   000722  0E17               	movlw	low _uart_rx_buffer
   786   000724  6E29               	movwf	strstr@h^0,c
   787   000726  0E30               	movlw	low STR_10
   788   000728  6E2A               	movwf	strstr@n^0,c
   789   00072A  EC40  F004         	call	_strstr	;wreg free
   790   00072E  0900               	iorlw	0
   791   000730  B4D8               	btfsc	status,2,c
   792   000732  EF9D  F003         	goto	u481
   793   000736  EF9F  F003         	goto	u480
   794   00073A                     u481:
   795   00073A  EFA4  F003         	goto	l1203
   796   00073E                     u480:
   797   00073E  0E04               	movlw	4
   798   000740  EC8A  F004         	call	_SelectIO
   799   000744  EFDD  F003         	goto	l1215
   800   000748                     l1203:
   801   000748  0E17               	movlw	low _uart_rx_buffer
   802   00074A  6E29               	movwf	strstr@h^0,c
   803   00074C  0E39               	movlw	low STR_12
   804   00074E  6E2A               	movwf	strstr@n^0,c
   805   000750  EC40  F004         	call	_strstr	;wreg free
   806   000754  0900               	iorlw	0
   807   000756  B4D8               	btfsc	status,2,c
   808   000758  EFB0  F003         	goto	u491
   809   00075C  EFB2  F003         	goto	u490
   810   000760                     u491:
   811   000760  EFB7  F003         	goto	l1207
   812   000764                     u490:
   813   000764  0E05               	movlw	5
   814   000766  EC8A  F004         	call	_SelectIO
   815   00076A  EFDD  F003         	goto	l1215
   816   00076E                     l1207:
   817   00076E  0E17               	movlw	low _uart_rx_buffer
   818   000770  6E29               	movwf	strstr@h^0,c
   819   000772  0E42               	movlw	low STR_14
   820   000774  6E2A               	movwf	strstr@n^0,c
   821   000776  EC40  F004         	call	_strstr	;wreg free
   822   00077A  0900               	iorlw	0
   823   00077C  B4D8               	btfsc	status,2,c
   824   00077E  EFC3  F003         	goto	u501
   825   000782  EFC5  F003         	goto	u500
   826   000786                     u501:
   827   000786  EFCA  F003         	goto	l1211
   828   00078A                     u500:
   829   00078A  0E06               	movlw	6
   830   00078C  EC8A  F004         	call	_SelectIO
   831   000790  EFDD  F003         	goto	l1215
   832   000794                     l1211:
   833   000794  0E17               	movlw	low _uart_rx_buffer
   834   000796  6E29               	movwf	strstr@h^0,c
   835   000798  0E0C               	movlw	low STR_16
   836   00079A  6E2A               	movwf	strstr@n^0,c
   837   00079C  EC40  F004         	call	_strstr	;wreg free
   838   0007A0  0900               	iorlw	0
   839   0007A2  B4D8               	btfsc	status,2,c
   840   0007A4  EFD6  F003         	goto	u511
   841   0007A8  EFD8  F003         	goto	u510
   842   0007AC                     u511:
   843   0007AC  EFDD  F003         	goto	l75
   844   0007B0                     u510:
   845   0007B0  0E00               	movlw	0
   846   0007B2  EC8A  F004         	call	_SelectIO
   847   0007B6  EFDD  F003         	goto	l1215
   848   0007BA                     l75:
   849   0007BA                     l1215:
   850   0007BA  6A15               	clrf	_uart_rx_index^0,c	;volatile
   851   0007BC  EF3B  F003         	goto	l1179
   852   0007C0  EF07  F000         	goto	start
   853   0007C4                     __end_of_main:
   854                           	callstack 0
   855                           
   856 ;; *************** function _strstr *****************
   857 ;; Defined at:
   858 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strstr.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;  h               1    8[COMRAM] PTR const unsigned char 
   861 ;;		 -> NULL(0), uart_rx_buffer(10), 
   862 ;;  n               1    9[COMRAM] PTR const unsigned char 
   863 ;;		 -> STR_17(9), STR_15(9), STR_13(9), STR_11(9), 
   864 ;;		 -> STR_9(9), STR_7(9), STR_5(9), STR_2(9), 
   865 ;; Auto vars:     Size  Location     Type
   866 ;;  nl              2   10[COMRAM] unsigned int 
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    8[COMRAM] PTR unsigned char 
   869 ;; Registers used:
   870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   876 ;;      Params:         2       0       0       0       0       0       0
   877 ;;      Locals:         2       0       0       0       0       0       0
   878 ;;      Temps:          0       0       0       0       0       0       0
   879 ;;      Totals:         4       0       0       0       0       0       0
   880 ;;Total ram usage:        4 bytes
   881 ;; Hardware stack levels used: 1
   882 ;; Hardware stack levels required when called: 2
   883 ;; This function calls:
   884 ;;		_strchr
   885 ;;		_strlen
   886 ;;		_strncmp
   887 ;; This function is called by:
   888 ;;		_main
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text1
   893   000880                     __ptext1:
   894                           	callstack 0
   895   000880                     _strstr:
   896                           	callstack 28
   897   000880  502A               	movf	strstr@n^0,w,c
   898   000882  B4D8               	btfsc	status,2,c
   899   000884  EF46  F004         	goto	u381
   900   000888  EF48  F004         	goto	u380
   901   00088C                     u381:
   902   00088C  EF88  F004         	goto	l1157
   903   000890                     u380:
   904   000890  C02A  F024         	movff	strstr@n,strlen@s
   905   000894  EC0C  F005         	call	_strlen	;wreg free
   906   000898  C024  F02B         	movff	?_strlen,strstr@nl
   907   00089C  C025  F02C         	movff	?_strlen+1,strstr@nl+1
   908   0008A0  EF75  F004         	goto	l1153
   909   0008A4                     l1145:
   910   0008A4  C029  F024         	movff	strstr@h,strncmp@l
   911   0008A8  C02A  F025         	movff	strstr@n,strncmp@r
   912   0008AC  C02B  F026         	movff	strstr@nl,strncmp@n
   913   0008B0  C02C  F027         	movff	strstr@nl+1,strncmp@n+1
   914   0008B4  ECE2  F003         	call	_strncmp	;wreg free
   915   0008B8  5024               	movf	?_strncmp^0,w,c
   916   0008BA  1025               	iorwf	(?_strncmp+1)^0,w,c
   917   0008BC  A4D8               	btfss	status,2,c
   918   0008BE  EF63  F004         	goto	u391
   919   0008C2  EF65  F004         	goto	u390
   920   0008C6                     u391:
   921   0008C6  EF68  F004         	goto	l1151
   922   0008CA                     u390:
   923   0008CA  5029               	movf	strstr@h^0,w,c
   924   0008CC  EF89  F004         	goto	l831
   925   0008D0                     l1151:
   926   0008D0  2829               	incf	strstr@h^0,w,c
   927   0008D2  6E24               	movwf	strchr@s^0,c
   928   0008D4  C02A  FFF6         	movff	strstr@n,tblptrl
   929   0008D8                     	if	1	;There is more than 1 active tblptr byte
   930   0008D8  0E06               	movlw	high __smallconst
   931   0008DA  6EF7               	movwf	tblptrh,c
   932   0008DC                     	endif
   933   0008DC                     	if	0	;tblptru may be non-zero
   934   0008DC                     	endif
   935   0008DC                     	if	0	;tblptru may be non-zero
   936   0008DC                     	endif
   937   0008DC  0008               	tblrd		*
   938   0008DE  50F5               	movf	tablat,w,c
   939   0008E0  6E25               	movwf	strchr@c^0,c
   940   0008E2  6A26               	clrf	(strchr@c+1)^0,c
   941   0008E4  ECEF  F004         	call	_strchr	;wreg free
   942   0008E8  6E29               	movwf	strstr@h^0,c
   943   0008EA                     l1153:
   944   0008EA  5029               	movf	strstr@h^0,w,c
   945   0008EC  B4D8               	btfsc	status,2,c
   946   0008EE  EF7B  F004         	goto	u401
   947   0008F2  EF7D  F004         	goto	u400
   948   0008F6                     u401:
   949   0008F6  EF88  F004         	goto	l1157
   950   0008FA                     u400:
   951   0008FA  5029               	movf	strstr@h^0,w,c
   952   0008FC  6ED9               	movwf	fsr2l,c
   953   0008FE  6ADA               	clrf	fsr2h,c
   954   000900  50DF               	movf	indf2,w,c
   955   000902  A4D8               	btfss	status,2,c
   956   000904  EF86  F004         	goto	u411
   957   000908  EF88  F004         	goto	u410
   958   00090C                     u411:
   959   00090C  EF52  F004         	goto	l1145
   960   000910                     u410:
   961   000910                     l1157:
   962   000910  0E00               	movlw	0
   963   000912                     l831:
   964   000912  0012               	return		;funcret
   965   000914                     __end_of_strstr:
   966                           	callstack 0
   967                           
   968 ;; *************** function _strncmp *****************
   969 ;; Defined at:
   970 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strncmp.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;  l               1    3[COMRAM] PTR const unsigned char 
   973 ;;		 -> NULL(0), uart_rx_buffer(10), 
   974 ;;  r               1    4[COMRAM] PTR const unsigned char 
   975 ;;		 -> STR_17(9), STR_15(9), STR_13(9), STR_11(9), 
   976 ;;		 -> STR_9(9), STR_7(9), STR_5(9), STR_2(9), 
   977 ;;  n               2    5[COMRAM] unsigned int 
   978 ;; Auto vars:     Size  Location     Type
   979 ;;		None
   980 ;; Return value:  Size  Location     Type
   981 ;;                  2    3[COMRAM] int 
   982 ;; Registers used:
   983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   989 ;;      Params:         4       0       0       0       0       0       0
   990 ;;      Locals:         0       0       0       0       0       0       0
   991 ;;      Temps:          1       0       0       0       0       0       0
   992 ;;      Totals:         5       0       0       0       0       0       0
   993 ;;Total ram usage:        5 bytes
   994 ;; Hardware stack levels used: 1
   995 ;; Hardware stack levels required when called: 1
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_strstr
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           	psect	text2
  1004   0007C4                     __ptext2:
  1005                           	callstack 0
  1006   0007C4                     _strncmp:
  1007                           	callstack 28
  1008   0007C4  0626               	decf	strncmp@n^0,f,c
  1009   0007C6  A0D8               	btfss	status,0,c
  1010   0007C8  0627               	decf	(strncmp@n+1)^0,f,c
  1011   0007CA  2826               	incf	strncmp@n^0,w,c
  1012   0007CC  E106               	bnz	u301
  1013   0007CE  2827               	incf	(strncmp@n+1)^0,w,c
  1014   0007D0  A4D8               	btfss	status,2,c
  1015   0007D2  EFED  F003         	goto	u301
  1016   0007D6  EFEF  F003         	goto	u300
  1017   0007DA                     u301:
  1018   0007DA  EFFA  F003         	goto	l1067
  1019   0007DE                     u300:
  1020   0007DE  0E00               	movlw	0
  1021   0007E0  6E25               	movwf	(?_strncmp+1)^0,c
  1022   0007E2  0E00               	movlw	0
  1023   0007E4  6E24               	movwf	?_strncmp^0,c
  1024   0007E6  EF3F  F004         	goto	l850
  1025   0007EA                     l1065:
  1026   0007EA  2A24               	incf	strncmp@l^0,f,c
  1027   0007EC  2A25               	incf	strncmp@r^0,f,c
  1028   0007EE  0626               	decf	strncmp@n^0,f,c
  1029   0007F0  A0D8               	btfss	status,0,c
  1030   0007F2  0627               	decf	(strncmp@n+1)^0,f,c
  1031   0007F4                     l1067:
  1032   0007F4  5024               	movf	strncmp@l^0,w,c
  1033   0007F6  6ED9               	movwf	fsr2l,c
  1034   0007F8  6ADA               	clrf	fsr2h,c
  1035   0007FA  50DF               	movf	indf2,w,c
  1036   0007FC  B4D8               	btfsc	status,2,c
  1037   0007FE  EF03  F004         	goto	u311
  1038   000802  EF05  F004         	goto	u310
  1039   000806                     u311:
  1040   000806  EF2F  F004         	goto	l1075
  1041   00080A                     u310:
  1042   00080A  C025  FFF6         	movff	strncmp@r,tblptrl
  1043   00080E                     	if	1	;There is more than 1 active tblptr byte
  1044   00080E  0E06               	movlw	high __smallconst
  1045   000810  6EF7               	movwf	tblptrh,c
  1046   000812                     	endif
  1047   000812                     	if	0	;tblptru may be non-zero
  1048   000812                     	endif
  1049   000812                     	if	0	;tblptru may be non-zero
  1050   000812                     	endif
  1051   000812  0008               	tblrd		*
  1052   000814  50F5               	movf	tablat,w,c
  1053   000816  0900               	iorlw	0
  1054   000818  B4D8               	btfsc	status,2,c
  1055   00081A  EF11  F004         	goto	u321
  1056   00081E  EF13  F004         	goto	u320
  1057   000822                     u321:
  1058   000822  EF2F  F004         	goto	l1075
  1059   000826                     u320:
  1060   000826  5026               	movf	strncmp@n^0,w,c
  1061   000828  1027               	iorwf	(strncmp@n+1)^0,w,c
  1062   00082A  B4D8               	btfsc	status,2,c
  1063   00082C  EF1A  F004         	goto	u331
  1064   000830  EF1C  F004         	goto	u330
  1065   000834                     u331:
  1066   000834  EF2F  F004         	goto	l1075
  1067   000838                     u330:
  1068   000838  5024               	movf	strncmp@l^0,w,c
  1069   00083A  6ED9               	movwf	fsr2l,c
  1070   00083C  6ADA               	clrf	fsr2h,c
  1071   00083E  50DF               	movf	indf2,w,c
  1072   000840  6E28               	movwf	??_strncmp^0,c
  1073   000842  C025  FFF6         	movff	strncmp@r,tblptrl
  1074   000846                     	if	1	;There is more than 1 active tblptr byte
  1075   000846  0E06               	movlw	high __smallconst
  1076   000848  6EF7               	movwf	tblptrh,c
  1077   00084A                     	endif
  1078   00084A                     	if	0	;tblptru may be non-zero
  1079   00084A                     	endif
  1080   00084A                     	if	0	;tblptru may be non-zero
  1081   00084A                     	endif
  1082   00084A  0008               	tblrd		*
  1083   00084C  50F5               	movf	tablat,w,c
  1084   00084E  1828               	xorwf	??_strncmp^0,w,c
  1085   000850  B4D8               	btfsc	status,2,c
  1086   000852  EF2D  F004         	goto	u341
  1087   000856  EF2F  F004         	goto	u340
  1088   00085A                     u341:
  1089   00085A  EFF5  F003         	goto	l1065
  1090   00085E                     u340:
  1091   00085E                     l1075:
  1092   00085E  5024               	movf	strncmp@l^0,w,c
  1093   000860  6ED9               	movwf	fsr2l,c
  1094   000862  6ADA               	clrf	fsr2h,c
  1095   000864  50DF               	movf	indf2,w,c
  1096   000866  6E28               	movwf	??_strncmp^0,c
  1097   000868  C025  FFF6         	movff	strncmp@r,tblptrl
  1098   00086C                     	if	1	;There is more than 1 active tblptr byte
  1099   00086C  0E06               	movlw	high __smallconst
  1100   00086E  6EF7               	movwf	tblptrh,c
  1101   000870                     	endif
  1102   000870                     	if	0	;tblptru may be non-zero
  1103   000870                     	endif
  1104   000870                     	if	0	;tblptru may be non-zero
  1105   000870                     	endif
  1106   000870  0008               	tblrd		*
  1107   000872  50F5               	movf	tablat,w,c
  1108   000874  5C28               	subwf	??_strncmp^0,w,c
  1109   000876  6E24               	movwf	?_strncmp^0,c
  1110   000878  6A25               	clrf	(?_strncmp+1)^0,c
  1111   00087A  A0D8               	btfss	status,0,c
  1112   00087C  0625               	decf	(?_strncmp+1)^0,f,c
  1113   00087E                     l850:
  1114   00087E  0012               	return		;funcret
  1115   000880                     __end_of_strncmp:
  1116                           	callstack 0
  1117                           
  1118 ;; *************** function _strlen *****************
  1119 ;; Defined at:
  1120 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  s               1    3[COMRAM] PTR const unsigned char 
  1123 ;;		 -> STR_17(9), STR_15(9), STR_13(9), STR_11(9), 
  1124 ;;		 -> STR_9(9), STR_7(9), STR_5(9), STR_2(9), 
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  a               1    5[COMRAM] PTR const unsigned char 
  1127 ;;		 -> STR_17(9), STR_15(9), STR_13(9), STR_11(9), 
  1128 ;;		 -> STR_9(9), STR_7(9), STR_5(9), STR_2(9), 
  1129 ;; Return value:  Size  Location     Type
  1130 ;;                  2    3[COMRAM] unsigned int 
  1131 ;; Registers used:
  1132 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1133 ;; Tracked objects:
  1134 ;;		On entry : 0/0
  1135 ;;		On exit  : 0/0
  1136 ;;		Unchanged: 0/0
  1137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1138 ;;      Params:         2       0       0       0       0       0       0
  1139 ;;      Locals:         1       0       0       0       0       0       0
  1140 ;;      Temps:          0       0       0       0       0       0       0
  1141 ;;      Totals:         3       0       0       0       0       0       0
  1142 ;;Total ram usage:        3 bytes
  1143 ;; Hardware stack levels used: 1
  1144 ;; Hardware stack levels required when called: 1
  1145 ;; This function calls:
  1146 ;;		Nothing
  1147 ;; This function is called by:
  1148 ;;		_strstr
  1149 ;; This function uses a non-reentrant model
  1150 ;;
  1151                           
  1152                           	psect	text3
  1153   000A18                     __ptext3:
  1154                           	callstack 0
  1155   000A18                     _strlen:
  1156                           	callstack 28
  1157   000A18  C024  F026         	movff	strlen@s,strlen@a
  1158   000A1C  EF11  F005         	goto	l1053
  1159   000A20                     l1051:
  1160   000A20  2A24               	incf	strlen@s^0,f,c
  1161   000A22                     l1053:
  1162   000A22  C024  FFF6         	movff	strlen@s,tblptrl
  1163   000A26                     	if	1	;There is more than 1 active tblptr byte
  1164   000A26  0E06               	movlw	high __smallconst
  1165   000A28  6EF7               	movwf	tblptrh,c
  1166   000A2A                     	endif
  1167   000A2A                     	if	0	;tblptru may be non-zero
  1168   000A2A                     	endif
  1169   000A2A                     	if	0	;tblptru may be non-zero
  1170   000A2A                     	endif
  1171   000A2A  0008               	tblrd		*
  1172   000A2C  50F5               	movf	tablat,w,c
  1173   000A2E  0900               	iorlw	0
  1174   000A30  A4D8               	btfss	status,2,c
  1175   000A32  EF1D  F005         	goto	u291
  1176   000A36  EF1F  F005         	goto	u290
  1177   000A3A                     u291:
  1178   000A3A  EF10  F005         	goto	l1051
  1179   000A3E                     u290:
  1180   000A3E  5026               	movf	strlen@a^0,w,c
  1181   000A40  5C24               	subwf	strlen@s^0,w,c
  1182   000A42  6E24               	movwf	?_strlen^0,c
  1183   000A44  6A25               	clrf	(?_strlen+1)^0,c
  1184   000A46  BE24               	btfsc	?_strlen^0,7,c
  1185   000A48  0625               	decf	(?_strlen+1)^0,f,c
  1186   000A4A  0012               	return		;funcret
  1187   000A4C                     __end_of_strlen:
  1188                           	callstack 0
  1189                           
  1190 ;; *************** function _strchr *****************
  1191 ;; Defined at:
  1192 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strchr.c"
  1193 ;; Parameters:    Size  Location     Type
  1194 ;;  s               1    3[COMRAM] PTR const unsigned char 
  1195 ;;		 -> NULL(0), uart_rx_buffer(10), 
  1196 ;;  c               2    4[COMRAM] int 
  1197 ;; Auto vars:     Size  Location     Type
  1198 ;;		None
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  1    3[COMRAM] PTR unsigned char 
  1201 ;; Registers used:
  1202 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1203 ;; Tracked objects:
  1204 ;;		On entry : 0/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1208 ;;      Params:         3       0       0       0       0       0       0
  1209 ;;      Locals:         0       0       0       0       0       0       0
  1210 ;;      Temps:          1       0       0       0       0       0       0
  1211 ;;      Totals:         4       0       0       0       0       0       0
  1212 ;;Total ram usage:        4 bytes
  1213 ;; Hardware stack levels used: 1
  1214 ;; Hardware stack levels required when called: 1
  1215 ;; This function calls:
  1216 ;;		Nothing
  1217 ;; This function is called by:
  1218 ;;		_strstr
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text4
  1223   0009DE                     __ptext4:
  1224                           	callstack 0
  1225   0009DE                     _strchr:
  1226                           	callstack 28
  1227   0009DE                     l837:
  1228   0009DE  5024               	movf	strchr@s^0,w,c
  1229   0009E0  6ED9               	movwf	fsr2l,c
  1230   0009E2  6ADA               	clrf	fsr2h,c
  1231   0009E4  5025               	movf	strchr@c^0,w,c
  1232   0009E6  18DE               	xorwf	postinc2,w,c
  1233   0009E8  A4D8               	btfss	status,2,c
  1234   0009EA  EFF9  F004         	goto	u351
  1235   0009EE  EFFB  F004         	goto	u350
  1236   0009F2                     u351:
  1237   0009F2  EFFE  F004         	goto	l1085
  1238   0009F6                     u350:
  1239   0009F6  5024               	movf	strchr@s^0,w,c
  1240   0009F8  EF0B  F005         	goto	l839
  1241   0009FC                     l1085:
  1242   0009FC  2A24               	incf	strchr@s^0,f,c
  1243   0009FE  0424               	decf	strchr@s^0,w,c
  1244   000A00  6ED9               	movwf	fsr2l,c
  1245   000A02  6ADA               	clrf	fsr2h,c
  1246   000A04  50DF               	movf	indf2,w,c
  1247   000A06  A4D8               	btfss	status,2,c
  1248   000A08  EF08  F005         	goto	u361
  1249   000A0C  EF0A  F005         	goto	u360
  1250   000A10                     u361:
  1251   000A10  EFEF  F004         	goto	l837
  1252   000A14                     u360:
  1253   000A14  0E00               	movlw	0
  1254   000A16                     l839:
  1255   000A16  0012               	return		;funcret
  1256   000A18                     __end_of_strchr:
  1257                           	callstack 0
  1258                           
  1259 ;; *************** function _latch_data *****************
  1260 ;; Defined at:
  1261 ;;		line 45 in file "main.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  seg_data        1    wreg     unsigned char 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  seg_data        1    3[COMRAM] unsigned char 
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      void 
  1268 ;; Registers used:
  1269 ;;		wreg
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1275 ;;      Params:         0       0       0       0       0       0       0
  1276 ;;      Locals:         1       0       0       0       0       0       0
  1277 ;;      Temps:          0       0       0       0       0       0       0
  1278 ;;      Totals:         1       0       0       0       0       0       0
  1279 ;;Total ram usage:        1 bytes
  1280 ;; Hardware stack levels used: 1
  1281 ;; Hardware stack levels required when called: 1
  1282 ;; This function calls:
  1283 ;;		Nothing
  1284 ;; This function is called by:
  1285 ;;		_main
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           	psect	text5
  1290   000AAE                     __ptext5:
  1291                           	callstack 0
  1292   000AAE                     _latch_data:
  1293                           	callstack 29
  1294                           
  1295                           ;incstack = 0
  1296                           ;latch_data@seg_data stored from wreg
  1297   000AAE  6E24               	movwf	latch_data@seg_data^0,c
  1298   000AB0                     
  1299                           ;main.c: 45: };main.c: 46: ;main.c: 48: void SelectIO(uint8_t index)
  1300   000AB0  C024  FF8C         	movff	latch_data@seg_data,3980	;volatile
  1301   000AB4                     
  1302                           ;main.c: 51:     LATAbits.LATA0 = 0;
  1303   000AB4  928A               	bcf	138,1,c	;volatile
  1304   000AB6                     
  1305                           ;main.c: 52:     LATAbits.LATA1 = 0;
  1306   000AB6  0E08               	movlw	8
  1307   000AB8                     u557:
  1308   000AB8  2EE8               	decfsz	wreg,f,c
  1309   000ABA  D7FE               	bra	u557
  1310   000ABC  0000               	nop	
  1311   000ABE                     
  1312                           ;main.c: 53:     LATAbits.LATA2 = 0;
  1313   000ABE  828A               	bsf	138,1,c	;volatile
  1314   000AC0                     
  1315                           ;main.c: 54:     LATAbits.LATA3 = 0;
  1316   000AC0  0E08               	movlw	8
  1317   000AC2                     u567:
  1318   000AC2  2EE8               	decfsz	wreg,f,c
  1319   000AC4  D7FE               	bra	u567
  1320   000AC6  0000               	nop	
  1321   000AC8                     
  1322                           ;main.c: 55:     LATAbits.LATA5 = 0;
  1323   000AC8  928A               	bcf	138,1,c	;volatile
  1324   000ACA  0012               	return		;funcret
  1325   000ACC                     __end_of_latch_data:
  1326                           	callstack 0
  1327                           
  1328 ;; *************** function _init_ports *****************
  1329 ;; Defined at:
  1330 ;;		line 65 in file "main.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;		None
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;		None
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		None
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1344 ;;      Params:         0       0       0       0       0       0       0
  1345 ;;      Locals:         0       0       0       0       0       0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0
  1347 ;;      Totals:         0       0       0       0       0       0       0
  1348 ;;Total ram usage:        0 bytes
  1349 ;; Hardware stack levels used: 1
  1350 ;; Hardware stack levels required when called: 1
  1351 ;; This function calls:
  1352 ;;		Nothing
  1353 ;; This function is called by:
  1354 ;;		_main
  1355 ;; This function uses a non-reentrant model
  1356 ;;
  1357                           
  1358                           	psect	text6
  1359   000B1A                     __ptext6:
  1360                           	callstack 0
  1361   000B1A                     _init_ports:
  1362                           	callstack 29
  1363   000B1A                     
  1364                           ;main.c: 69:             break;
  1365   000B1A  9293               	bcf	147,1,c	;volatile
  1366                           
  1367                           ;main.c: 73: 
  1368   000B1C  9092               	bcf	146,0,c	;volatile
  1369                           
  1370                           ;main.c: 74:         case 2:
  1371   000B1E  9292               	bcf	146,1,c	;volatile
  1372                           
  1373                           ;main.c: 75:             LATEbits.LATE0 = 1;
  1374   000B20  9492               	bcf	146,2,c	;volatile
  1375                           
  1376                           ;main.c: 76:             break;
  1377   000B22  9692               	bcf	146,3,c	;volatile
  1378                           
  1379                           ;main.c: 77: 
  1380   000B24  9A92               	bcf	146,5,c	;volatile
  1381                           
  1382                           ;main.c: 78:         case 1:
  1383   000B26  9096               	bcf	150,0,c	;volatile
  1384                           
  1385                           ;main.c: 80:             break;
  1386   000B28  928A               	bcf	138,1,c	;volatile
  1387   000B2A  0012               	return		;funcret
  1388   000B2C                     __end_of_init_ports:
  1389                           	callstack 0
  1390                           
  1391 ;; *************** function _delay_ms *****************
  1392 ;; Defined at:
  1393 ;;		line 37 in file "main.c"
  1394 ;; Parameters:    Size  Location     Type
  1395 ;;  ms              2    3[COMRAM] unsigned int 
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;		None
  1398 ;; Return value:  Size  Location     Type
  1399 ;;                  1    wreg      void 
  1400 ;; Registers used:
  1401 ;;		wreg, status,2, status,0
  1402 ;; Tracked objects:
  1403 ;;		On entry : 0/0
  1404 ;;		On exit  : 0/0
  1405 ;;		Unchanged: 0/0
  1406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1407 ;;      Params:         2       0       0       0       0       0       0
  1408 ;;      Locals:         0       0       0       0       0       0       0
  1409 ;;      Temps:          1       0       0       0       0       0       0
  1410 ;;      Totals:         3       0       0       0       0       0       0
  1411 ;;Total ram usage:        3 bytes
  1412 ;; Hardware stack levels used: 1
  1413 ;; Hardware stack levels required when called: 1
  1414 ;; This function calls:
  1415 ;;		Nothing
  1416 ;; This function is called by:
  1417 ;;		_main
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           	psect	text7
  1422   000A80                     __ptext7:
  1423                           	callstack 0
  1424   000A80                     _delay_ms:
  1425                           	callstack 29
  1426   000A80                     
  1427                           ;main.c: 37:     TRISAbits.TRISA1 = 0;;main.c: 38:     TRISAbits.TRISA2 = 0;;main.c: 39:
      +                               TRISAbits.TRISA3 = 0;
  1428   000A80  EF49  F005         	goto	l1095
  1429   000A84                     l1093:
  1430                           
  1431                           ;main.c: 40:     TRISAbits.TRISA5 = 0;;main.c: 41:     TRISEbits.TRISE0 = 0;
  1432   000A84  0E04               	movlw	4
  1433   000A86  6E26               	movwf	??_delay_ms^0,c
  1434   000A88  0E3E               	movlw	62
  1435   000A8A                     u577:
  1436   000A8A  2EE8               	decfsz	wreg,f,c
  1437   000A8C  D7FE               	bra	u577
  1438   000A8E  2E26               	decfsz	??_delay_ms^0,f,c
  1439   000A90  D7FC               	bra	u577
  1440   000A92                     l1095:
  1441                           
  1442                           ;main.c: 39:     TRISAbits.TRISA3 = 0;
  1443   000A92  0624               	decf	delay_ms@ms^0,f,c
  1444   000A94  A0D8               	btfss	status,0,c
  1445   000A96  0625               	decf	(delay_ms@ms+1)^0,f,c
  1446   000A98  2824               	incf	delay_ms@ms^0,w,c
  1447   000A9A  E106               	bnz	u371
  1448   000A9C  2825               	incf	(delay_ms@ms+1)^0,w,c
  1449   000A9E  A4D8               	btfss	status,2,c
  1450   000AA0  EF54  F005         	goto	u371
  1451   000AA4  EF56  F005         	goto	u370
  1452   000AA8                     u371:
  1453   000AA8  EF42  F005         	goto	l1093
  1454   000AAC                     u370:
  1455   000AAC  0012               	return		;funcret
  1456   000AAE                     __end_of_delay_ms:
  1457                           	callstack 0
  1458                           
  1459 ;; *************** function _UART_SendString *****************
  1460 ;; Defined at:
  1461 ;;		line 44 in file "u_uart.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  str             1    4[COMRAM] PTR const unsigned char 
  1464 ;;		 -> STR_3(11), 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;		None
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      void 
  1469 ;; Registers used:
  1470 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1476 ;;      Params:         1       0       0       0       0       0       0
  1477 ;;      Locals:         0       0       0       0       0       0       0
  1478 ;;      Temps:          0       0       0       0       0       0       0
  1479 ;;      Totals:         1       0       0       0       0       0       0
  1480 ;;Total ram usage:        1 bytes
  1481 ;; Hardware stack levels used: 1
  1482 ;; Hardware stack levels required when called: 2
  1483 ;; This function calls:
  1484 ;;		_UART_SendChar
  1485 ;; This function is called by:
  1486 ;;		_main
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text8
  1491   000A4C                     __ptext8:
  1492                           	callstack 0
  1493   000A4C                     _UART_SendString:
  1494                           	callstack 28
  1495   000A4C                     
  1496                           ;u_uart.c: 44: void UART_SendString(const char* str);u_uart.c: 45: {;u_uart.c: 46:     w
      +                          hile (*str)
  1497   000A4C  EF31  F005         	goto	l1167
  1498   000A50                     l1163:
  1499                           
  1500                           ;u_uart.c: 47:         UART_SendChar(*str++);
  1501   000A50  C025  FFF6         	movff	UART_SendString@str,tblptrl
  1502   000A54                     	if	1	;There is more than 1 active tblptr byte
  1503   000A54  0E06               	movlw	high __smallconst
  1504   000A56  6EF7               	movwf	tblptrh,c
  1505   000A58                     	endif
  1506   000A58                     	if	0	;tblptru may be non-zero
  1507   000A58                     	endif
  1508   000A58                     	if	0	;tblptru may be non-zero
  1509   000A58                     	endif
  1510   000A58  0008               	tblrd		*
  1511   000A5A  50F5               	movf	tablat,w,c
  1512   000A5C  EC82  F005         	call	_UART_SendChar
  1513   000A60  2A25               	incf	UART_SendString@str^0,f,c
  1514   000A62                     l1167:
  1515                           
  1516                           ;u_uart.c: 46:     while (*str)
  1517   000A62  C025  FFF6         	movff	UART_SendString@str,tblptrl
  1518   000A66                     	if	1	;There is more than 1 active tblptr byte
  1519   000A66  0E06               	movlw	high __smallconst
  1520   000A68  6EF7               	movwf	tblptrh,c
  1521   000A6A                     	endif
  1522   000A6A                     	if	0	;tblptru may be non-zero
  1523   000A6A                     	endif
  1524   000A6A                     	if	0	;tblptru may be non-zero
  1525   000A6A                     	endif
  1526   000A6A  0008               	tblrd		*
  1527   000A6C  50F5               	movf	tablat,w,c
  1528   000A6E  0900               	iorlw	0
  1529   000A70  A4D8               	btfss	status,2,c
  1530   000A72  EF3D  F005         	goto	u421
  1531   000A76  EF3F  F005         	goto	u420
  1532   000A7A                     u421:
  1533   000A7A  EF28  F005         	goto	l1163
  1534   000A7E                     u420:
  1535   000A7E  0012               	return		;funcret
  1536   000A80                     __end_of_UART_SendString:
  1537                           	callstack 0
  1538                           
  1539 ;; *************** function _UART_SendChar *****************
  1540 ;; Defined at:
  1541 ;;		line 37 in file "u_uart.c"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  ch              1    wreg     unsigned char 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  ch              1    3[COMRAM] unsigned char 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1555 ;;      Params:         0       0       0       0       0       0       0
  1556 ;;      Locals:         1       0       0       0       0       0       0
  1557 ;;      Temps:          0       0       0       0       0       0       0
  1558 ;;      Totals:         1       0       0       0       0       0       0
  1559 ;;Total ram usage:        1 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; Hardware stack levels required when called: 1
  1562 ;; This function calls:
  1563 ;;		Nothing
  1564 ;; This function is called by:
  1565 ;;		_UART_SendString
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text9
  1570   000B04                     __ptext9:
  1571                           	callstack 0
  1572   000B04                     _UART_SendChar:
  1573                           	callstack 28
  1574                           
  1575                           ;incstack = 0
  1576                           ;UART_SendChar@ch stored from wreg
  1577   000B04  6E24               	movwf	UART_SendChar@ch^0,c
  1578   000B06                     l127:
  1579                           
  1580                           ;u_uart.c: 39:     while (!TXIF)
  1581   000B06  A89E               	btfss	3998,4,c	;volatile
  1582   000B08  EF88  F005         	goto	u281
  1583   000B0C  EF8A  F005         	goto	u280
  1584   000B10                     u281:
  1585   000B10  EF83  F005         	goto	l127
  1586   000B14                     u280:
  1587   000B14                     
  1588                           ;u_uart.c: 41:     TXREG = ch;
  1589   000B14  C024  FFAD         	movff	UART_SendChar@ch,4013	;volatile
  1590   000B18  0012               	return		;funcret
  1591   000B1A                     __end_of_UART_SendChar:
  1592                           	callstack 0
  1593                           
  1594 ;; *************** function _UART_Init *****************
  1595 ;; Defined at:
  1596 ;;		line 17 in file "u_uart.c"
  1597 ;; Parameters:    Size  Location     Type
  1598 ;;		None
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;		None
  1601 ;; Return value:  Size  Location     Type
  1602 ;;                  1    wreg      void 
  1603 ;; Registers used:
  1604 ;;		wreg, status,2
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1610 ;;      Params:         0       0       0       0       0       0       0
  1611 ;;      Locals:         0       0       0       0       0       0       0
  1612 ;;      Temps:          0       0       0       0       0       0       0
  1613 ;;      Totals:         0       0       0       0       0       0       0
  1614 ;;Total ram usage:        0 bytes
  1615 ;; Hardware stack levels used: 1
  1616 ;; Hardware stack levels required when called: 1
  1617 ;; This function calls:
  1618 ;;		Nothing
  1619 ;; This function is called by:
  1620 ;;		_main
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text10
  1625   000ACC                     __ptext10:
  1626                           	callstack 0
  1627   000ACC                     _UART_Init:
  1628                           	callstack 29
  1629   000ACC                     
  1630                           ;u_uart.c: 19:     TRISC6 = 0;
  1631   000ACC  9C94               	bcf	3988,6,c	;volatile
  1632                           
  1633                           ;u_uart.c: 20:     TRISC7 = 1;
  1634   000ACE  8E94               	bsf	3988,7,c	;volatile
  1635   000AD0                     
  1636                           ;u_uart.c: 22:     SPBRG = 15;
  1637   000AD0  0E0F               	movlw	15
  1638   000AD2  6EAF               	movwf	175,c	;volatile
  1639   000AD4                     
  1640                           ;u_uart.c: 23:     BRGH = 0;
  1641   000AD4  94AC               	bcf	4012,2,c	;volatile
  1642   000AD6                     
  1643                           ;u_uart.c: 24:     BRG16 = 0;
  1644   000AD6  96B8               	bcf	4024,3,c	;volatile
  1645   000AD8                     
  1646                           ;u_uart.c: 26:     SYNC = 0;
  1647   000AD8  98AC               	bcf	4012,4,c	;volatile
  1648   000ADA                     
  1649                           ;u_uart.c: 27:     SPEN = 1;
  1650   000ADA  8EAB               	bsf	4011,7,c	;volatile
  1651   000ADC                     
  1652                           ;u_uart.c: 28:     TXEN = 1;
  1653   000ADC  8AAC               	bsf	4012,5,c	;volatile
  1654   000ADE                     
  1655                           ;u_uart.c: 29:     CREN = 1;
  1656   000ADE  88AB               	bsf	4011,4,c	;volatile
  1657   000AE0                     
  1658                           ;u_uart.c: 31:     RCIF = 0;
  1659   000AE0  9A9E               	bcf	3998,5,c	;volatile
  1660   000AE2                     
  1661                           ;u_uart.c: 32:     RCIE = 1;
  1662   000AE2  8A9D               	bsf	3997,5,c	;volatile
  1663   000AE4                     
  1664                           ;u_uart.c: 33:     PEIE = 1;
  1665   000AE4  8CF2               	bsf	4082,6,c	;volatile
  1666   000AE6                     
  1667                           ;u_uart.c: 34:     GIE = 1;
  1668   000AE6  8EF2               	bsf	4082,7,c	;volatile
  1669   000AE8  0012               	return		;funcret
  1670   000AEA                     __end_of_UART_Init:
  1671                           	callstack 0
  1672                           
  1673 ;; *************** function _SelectIO *****************
  1674 ;; Defined at:
  1675 ;;		line 85 in file "main.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  index           1    wreg     unsigned char 
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  index           1    3[COMRAM] unsigned char 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;                  1    wreg      void 
  1682 ;; Registers used:
  1683 ;;		wreg, status,2, status,0
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1689 ;;      Params:         0       0       0       0       0       0       0
  1690 ;;      Locals:         1       0       0       0       0       0       0
  1691 ;;      Temps:          0       0       0       0       0       0       0
  1692 ;;      Totals:         1       0       0       0       0       0       0
  1693 ;;Total ram usage:        1 bytes
  1694 ;; Hardware stack levels used: 1
  1695 ;; Hardware stack levels required when called: 1
  1696 ;; This function calls:
  1697 ;;		Nothing
  1698 ;; This function is called by:
  1699 ;;		_main
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text11
  1704   000914                     __ptext11:
  1705                           	callstack 0
  1706   000914                     _SelectIO:
  1707                           	callstack 29
  1708                           
  1709                           ;incstack = 0
  1710                           ;SelectIO@index stored from wreg
  1711   000914  6E24               	movwf	SelectIO@index^0,c
  1712   000916                     
  1713                           ;main.c: 85: ;main.c: 86: char buffer[20];;main.c: 88: void main(void)
  1714   000916  9089               	bcf	137,0,c	;volatile
  1715                           
  1716                           ;main.c: 89: {
  1717   000918  9289               	bcf	137,1,c	;volatile
  1718                           
  1719                           ;main.c: 90:     delay_ms(500);
  1720   00091A  9489               	bcf	137,2,c	;volatile
  1721                           
  1722                           ;main.c: 91: 
  1723   00091C  9689               	bcf	137,3,c	;volatile
  1724                           
  1725                           ;main.c: 92:     UART_Init();
  1726   00091E  9A89               	bcf	137,5,c	;volatile
  1727                           
  1728                           ;main.c: 93: 
  1729   000920  908D               	bcf	141,0,c	;volatile
  1730                           
  1731                           ;main.c: 96: 
  1732   000922  EFA5  F004         	goto	l1115
  1733   000926                     l49:
  1734                           
  1735                           ;main.c: 99: 
  1736   000926  8089               	bsf	137,0,c	;volatile
  1737                           
  1738                           ;main.c: 100:     while (1)
  1739   000928  EFC0  F004         	goto	l57
  1740   00092C                     l51:
  1741                           
  1742                           ;main.c: 102:         if (uart_frame_ready)
  1743   00092C  8289               	bsf	137,1,c	;volatile
  1744                           
  1745                           ;main.c: 103:         {
  1746   00092E  EFC0  F004         	goto	l57
  1747   000932                     l52:
  1748                           
  1749                           ;main.c: 105: 
  1750   000932  8489               	bsf	137,2,c	;volatile
  1751                           
  1752                           ;main.c: 106: 
  1753   000934  EFC0  F004         	goto	l57
  1754   000938                     l53:
  1755                           
  1756                           ;main.c: 108: 
  1757   000938  8689               	bsf	137,3,c	;volatile
  1758                           
  1759                           ;main.c: 109: 
  1760   00093A  EFC0  F004         	goto	l57
  1761   00093E                     l54:
  1762                           
  1763                           ;main.c: 112:             if (strstr((char*)uart_rx_buffer, "CONN_REQ"))
  1764   00093E  808D               	bsf	141,0,c	;volatile
  1765                           
  1766                           ;main.c: 113:             {
  1767   000940  EFC0  F004         	goto	l57
  1768   000944                     l55:
  1769                           
  1770                           ;main.c: 116:             else if (strstr((char*)uart_rx_buffer, "SHOW_001"))
  1771   000944  8A89               	bsf	137,5,c	;volatile
  1772                           
  1773                           ;main.c: 117:             {
  1774   000946  EFC0  F004         	goto	l57
  1775   00094A                     l1115:
  1776   00094A  5024               	movf	SelectIO@index^0,w,c
  1777                           
  1778                           ; Switch size 1, requested type "simple"
  1779                           ; Number of cases is 6, Range of values is 1 to 6
  1780                           ; switch strategies available:
  1781                           ; Name         Instructions Cycles
  1782                           ; simple_byte           19    10 (average)
  1783                           ;	Chosen strategy is simple_byte
  1784   00094C  0A01               	xorlw	1	; case 1
  1785   00094E  B4D8               	btfsc	status,2,c
  1786   000950  EFA2  F004         	goto	l55
  1787   000954  0A03               	xorlw	3	; case 2
  1788   000956  B4D8               	btfsc	status,2,c
  1789   000958  EF9F  F004         	goto	l54
  1790   00095C  0A01               	xorlw	1	; case 3
  1791   00095E  B4D8               	btfsc	status,2,c
  1792   000960  EF9C  F004         	goto	l53
  1793   000964  0A07               	xorlw	7	; case 4
  1794   000966  B4D8               	btfsc	status,2,c
  1795   000968  EF99  F004         	goto	l52
  1796   00096C  0A01               	xorlw	1	; case 5
  1797   00096E  B4D8               	btfsc	status,2,c
  1798   000970  EF96  F004         	goto	l51
  1799   000974  0A03               	xorlw	3	; case 6
  1800   000976  B4D8               	btfsc	status,2,c
  1801   000978  EF93  F004         	goto	l49
  1802   00097C  EFC0  F004         	goto	l57
  1803   000980                     l57:
  1804   000980  0012               	return		;funcret
  1805   000982                     __end_of_SelectIO:
  1806                           	callstack 0
  1807                           
  1808 ;; *************** function _ISR *****************
  1809 ;; Defined at:
  1810 ;;		line 51 in file "u_uart.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;  received        1    2[COMRAM] unsigned char 
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  1    wreg      void 
  1817 ;; Registers used:
  1818 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1824 ;;      Params:         0       0       0       0       0       0       0
  1825 ;;      Locals:         1       0       0       0       0       0       0
  1826 ;;      Temps:          2       0       0       0       0       0       0
  1827 ;;      Totals:         3       0       0       0       0       0       0
  1828 ;;Total ram usage:        3 bytes
  1829 ;; Hardware stack levels used: 1
  1830 ;; This function calls:
  1831 ;;		Nothing
  1832 ;; This function is called by:
  1833 ;;		Interrupt level 2
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           	psect	intcode
  1838   000008                     __pintcode:
  1839                           	callstack 0
  1840   000008                     _ISR:
  1841                           	callstack 28
  1842                           
  1843                           ;incstack = 0
  1844   000008  822D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1845   00000A  EDC1  F004         	call	int_func,f	;refresh shadow registers
  1846                           
  1847                           	psect	intcode_body
  1848   000982                     __pintcode_body:
  1849                           	callstack 28
  1850   000982                     int_func:
  1851                           	callstack 28
  1852   000982  0006               	pop		; remove dummy address from shadow register refresh
  1853   000984  CFD9 F021          	movff	fsr2l,??_ISR
  1854   000988  CFDA F022          	movff	fsr2h,??_ISR+1
  1855   00098C                     
  1856                           ;u_uart.c: 53:     if (RCIF)
  1857   00098C  AA9E               	btfss	3998,5,c	;volatile
  1858   00098E  EFCB  F004         	goto	i2u52_41
  1859   000992  EFCD  F004         	goto	i2u52_40
  1860   000996                     i2u52_41:
  1861   000996  EFE9  F004         	goto	i2l144
  1862   00099A                     i2u52_40:
  1863   00099A                     
  1864                           ;u_uart.c: 54:     {;u_uart.c: 55:         uint8_t received = RCREG;
  1865   00099A  CFAE F023          	movff	4014,ISR@received	;volatile
  1866   00099E                     
  1867                           ;u_uart.c: 57:         if (uart_frame_ready == 0)
  1868   00099E  5016               	movf	_uart_frame_ready^0,w,c	;volatile
  1869   0009A0  A4D8               	btfss	status,2,c
  1870   0009A2  EFD5  F004         	goto	i2u53_41
  1871   0009A6  EFD7  F004         	goto	i2u53_40
  1872   0009AA                     i2u53_41:
  1873   0009AA  EFE9  F004         	goto	i2l144
  1874   0009AE                     i2u53_40:
  1875   0009AE                     
  1876                           ;u_uart.c: 58:         {;u_uart.c: 59:             uart_rx_buffer[uart_rx_index++] = rec
      +                          eived;
  1877   0009AE  5015               	movf	_uart_rx_index^0,w,c
  1878   0009B0  0F17               	addlw	low _uart_rx_buffer
  1879   0009B2  6ED9               	movwf	fsr2l,c
  1880   0009B4  6ADA               	clrf	fsr2h,c
  1881   0009B6  C023  FFDF         	movff	ISR@received,indf2
  1882   0009BA  2A15               	incf	_uart_rx_index^0,f,c	;volatile
  1883   0009BC                     
  1884                           ;u_uart.c: 60:             if (uart_rx_index >= 10)
  1885   0009BC  0E09               	movlw	9
  1886   0009BE  6415               	cpfsgt	_uart_rx_index^0,c	;volatile
  1887   0009C0  EFE4  F004         	goto	i2u54_41
  1888   0009C4  EFE6  F004         	goto	i2u54_40
  1889   0009C8                     i2u54_41:
  1890   0009C8  EFE9  F004         	goto	i2l144
  1891   0009CC                     i2u54_40:
  1892   0009CC                     
  1893                           ;u_uart.c: 61:             {;u_uart.c: 62:                 uart_frame_ready = 1;
  1894   0009CC  0E01               	movlw	1
  1895   0009CE  6E16               	movwf	_uart_frame_ready^0,c	;volatile
  1896   0009D0                     
  1897                           ;u_uart.c: 63:                 uart_rx_index = 0;
  1898   0009D0  6A15               	clrf	_uart_rx_index^0,c	;volatile
  1899   0009D2                     i2l144:
  1900   0009D2  C022  FFDA         	movff	??_ISR+1,fsr2h
  1901   0009D6  C021  FFD9         	movff	??_ISR,fsr2l
  1902   0009DA  922D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1903   0009DC  0011               	retfie		f
  1904   0009DE                     __end_of_ISR:
  1905                           	callstack 0
  1906                           
  1907                           	psect	rparam
  1908   000001                     ___rparam_used  equ	1
  1909   000000                     ___param_bank   equ	0
  1910   000000                     __Lparam        equ	__Lrparam
  1911   000000                     __Hparam        equ	__Hrparam
  1912                           
  1913                           	psect	temp
  1914   00002D                     btemp:
  1915                           	callstack 0
  1916   00002D                     	ds	1
  1917   00002D                     int$flags       set	btemp
  1918   00002E                     wtemp8          set	btemp+1
  1919   00002E                     ttemp5          set	btemp+1
  1920   000031                     ttemp6          set	btemp+4
  1921   000035                     ttemp7          set	btemp+8
  1922                           
  1923                           	psect	config
  1924                           
  1925                           ; Padding undefined space
  1926   300000                     	org	3145728
  1927   300000  FF                 	db	255
  1928                           
  1929                           ;Config register CONFIG1H @ 0x300001
  1930                           ;	Oscillator Selection bits
  1931                           ;	OSC = HS, HS oscillator
  1932                           ;	Fail-Safe Clock Monitor Enable bit
  1933                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1934                           ;	Internal/External Oscillator Switchover bit
  1935                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1936   300001                     	org	3145729
  1937   300001  02                 	db	2
  1938                           
  1939                           ;Config register CONFIG2L @ 0x300002
  1940                           ;	Power-up Timer Enable bit
  1941                           ;	PWRT = OFF, PWRT disabled
  1942                           ;	Brown-out Reset Enable bits
  1943                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1944                           ;	Brown Out Reset Voltage bits
  1945                           ;	BORV = 3, Minimum setting
  1946   300002                     	org	3145730
  1947   300002  19                 	db	25
  1948                           
  1949                           ;Config register CONFIG2H @ 0x300003
  1950                           ;	Watchdog Timer Enable bit
  1951                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1952                           ;	Watchdog Timer Postscale Select bits
  1953                           ;	WDTPS = 32768, 1:32768
  1954   300003                     	org	3145731
  1955   300003  1E                 	db	30
  1956                           
  1957                           ; Padding undefined space
  1958   300004                     	org	3145732
  1959   300004  FF                 	db	255
  1960                           
  1961                           ;Config register CONFIG3H @ 0x300005
  1962                           ;	CCP2 MUX bit
  1963                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1964                           ;	PORTB A/D Enable bit
  1965                           ;	PBADEN = 0x1, unprogrammed default
  1966                           ;	Low-Power Timer1 Oscillator Enable bit
  1967                           ;	LPT1OSC = 0x0, unprogrammed default
  1968                           ;	MCLR Pin Enable bit
  1969                           ;	MCLRE = 0x1, unprogrammed default
  1970   300005                     	org	3145733
  1971   300005  83                 	db	131
  1972                           
  1973                           ;Config register CONFIG4L @ 0x300006
  1974                           ;	Stack Full/Underflow Reset Enable bit
  1975                           ;	STVREN = 0x1, unprogrammed default
  1976                           ;	Single-Supply ICSP Enable bit
  1977                           ;	LVP = OFF, Single-Supply ICSP disabled
  1978                           ;	Extended Instruction Set Enable bit
  1979                           ;	XINST = 0x0, unprogrammed default
  1980                           ;	Background Debugger Enable bit
  1981                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1982   300006                     	org	3145734
  1983   300006  81                 	db	129
  1984                           
  1985                           ; Padding undefined space
  1986   300007                     	org	3145735
  1987   300007  FF                 	db	255
  1988                           tosu	equ	0xFFF
  1989                           tosh	equ	0xFFE
  1990                           tosl	equ	0xFFD
  1991                           stkptr	equ	0xFFC
  1992                           pclatu	equ	0xFFB
  1993                           pclath	equ	0xFFA
  1994                           pcl	equ	0xFF9
  1995                           tblptru	equ	0xFF8
  1996                           tblptrh	equ	0xFF7
  1997                           tblptrl	equ	0xFF6
  1998                           tablat	equ	0xFF5
  1999                           prodh	equ	0xFF4
  2000                           prodl	equ	0xFF3
  2001                           indf0	equ	0xFEF
  2002                           postinc0	equ	0xFEE
  2003                           postdec0	equ	0xFED
  2004                           preinc0	equ	0xFEC
  2005                           plusw0	equ	0xFEB
  2006                           fsr0h	equ	0xFEA
  2007                           fsr0l	equ	0xFE9
  2008                           wreg	equ	0xFE8
  2009                           indf1	equ	0xFE7
  2010                           postinc1	equ	0xFE6
  2011                           postdec1	equ	0xFE5
  2012                           preinc1	equ	0xFE4
  2013                           plusw1	equ	0xFE3
  2014                           fsr1h	equ	0xFE2
  2015                           fsr1l	equ	0xFE1
  2016                           bsr	equ	0xFE0
  2017                           indf2	equ	0xFDF
  2018                           postinc2	equ	0xFDE
  2019                           postdec2	equ	0xFDD
  2020                           preinc2	equ	0xFDC
  2021                           plusw2	equ	0xFDB
  2022                           fsr2h	equ	0xFDA
  2023                           fsr2l	equ	0xFD9
  2024                           status	equ	0xFD8

Data Sizes:
    Strings     83
    Constant    0
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     12      44
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sp__strchr	PTR unsigned char  size(1) Largest target is 10
		 -> uart_rx_buffer(COMRAM[10]), NULL(NULL[0]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 10
		 -> uart_rx_buffer(COMRAM[10]), NULL(NULL[0]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 10
		 -> uart_rx_buffer(COMRAM[10]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_11(CODE[9]), STR_13(CODE[9]), STR_15(CODE[9]), STR_17(CODE[9]), 
		 -> STR_2(CODE[9]), STR_5(CODE[9]), STR_7(CODE[9]), STR_9(CODE[9]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_11(CODE[9]), STR_13(CODE[9]), STR_15(CODE[9]), STR_17(CODE[9]), 
		 -> STR_2(CODE[9]), STR_5(CODE[9]), STR_7(CODE[9]), STR_9(CODE[9]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 10
		 -> uart_rx_buffer(COMRAM[10]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_11(CODE[9]), STR_13(CODE[9]), STR_15(CODE[9]), STR_17(CODE[9]), 
		 -> STR_2(CODE[9]), STR_5(CODE[9]), STR_7(CODE[9]), STR_9(CODE[9]), 

    strstr@h	PTR const unsigned char  size(1) Largest target is 10
		 -> uart_rx_buffer(COMRAM[10]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_11(CODE[9]), STR_13(CODE[9]), STR_15(CODE[9]), STR_17(CODE[9]), 
		 -> STR_2(CODE[9]), STR_5(CODE[9]), STR_7(CODE[9]), STR_9(CODE[9]), 

    UART_SendString@str	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_3(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_strstr
    _strstr->_strncmp
    _UART_SendString->_UART_SendChar

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     757
                           _SelectIO
                          _UART_Init
                    _UART_SendString
                           _delay_ms
                         _init_ports
                         _latch_data
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _strstr                                               4     2      2     601
                                              8 COMRAM     4     2      2
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              5     1      4     182
                                              3 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      91
                                              3 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _strchr                                               4     1      3      90
                                              3 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _latch_data                                           1     1      0      29
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             3     1      2      23
                                              3 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _UART_SendString                                      1     0      1      75
                                              4 COMRAM     1     0      1
                      _UART_SendChar
 ---------------------------------------------------------------------------------
 (2) _UART_SendChar                                        1     1      0      29
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SelectIO                                             1     1      0      29
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0      23
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SelectIO
   _UART_Init
   _UART_SendString
     _UART_SendChar
   _delay_ms
   _init_ports
   _latch_data
   _strstr
     _strchr
     _strlen
     _strncmp

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     12      44     34.9%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         35      0       0      0.0%
BITBIGSFRll          9      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      48      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon May 05 19:41:36 2025

                     l51 092C                       l52 0932                       l36 0AAC  
                     l53 0938                       l45 0B2A                       l54 093E  
                     l55 0944                       l39 0ACA                       l57 0980  
                     l49 0926                       l75 07BA                      l130 0B18  
                    l124 0AE8                      l127 0B06                      l136 0A7E  
                    l831 0912                      l850 087E                      l837 09DE  
                    l846 0A4A                      l839 0A16                      _GIE 7F97  
                    u300 07DE                      u301 07DA                      u310 080A  
                    u311 0806                      u320 0826                      u400 08FA  
                    u321 0822                      u401 08F6                      u330 0838  
                    u410 0910                      u331 0834                      u411 090C  
                    u420 0A7E                      u340 085E                      u500 078A  
                    u421 0A7A                      u341 085A                      u501 0786  
                    u350 09F6                      u510 07B0                      u430 0686  
                    u351 09F2                      u511 07AC                      u431 0682  
                    u280 0B14                      u360 0A14                      u440 06A4  
                    u281 0B10                      u361 0A10                      u441 06A0  
                    u370 0AAC                      u290 0A3E                      u450 06CC  
                    u371 0AA8                      u291 0A3A                      u451 06C8  
                    u380 0890                      u460 06F2                      _ISR 0008  
                    u381 088C                      u461 06EE                      u390 08CA  
                    u470 0718                      u391 08C6                      u471 0714  
                    u480 073E                      u481 073A                      u490 0764  
                    u491 0760                      u557 0AB8                      u567 0AC2  
                    u577 0A8A                      wreg 0FE8                     ?_ISR 0021  
                   l1101 0AB6                     l1111 0916                     l1103 0ABE  
                   l1121 0AD4                     l1105 0AC0                     l1201 073E  
                   l1115 094A                     l1131 0ADE                     l1123 0AD6  
                   l1107 0AC8                     l1051 0A20                     l1211 0794  
                   l1203 0748                     l1133 0AE0                     l1125 0AD8  
                   l1117 0ACC                     l1045 0B06                     l1109 0B1A  
                   l1053 0A22                     l1061 07DE                     l1141 0880  
                   l1213 07B0                     l1205 0764                     l1135 0AE2  
                   l1127 0ADA                     l1119 0AD0                     l1047 0B14  
                   l1055 0A3E                     l1071 0826                     l1151 08D0  
                   l1143 0890                     l1207 076E                     l1215 07BA  
                   l1137 0AE4                     l1129 0ADC                     l1161 0A4C  
                   l1081 09F6                     l1049 0A18                     l1073 0838  
                   l1065 07EA                     l1145 08A4                     l1153 08EA  
                   l1209 078A                     l1139 0AE6                     l1163 0A50  
                   l1091 0A80                     l1075 085E                     l1067 07F4  
                   l1059 07C4                     l1155 08FA                     l1147 08CA  
                   l1171 0662                     l1165 0A60                     l1093 0A84  
                   l1085 09FC                     l1069 080A                     l1157 0910  
                   l1181 0686                     l1173 0666                     l1167 0A62  
                   l1095 0A92                     l1087 0A14                     l1079 09DE  
                   l1191 06D6                     l1183 0688                     l1175 066A  
                   l1097 0AB0                     l1193 06F2                     l1185 06A4  
                   l1177 0670                     l1169 0656                     l1099 0AB4  
                   l1195 06FC                     l1187 06B0                     l1179 0676  
                   l1197 0718                     l1189 06CC                     l1199 0722  
                   STR_1 064B                     STR_2 064B                     STR_3 0601  
                   STR_4 0615                     STR_5 0615                     STR_6 061E  
                   STR_7 061E                     STR_8 0627                     STR_9 0627  
                   _BRGH 7D62                     _CREN 7D5C                     _LATC 0F8B  
                   _LATD 0F8C                     _PEIE 7F96                     _RCIE 7CED  
                   _RCIF 7CF5                     _SPEN 7D5F                     _TXEN 7D65  
                   _TXIF 7CF4                     _SYNC 7D64                     _main 0656  
                   fsr2h 0FDA                     indf2 0FDF                     fsr2l 0FD9  
                   btemp 002D                     start 000E             ___param_bank 0000  
                  ??_ISR 0021       latch_data@seg_data 0024                    ?_main 0021  
                  STR_10 0630                    STR_11 0630                    STR_12 0639  
                  STR_13 0639                    STR_14 0642                    STR_15 0642  
                  STR_16 060C                    _BRG16 7DC3                    STR_17 060C  
                  i2l144 09D2                    _RCREG 0FAE                    _SPBRG 0FAF  
                  _TXREG 0FAD            SelectIO@index 0024         ?_UART_SendString 0025  
                  tablat 0FF5                    ttemp5 002E                    ttemp6 0031  
                  ttemp7 0035                    status 0FD8                    wtemp8 002E  
        __end_of_strncmp 0880          __initialization 0AEA             __end_of_main 07C4  
                 ??_main 002D         __end_of_SelectIO 0982            __activetblptr 0002  
                 i2l1221 099E                   i2l1231 09D0                   i2l1223 09AE  
                 i2l1225 09BA                   i2l1217 098C                   i2l1227 09BC  
                 i2l1219 099A                   i2l1229 09CC                   _TRISC6 7CA6  
                 _TRISC7 7CA7         __end_of_delay_ms 0AAE        __end_of_UART_Init 0AEA  
                 _buffer 0001                   clear_0 0AF0                   isa$std 0001  
                 _strchr 09DE                   _strlen 0A18                   _strstr 0880  
           __mediumconst 0600                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8    __end_of_UART_SendChar 0B1A                ??_strncmp 0028  
             __accesstop 0080  __end_of__initialization 0AF6            ___rparam_used 0001  
         __pcstackCOMRAM 0021              ISR@received 0023                ?_SelectIO 0021  
                ?_strchr 0024                  ?_strlen 0024                  ?_strstr 0029  
              ?_delay_ms 0024                  i2u52_40 099A                  i2u52_41 0996  
                i2u53_40 09AE                  i2u53_41 09AA                  i2u54_40 09CC  
                i2u54_41 09C8               _latch_data 0AAE               ??_SelectIO 0024  
                __Hparam 0000                  __Lparam 0000       UART_SendString@str 0025  
           __psmallconst 0600                  __pcinit 0AEA               _init_ports 0B1A  
                __ramtop 0600                  __ptext0 0656                  __ptext1 0880  
                __ptext2 07C4                  __ptext3 0A18                  __ptext4 09DE  
                __ptext5 0AAE                  __ptext6 0B1A                  __ptext7 0A80  
                __ptext8 0A4C                  __ptext9 0B04               ??_delay_ms 0026  
                _strncmp 07C4           __pintcode_body 0982               delay_ms@ms 0024  
   end_of_initialization 0AF6            __Lmediumconst 0000                  int_func 0982  
                postinc0 0FEE                  postinc2 0FDE                  strchr@c 0025  
                strchr@s 0024                  strlen@a 0026                  strlen@s 0024  
              _UART_Init 0ACC                  strstr@h 0029                  strstr@n 002A  
              _TRISAbits 0F92                _TRISBbits 0F93                _TRISEbits 0F96  
            ?_latch_data 0021               ?_UART_Init 0021              ?_init_ports 0021  
         __end_of_strchr 0A18           __end_of_strlen 0A4C           __end_of_strstr 0914  
    start_initialization 0AEA              __end_of_ISR 09DE        ??_UART_SendString 0026  
               ??_strchr 0027                 ??_strlen 0026                 ??_strstr 002B  
       _uart_frame_ready 0016              __pbssCOMRAM 0001                __pintcode 0008  
            ??_UART_Init 0024              __smallconst 0600                 ?_strncmp 0024  
          _UART_SendChar 0B04           _uart_rx_buffer 0017                 _LATAbits 0F89  
               _LATBbits 0F8A                 _LATEbits 0F8D          UART_SendChar@ch 0024  
         ?_UART_SendChar 0021             ??_latch_data 0024                 _SelectIO 0914  
               __Hrparam 0000                 __Lrparam 0000             ??_init_ports 0024  
     __end_of_latch_data 0ACC                 _delay_ms 0A80                 __ptext10 0ACC  
               __ptext11 0914       __end_of_init_ports 0B2C            _uart_rx_index 0015  
        _UART_SendString 0A4C                 isa$xinst 0000                 int$flags 002D  
        ??_UART_SendChar 0024                 intlevel2 0000                 strncmp@l 0024  
               strncmp@n 0026                 strncmp@r 0025                 strstr@nl 002B  
__end_of_UART_SendString 0A80  
