

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat May 17 20:27:09 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=3
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=3
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=3
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=3
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39   000000                     
    40                           ; Generated 17/10/2023 GMT
    41                           ; 
    42                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F4520 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74   000FE0                     bsr             equ	4064
    75   000FE9                     fsr0            equ	4073
    76   000FEA                     fsr0h           equ	4074
    77   000FE9                     fsr0l           equ	4073
    78   000FE1                     fsr1            equ	4065
    79   000FE2                     fsr1h           equ	4066
    80   000FE1                     fsr1l           equ	4065
    81   000FD9                     fsr2            equ	4057
    82   000FDA                     fsr2h           equ	4058
    83   000FD9                     fsr2l           equ	4057
    84   000FEF                     indf0           equ	4079
    85   000FE7                     indf1           equ	4071
    86   000FDF                     indf2           equ	4063
    87   000FF2                     intcon          equ	4082
    88   000000                     nvmcon          equ	0
    89   000FF9                     pcl             equ	4089
    90   000FFA                     pclath          equ	4090
    91   000FFB                     pclatu          equ	4091
    92   000FEB                     plusw0          equ	4075
    93   000FE3                     plusw1          equ	4067
    94   000FDB                     plusw2          equ	4059
    95   000FED                     postdec0        equ	4077
    96   000FE5                     postdec1        equ	4069
    97   000FDD                     postdec2        equ	4061
    98   000FEE                     postinc0        equ	4078
    99   000FE6                     postinc1        equ	4070
   100   000FDE                     postinc2        equ	4062
   101   000FEC                     preinc0         equ	4076
   102   000FE4                     preinc1         equ	4068
   103   000FDC                     preinc2         equ	4060
   104   000FF3                     prod            equ	4083
   105   000FF4                     prodh           equ	4084
   106   000FF3                     prodl           equ	4083
   107   000FD8                     status          equ	4056
   108   000FF5                     tablat          equ	4085
   109   000FF6                     tblptr          equ	4086
   110   000FF7                     tblptrh         equ	4087
   111   000FF6                     tblptrl         equ	4086
   112   000FF8                     tblptru         equ	4088
   113   000FFD                     tosl            equ	4093
   114   000FE8                     wreg            equ	4072
   115   000F80                     PORTA           equ	3968	;# 
   116   000F81                     PORTB           equ	3969	;# 
   117   000F82                     PORTC           equ	3970	;# 
   118   000F83                     PORTD           equ	3971	;# 
   119   000F84                     PORTE           equ	3972	;# 
   120   000F89                     LATA            equ	3977	;# 
   121   000F8A                     LATB            equ	3978	;# 
   122   000F8B                     LATC            equ	3979	;# 
   123   000F8C                     LATD            equ	3980	;# 
   124   000F8D                     LATE            equ	3981	;# 
   125   000F92                     TRISA           equ	3986	;# 
   126   000F92                     DDRA            equ	3986	;# 
   127   000F93                     TRISB           equ	3987	;# 
   128   000F93                     DDRB            equ	3987	;# 
   129   000F94                     TRISC           equ	3988	;# 
   130   000F94                     DDRC            equ	3988	;# 
   131   000F95                     TRISD           equ	3989	;# 
   132   000F95                     DDRD            equ	3989	;# 
   133   000F96                     TRISE           equ	3990	;# 
   134   000F96                     DDRE            equ	3990	;# 
   135   000F9B                     OSCTUNE         equ	3995	;# 
   136   000F9D                     PIE1            equ	3997	;# 
   137   000F9E                     PIR1            equ	3998	;# 
   138   000F9F                     IPR1            equ	3999	;# 
   139   000FA0                     PIE2            equ	4000	;# 
   140   000FA1                     PIR2            equ	4001	;# 
   141   000FA2                     IPR2            equ	4002	;# 
   142   000FA6                     EECON1          equ	4006	;# 
   143   000FA7                     EECON2          equ	4007	;# 
   144   000FA8                     EEDATA          equ	4008	;# 
   145   000FA9                     EEADR           equ	4009	;# 
   146   000FAB                     RCSTA           equ	4011	;# 
   147   000FAB                     RCSTA1          equ	4011	;# 
   148   000FAC                     TXSTA           equ	4012	;# 
   149   000FAC                     TXSTA1          equ	4012	;# 
   150   000FAD                     TXREG           equ	4013	;# 
   151   000FAD                     TXREG1          equ	4013	;# 
   152   000FAE                     RCREG           equ	4014	;# 
   153   000FAE                     RCREG1          equ	4014	;# 
   154   000FAF                     SPBRG           equ	4015	;# 
   155   000FAF                     SPBRG1          equ	4015	;# 
   156   000FB0                     SPBRGH          equ	4016	;# 
   157   000FB1                     T3CON           equ	4017	;# 
   158   000FB2                     TMR3            equ	4018	;# 
   159   000FB2                     TMR3L           equ	4018	;# 
   160   000FB3                     TMR3H           equ	4019	;# 
   161   000FB4                     CMCON           equ	4020	;# 
   162   000FB5                     CVRCON          equ	4021	;# 
   163   000FB6                     ECCP1AS         equ	4022	;# 
   164   000FB6                     ECCPAS          equ	4022	;# 
   165   000FB7                     PWM1CON         equ	4023	;# 
   166   000FB7                     ECCP1DEL        equ	4023	;# 
   167   000FB8                     BAUDCON         equ	4024	;# 
   168   000FB8                     BAUDCTL         equ	4024	;# 
   169   000FBA                     CCP2CON         equ	4026	;# 
   170   000FBB                     CCPR2           equ	4027	;# 
   171   000FBB                     CCPR2L          equ	4027	;# 
   172   000FBC                     CCPR2H          equ	4028	;# 
   173   000FBD                     CCP1CON         equ	4029	;# 
   174   000FBE                     CCPR1           equ	4030	;# 
   175   000FBE                     CCPR1L          equ	4030	;# 
   176   000FBF                     CCPR1H          equ	4031	;# 
   177   000FC0                     ADCON2          equ	4032	;# 
   178   000FC1                     ADCON1          equ	4033	;# 
   179   000FC2                     ADCON0          equ	4034	;# 
   180   000FC3                     ADRES           equ	4035	;# 
   181   000FC3                     ADRESL          equ	4035	;# 
   182   000FC4                     ADRESH          equ	4036	;# 
   183   000FC5                     SSPCON2         equ	4037	;# 
   184   000FC6                     SSPCON1         equ	4038	;# 
   185   000FC7                     SSPSTAT         equ	4039	;# 
   186   000FC8                     SSPADD          equ	4040	;# 
   187   000FC9                     SSPBUF          equ	4041	;# 
   188   000FCA                     T2CON           equ	4042	;# 
   189   000FCB                     PR2             equ	4043	;# 
   190   000FCB                     MEMCON          equ	4043	;# 
   191   000FCC                     TMR2            equ	4044	;# 
   192   000FCD                     T1CON           equ	4045	;# 
   193   000FCE                     TMR1            equ	4046	;# 
   194   000FCE                     TMR1L           equ	4046	;# 
   195   000FCF                     TMR1H           equ	4047	;# 
   196   000FD0                     RCON            equ	4048	;# 
   197   000FD1                     WDTCON          equ	4049	;# 
   198   000FD2                     HLVDCON         equ	4050	;# 
   199   000FD2                     LVDCON          equ	4050	;# 
   200   000FD3                     OSCCON          equ	4051	;# 
   201   000FD5                     T0CON           equ	4053	;# 
   202   000FD6                     TMR0            equ	4054	;# 
   203   000FD6                     TMR0L           equ	4054	;# 
   204   000FD7                     TMR0H           equ	4055	;# 
   205   000FD8                     STATUS          equ	4056	;# 
   206   000FD9                     FSR2            equ	4057	;# 
   207   000FD9                     FSR2L           equ	4057	;# 
   208   000FDA                     FSR2H           equ	4058	;# 
   209   000FDB                     PLUSW2          equ	4059	;# 
   210   000FDC                     PREINC2         equ	4060	;# 
   211   000FDD                     POSTDEC2        equ	4061	;# 
   212   000FDE                     POSTINC2        equ	4062	;# 
   213   000FDF                     INDF2           equ	4063	;# 
   214   000FE0                     BSR             equ	4064	;# 
   215   000FE1                     FSR1            equ	4065	;# 
   216   000FE1                     FSR1L           equ	4065	;# 
   217   000FE2                     FSR1H           equ	4066	;# 
   218   000FE3                     PLUSW1          equ	4067	;# 
   219   000FE4                     PREINC1         equ	4068	;# 
   220   000FE5                     POSTDEC1        equ	4069	;# 
   221   000FE6                     POSTINC1        equ	4070	;# 
   222   000FE7                     INDF1           equ	4071	;# 
   223   000FE8                     WREG            equ	4072	;# 
   224   000FE9                     FSR0            equ	4073	;# 
   225   000FE9                     FSR0L           equ	4073	;# 
   226   000FEA                     FSR0H           equ	4074	;# 
   227   000FEB                     PLUSW0          equ	4075	;# 
   228   000FEC                     PREINC0         equ	4076	;# 
   229   000FED                     POSTDEC0        equ	4077	;# 
   230   000FEE                     POSTINC0        equ	4078	;# 
   231   000FEF                     INDF0           equ	4079	;# 
   232   000FF0                     INTCON3         equ	4080	;# 
   233   000FF1                     INTCON2         equ	4081	;# 
   234   000FF2                     INTCON          equ	4082	;# 
   235   000FF3                     PROD            equ	4083	;# 
   236   000FF3                     PRODL           equ	4083	;# 
   237   000FF4                     PRODH           equ	4084	;# 
   238   000FF5                     TABLAT          equ	4085	;# 
   239   000FF6                     TBLPTR          equ	4086	;# 
   240   000FF6                     TBLPTRL         equ	4086	;# 
   241   000FF7                     TBLPTRH         equ	4087	;# 
   242   000FF8                     TBLPTRU         equ	4088	;# 
   243   000FF9                     PCLAT           equ	4089	;# 
   244   000FF9                     PC              equ	4089	;# 
   245   000FF9                     PCL             equ	4089	;# 
   246   000FFA                     PCLATH          equ	4090	;# 
   247   000FFB                     PCLATU          equ	4091	;# 
   248   000FFC                     STKPTR          equ	4092	;# 
   249   000FFD                     TOS             equ	4093	;# 
   250   000FFD                     TOSL            equ	4093	;# 
   251   000FFE                     TOSH            equ	4094	;# 
   252   000FFF                     TOSU            equ	4095	;# 
   253   000F80                     PORTA           equ	3968	;# 
   254   000F81                     PORTB           equ	3969	;# 
   255   000F82                     PORTC           equ	3970	;# 
   256   000F83                     PORTD           equ	3971	;# 
   257   000F84                     PORTE           equ	3972	;# 
   258   000F89                     LATA            equ	3977	;# 
   259   000F8A                     LATB            equ	3978	;# 
   260   000F8B                     LATC            equ	3979	;# 
   261   000F8C                     LATD            equ	3980	;# 
   262   000F8D                     LATE            equ	3981	;# 
   263   000F92                     TRISA           equ	3986	;# 
   264   000F92                     DDRA            equ	3986	;# 
   265   000F93                     TRISB           equ	3987	;# 
   266   000F93                     DDRB            equ	3987	;# 
   267   000F94                     TRISC           equ	3988	;# 
   268   000F94                     DDRC            equ	3988	;# 
   269   000F95                     TRISD           equ	3989	;# 
   270   000F95                     DDRD            equ	3989	;# 
   271   000F96                     TRISE           equ	3990	;# 
   272   000F96                     DDRE            equ	3990	;# 
   273   000F9B                     OSCTUNE         equ	3995	;# 
   274   000F9D                     PIE1            equ	3997	;# 
   275   000F9E                     PIR1            equ	3998	;# 
   276   000F9F                     IPR1            equ	3999	;# 
   277   000FA0                     PIE2            equ	4000	;# 
   278   000FA1                     PIR2            equ	4001	;# 
   279   000FA2                     IPR2            equ	4002	;# 
   280   000FA6                     EECON1          equ	4006	;# 
   281   000FA7                     EECON2          equ	4007	;# 
   282   000FA8                     EEDATA          equ	4008	;# 
   283   000FA9                     EEADR           equ	4009	;# 
   284   000FAB                     RCSTA           equ	4011	;# 
   285   000FAB                     RCSTA1          equ	4011	;# 
   286   000FAC                     TXSTA           equ	4012	;# 
   287   000FAC                     TXSTA1          equ	4012	;# 
   288   000FAD                     TXREG           equ	4013	;# 
   289   000FAD                     TXREG1          equ	4013	;# 
   290   000FAE                     RCREG           equ	4014	;# 
   291   000FAE                     RCREG1          equ	4014	;# 
   292   000FAF                     SPBRG           equ	4015	;# 
   293   000FAF                     SPBRG1          equ	4015	;# 
   294   000FB0                     SPBRGH          equ	4016	;# 
   295   000FB1                     T3CON           equ	4017	;# 
   296   000FB2                     TMR3            equ	4018	;# 
   297   000FB2                     TMR3L           equ	4018	;# 
   298   000FB3                     TMR3H           equ	4019	;# 
   299   000FB4                     CMCON           equ	4020	;# 
   300   000FB5                     CVRCON          equ	4021	;# 
   301   000FB6                     ECCP1AS         equ	4022	;# 
   302   000FB6                     ECCPAS          equ	4022	;# 
   303   000FB7                     PWM1CON         equ	4023	;# 
   304   000FB7                     ECCP1DEL        equ	4023	;# 
   305   000FB8                     BAUDCON         equ	4024	;# 
   306   000FB8                     BAUDCTL         equ	4024	;# 
   307   000FBA                     CCP2CON         equ	4026	;# 
   308   000FBB                     CCPR2           equ	4027	;# 
   309   000FBB                     CCPR2L          equ	4027	;# 
   310   000FBC                     CCPR2H          equ	4028	;# 
   311   000FBD                     CCP1CON         equ	4029	;# 
   312   000FBE                     CCPR1           equ	4030	;# 
   313   000FBE                     CCPR1L          equ	4030	;# 
   314   000FBF                     CCPR1H          equ	4031	;# 
   315   000FC0                     ADCON2          equ	4032	;# 
   316   000FC1                     ADCON1          equ	4033	;# 
   317   000FC2                     ADCON0          equ	4034	;# 
   318   000FC3                     ADRES           equ	4035	;# 
   319   000FC3                     ADRESL          equ	4035	;# 
   320   000FC4                     ADRESH          equ	4036	;# 
   321   000FC5                     SSPCON2         equ	4037	;# 
   322   000FC6                     SSPCON1         equ	4038	;# 
   323   000FC7                     SSPSTAT         equ	4039	;# 
   324   000FC8                     SSPADD          equ	4040	;# 
   325   000FC9                     SSPBUF          equ	4041	;# 
   326   000FCA                     T2CON           equ	4042	;# 
   327   000FCB                     PR2             equ	4043	;# 
   328   000FCB                     MEMCON          equ	4043	;# 
   329   000FCC                     TMR2            equ	4044	;# 
   330   000FCD                     T1CON           equ	4045	;# 
   331   000FCE                     TMR1            equ	4046	;# 
   332   000FCE                     TMR1L           equ	4046	;# 
   333   000FCF                     TMR1H           equ	4047	;# 
   334   000FD0                     RCON            equ	4048	;# 
   335   000FD1                     WDTCON          equ	4049	;# 
   336   000FD2                     HLVDCON         equ	4050	;# 
   337   000FD2                     LVDCON          equ	4050	;# 
   338   000FD3                     OSCCON          equ	4051	;# 
   339   000FD5                     T0CON           equ	4053	;# 
   340   000FD6                     TMR0            equ	4054	;# 
   341   000FD6                     TMR0L           equ	4054	;# 
   342   000FD7                     TMR0H           equ	4055	;# 
   343   000FD8                     STATUS          equ	4056	;# 
   344   000FD9                     FSR2            equ	4057	;# 
   345   000FD9                     FSR2L           equ	4057	;# 
   346   000FDA                     FSR2H           equ	4058	;# 
   347   000FDB                     PLUSW2          equ	4059	;# 
   348   000FDC                     PREINC2         equ	4060	;# 
   349   000FDD                     POSTDEC2        equ	4061	;# 
   350   000FDE                     POSTINC2        equ	4062	;# 
   351   000FDF                     INDF2           equ	4063	;# 
   352   000FE0                     BSR             equ	4064	;# 
   353   000FE1                     FSR1            equ	4065	;# 
   354   000FE1                     FSR1L           equ	4065	;# 
   355   000FE2                     FSR1H           equ	4066	;# 
   356   000FE3                     PLUSW1          equ	4067	;# 
   357   000FE4                     PREINC1         equ	4068	;# 
   358   000FE5                     POSTDEC1        equ	4069	;# 
   359   000FE6                     POSTINC1        equ	4070	;# 
   360   000FE7                     INDF1           equ	4071	;# 
   361   000FE8                     WREG            equ	4072	;# 
   362   000FE9                     FSR0            equ	4073	;# 
   363   000FE9                     FSR0L           equ	4073	;# 
   364   000FEA                     FSR0H           equ	4074	;# 
   365   000FEB                     PLUSW0          equ	4075	;# 
   366   000FEC                     PREINC0         equ	4076	;# 
   367   000FED                     POSTDEC0        equ	4077	;# 
   368   000FEE                     POSTINC0        equ	4078	;# 
   369   000FEF                     INDF0           equ	4079	;# 
   370   000FF0                     INTCON3         equ	4080	;# 
   371   000FF1                     INTCON2         equ	4081	;# 
   372   000FF2                     INTCON          equ	4082	;# 
   373   000FF3                     PROD            equ	4083	;# 
   374   000FF3                     PRODL           equ	4083	;# 
   375   000FF4                     PRODH           equ	4084	;# 
   376   000FF5                     TABLAT          equ	4085	;# 
   377   000FF6                     TBLPTR          equ	4086	;# 
   378   000FF6                     TBLPTRL         equ	4086	;# 
   379   000FF7                     TBLPTRH         equ	4087	;# 
   380   000FF8                     TBLPTRU         equ	4088	;# 
   381   000FF9                     PCLAT           equ	4089	;# 
   382   000FF9                     PC              equ	4089	;# 
   383   000FF9                     PCL             equ	4089	;# 
   384   000FFA                     PCLATH          equ	4090	;# 
   385   000FFB                     PCLATU          equ	4091	;# 
   386   000FFC                     STKPTR          equ	4092	;# 
   387   000FFD                     TOS             equ	4093	;# 
   388   000FFD                     TOSL            equ	4093	;# 
   389   000FFE                     TOSH            equ	4094	;# 
   390   000FFF                     TOSU            equ	4095	;# 
   391   007CF4                     _TXIF           set	31988
   392   007F97                     _GIE            set	32663
   393   007F96                     _PEIE           set	32662
   394   007CED                     _RCIE           set	31981
   395   007CF5                     _RCIF           set	31989
   396   007D5C                     _CREN           set	32092
   397   007D65                     _TXEN           set	32101
   398   007D5F                     _SPEN           set	32095
   399   007D64                     _SYNC           set	32100
   400   007DC3                     _BRG16          set	32195
   401   007D62                     _BRGH           set	32098
   402   007CA7                     _TRISC7         set	31911
   403   007CA6                     _TRISC6         set	31910
   404   000FAE                     _RCREG          set	4014
   405   000FAD                     _TXREG          set	4013
   406   000FAF                     _SPBRG          set	4015
   407   000F8D                     _LATEbits       set	3981
   408   000F89                     _LATAbits       set	3977
   409   000F8B                     _LATCbits       set	3979
   410   000F96                     _TRISEbits      set	3990
   411   000F92                     _TRISAbits      set	3986
   412   000F93                     _TRISBbits      set	3987
   413   000F82                     _PORTCbits      set	3970
   414   000F94                     _TRISCbits      set	3988
   415   000F8A                     _LATBbits       set	3978
   416   000F8C                     _LATD           set	3980
   417                           
   418                           	psect	smallconst
   419   000600                     __psmallconst:
   420                           	callstack 0
   421   000600  00                 	db	0
   422   000601                     STR_23:
   423   000601  45                 	db	69	;'E'
   424   000602  52                 	db	82	;'R'
   425   000603  52                 	db	82	;'R'
   426   000604  4F                 	db	79	;'O'
   427   000605  52                 	db	82	;'R'
   428   000606  3A                 	db	58	;':'
   429   000607  55                 	db	85	;'U'
   430   000608  4E                 	db	78	;'N'
   431   000609  4B                 	db	75	;'K'
   432   00060A  4E                 	db	78	;'N'
   433   00060B  4F                 	db	79	;'O'
   434   00060C  57                 	db	87	;'W'
   435   00060D  4E                 	db	78	;'N'
   436   00060E  5F                 	db	95	;'_'
   437   00060F  43                 	db	67	;'C'
   438   000610  4D                 	db	77	;'M'
   439   000611  44                 	db	68	;'D'
   440   000612  3A                 	db	58	;':'
   441   000613  00                 	db	0
   442   000614                     STR_3:
   443   000614  43                 	db	67	;'C'
   444   000615  4F                 	db	79	;'O'
   445   000616  4E                 	db	78	;'N'
   446   000617  4E                 	db	78	;'N'
   447   000618  5F                 	db	95	;'_'
   448   000619  41                 	db	65	;'A'
   449   00061A  43                 	db	67	;'C'
   450   00061B  4B                 	db	75	;'K'
   451   00061C  0D                 	db	13
   452   00061D  0A                 	db	10
   453   00061E  00                 	db	0
   454   00061F                     STR_20:
   455   00061F  52                 	db	82	;'R'
   456   000620  43                 	db	67	;'C'
   457   000621  3A                 	db	58	;':'
   458   000622  25                 	db	37
   459   000623  30                 	db	48	;'0'
   460   000624  32                 	db	50	;'2'
   461   000625  58                 	db	88	;'X'
   462   000626  0D                 	db	13
   463   000627  0A                 	db	10
   464   000628  00                 	db	0
   465   000629                     STR_16:
   466   000629  53                 	db	83	;'S'
   467   00062A  48                 	db	72	;'H'
   468   00062B  4F                 	db	79	;'O'
   469   00062C  57                 	db	87	;'W'
   470   00062D  5F                 	db	95	;'_'
   471   00062E  30                 	db	48	;'0'
   472   00062F  30                 	db	48	;'0'
   473   000630  30                 	db	48	;'0'
   474   000631  00                 	db	0
   475   000632                     STR_4:
   476   000632  53                 	db	83	;'S'
   477   000633  48                 	db	72	;'H'
   478   000634  4F                 	db	79	;'O'
   479   000635  57                 	db	87	;'W'
   480   000636  5F                 	db	95	;'_'
   481   000637  30                 	db	48	;'0'
   482   000638  30                 	db	48	;'0'
   483   000639  31                 	db	49	;'1'
   484   00063A  00                 	db	0
   485   00063B                     STR_6:
   486   00063B  53                 	db	83	;'S'
   487   00063C  48                 	db	72	;'H'
   488   00063D  4F                 	db	79	;'O'
   489   00063E  57                 	db	87	;'W'
   490   00063F  5F                 	db	95	;'_'
   491   000640  30                 	db	48	;'0'
   492   000641  30                 	db	48	;'0'
   493   000642  32                 	db	50	;'2'
   494   000643  00                 	db	0
   495   000644                     STR_8:
   496   000644  53                 	db	83	;'S'
   497   000645  48                 	db	72	;'H'
   498   000646  4F                 	db	79	;'O'
   499   000647  57                 	db	87	;'W'
   500   000648  5F                 	db	95	;'_'
   501   000649  30                 	db	48	;'0'
   502   00064A  30                 	db	48	;'0'
   503   00064B  33                 	db	51	;'3'
   504   00064C  00                 	db	0
   505   00064D                     STR_10:
   506   00064D  53                 	db	83	;'S'
   507   00064E  48                 	db	72	;'H'
   508   00064F  4F                 	db	79	;'O'
   509   000650  57                 	db	87	;'W'
   510   000651  5F                 	db	95	;'_'
   511   000652  30                 	db	48	;'0'
   512   000653  30                 	db	48	;'0'
   513   000654  34                 	db	52	;'4'
   514   000655  00                 	db	0
   515   000656                     STR_12:
   516   000656  53                 	db	83	;'S'
   517   000657  48                 	db	72	;'H'
   518   000658  4F                 	db	79	;'O'
   519   000659  57                 	db	87	;'W'
   520   00065A  5F                 	db	95	;'_'
   521   00065B  30                 	db	48	;'0'
   522   00065C  30                 	db	48	;'0'
   523   00065D  35                 	db	53	;'5'
   524   00065E  00                 	db	0
   525   00065F                     STR_21:
   526   00065F  53                 	db	83	;'S'
   527   000660  45                 	db	69	;'E'
   528   000661  54                 	db	84	;'T'
   529   000662  31                 	db	49	;'1'
   530   000663  5F                 	db	95	;'_'
   531   000664  52                 	db	82	;'R'
   532   000665  43                 	db	67	;'C'
   533   000666  35                 	db	53	;'5'
   534   000667  00                 	db	0
   535   000668                     STR_14:
   536   000668  53                 	db	83	;'S'
   537   000669  48                 	db	72	;'H'
   538   00066A  4F                 	db	79	;'O'
   539   00066B  57                 	db	87	;'W'
   540   00066C  5F                 	db	95	;'_'
   541   00066D  30                 	db	48	;'0'
   542   00066E  30                 	db	48	;'0'
   543   00066F  36                 	db	54	;'6'
   544   000670  00                 	db	0
   545   000671                     STR_18:
   546   000671  52                 	db	82	;'R'
   547   000672  45                 	db	69	;'E'
   548   000673  41                 	db	65	;'A'
   549   000674  44                 	db	68	;'D'
   550   000675  5F                 	db	95	;'_'
   551   000676  50                 	db	80	;'P'
   552   000677  49                 	db	73	;'I'
   553   000678  4E                 	db	78	;'N'
   554   000679  00                 	db	0
   555   00067A                     STR_1:
   556   00067A  43                 	db	67	;'C'
   557   00067B  4F                 	db	79	;'O'
   558   00067C  4E                 	db	78	;'N'
   559   00067D  4E                 	db	78	;'N'
   560   00067E  5F                 	db	95	;'_'
   561   00067F  52                 	db	82	;'R'
   562   000680  45                 	db	69	;'E'
   563   000681  51                 	db	81	;'Q'
   564   000682  00                 	db	0
   565   00067A                     STR_2           equ	STR_1
   566   000671                     STR_19          equ	STR_18
   567   000668                     STR_15          equ	STR_14
   568   00065F                     STR_22          equ	STR_21
   569   000656                     STR_13          equ	STR_12
   570   00064D                     STR_11          equ	STR_10
   571   000644                     STR_9           equ	STR_8
   572   00063B                     STR_7           equ	STR_6
   573   000632                     STR_5           equ	STR_4
   574   000629                     STR_17          equ	STR_16
   575   00061C                     STR_24          equ	STR_3+8
   576   000683  00                 	db	0	; dummy byte at the end
   577   000600                     __smallconst    set	__psmallconst
   578   000600                     __mediumconst   set	__psmallconst
   579   000002                     __activetblptr  equ	2
   580                           
   581                           ; #config settings
   582                           
   583                           	psect	cinit
   584   001116                     __pcinit:
   585                           	callstack 0
   586   001116                     start_initialization:
   587                           	callstack 0
   588   001116                     __initialization:
   589                           	callstack 0
   590                           
   591                           ; Clear objects allocated to BANK0 (32 bytes)
   592   001116  EE00  F080         	lfsr	0,__pbssBANK0
   593   00111A  0E20               	movlw	32
   594   00111C                     clear_0:
   595   00111C  6AEE               	clrf	postinc0,c
   596   00111E  06E8               	decf	wreg,f,c
   597   001120  E1FD               	bnz	clear_0
   598                           
   599                           ; Clear objects allocated to COMRAM (37 bytes)
   600   001122  EE00  F043         	lfsr	0,__pbssCOMRAM
   601   001126  0E25               	movlw	37
   602   001128                     clear_1:
   603   001128  6AEE               	clrf	postinc0,c
   604   00112A  06E8               	decf	wreg,f,c
   605   00112C  E1FD               	bnz	clear_1
   606   00112E                     end_of_initialization:
   607                           	callstack 0
   608   00112E                     __end_of__initialization:
   609                           	callstack 0
   610   00112E  9068               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   611   001130  9268               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   612   001132  0E00               	movlw	low (__Lmediumconst shr (0+16))
   613   001134  6EF8               	movwf	tblptru,c
   614   001136  0100               	movlb	0
   615   001138  EF42  F003         	goto	_main	;jump to C main() function
   616                           
   617                           	psect	bssCOMRAM
   618   000043                     __pbssCOMRAM:
   619                           	callstack 0
   620   000043                     _width:
   621                           	callstack 0
   622   000043                     	ds	2
   623   000045                     _prec:
   624                           	callstack 0
   625   000045                     	ds	2
   626   000047                     _flags:
   627                           	callstack 0
   628   000047                     	ds	1
   629   000048                     _uart_rx_index:
   630                           	callstack 0
   631   000048                     	ds	1
   632   000049                     _uart_frame_ready:
   633                           	callstack 0
   634   000049                     	ds	1
   635   00004A                     _buffer:
   636                           	callstack 0
   637   00004A                     	ds	20
   638   00005E                     _uart_rx_buffer:
   639                           	callstack 0
   640   00005E                     	ds	10
   641                           
   642                           	psect	bssBANK0
   643   000080                     __pbssBANK0:
   644                           	callstack 0
   645   000080                     _dbuf:
   646                           	callstack 0
   647   000080                     	ds	32
   648                           
   649                           	psect	cstackCOMRAM
   650   000001                     __pcstackCOMRAM:
   651                           	callstack 0
   652   000001                     ??_ISR:
   653                           
   654                           ; 1 bytes @ 0x0
   655   000001                     	ds	2
   656   000003                     ISR@received:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x2
   660   000003                     	ds	1
   661   000004                     ?_strchr:
   662                           	callstack 0
   663   000004                     ?_strlen:
   664                           	callstack 0
   665   000004                     ?_strncmp:
   666                           	callstack 0
   667   000004                     ?_read_prec_or_width:
   668                           	callstack 0
   669   000004                     latch_data@seg_data:
   670                           	callstack 0
   671   000004                     SelectIO@index:
   672                           	callstack 0
   673   000004                     UART_SendChar@ch:
   674                           	callstack 0
   675   000004                     read_prec_or_width@fmt:
   676                           	callstack 0
   677   000004                     strchr@s:
   678                           	callstack 0
   679   000004                     strlen@s:
   680                           	callstack 0
   681   000004                     strncmp@l:
   682                           	callstack 0
   683   000004                     delay_ms@ms:
   684                           	callstack 0
   685   000004                     fputc@c:
   686                           	callstack 0
   687   000004                     ??_read_RC_inputs:
   688   000004                     
   689                           ; 1 bytes @ 0x3
   690   000004                     	ds	1
   691   000005                     read_RC_inputs@result:
   692                           	callstack 0
   693   000005                     read_prec_or_width@ap:
   694                           	callstack 0
   695   000005                     strncmp@r:
   696                           	callstack 0
   697   000005                     UART_SendString@str:
   698                           	callstack 0
   699   000005                     strchr@c:
   700                           	callstack 0
   701                           
   702                           ; 2 bytes @ 0x4
   703   000005                     	ds	1
   704   000006                     fputc@fp:
   705                           	callstack 0
   706   000006                     strlen@a:
   707                           	callstack 0
   708   000006                     strncmp@n:
   709                           	callstack 0
   710   000006                     ??_delay_ms:
   711   000006                     ??_read_prec_or_width:
   712                           
   713                           ; 1 bytes @ 0x5
   714   000006                     	ds	1
   715   000007                     ??_fputc:
   716   000007                     
   717                           ; 1 bytes @ 0x6
   718   000007                     	ds	1
   719   000008                     read_prec_or_width@c:
   720                           	callstack 0
   721   000008                     ??_strncmp:
   722                           
   723                           ; 1 bytes @ 0x7
   724   000008                     	ds	1
   725   000009                     ?_strstr:
   726                           	callstack 0
   727   000009                     strstr@h:
   728                           	callstack 0
   729   000009                     read_prec_or_width@n:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x8
   733   000009                     	ds	1
   734   00000A                     strstr@n:
   735                           	callstack 0
   736                           
   737                           ; 1 bytes @ 0x9
   738   00000A                     	ds	1
   739   00000B                     strstr@nl:
   740                           	callstack 0
   741   00000B                     
   742                           ; 1 bytes @ 0xA
   743   00000B                     	ds	1
   744   00000C                     fputs@s:
   745                           	callstack 0
   746                           
   747                           ; 1 bytes @ 0xB
   748   00000C                     	ds	1
   749   00000D                     fputs@fp:
   750                           	callstack 0
   751                           
   752                           ; 1 bytes @ 0xC
   753   00000D                     	ds	1
   754   00000E                     fputs@c:
   755                           	callstack 0
   756   00000E                     
   757                           ; 1 bytes @ 0xD
   758   00000E                     	ds	1
   759   00000F                     fputs@i:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0xE
   763   00000F                     	ds	2
   764   000011                     pad@fp:
   765                           	callstack 0
   766                           
   767                           ; 1 bytes @ 0x10
   768   000011                     	ds	1
   769   000012                     pad@buf:
   770                           	callstack 0
   771                           
   772                           ; 1 bytes @ 0x11
   773   000012                     	ds	1
   774   000013                     pad@p:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x12
   778   000013                     	ds	2
   779   000015                     ??_pad:
   780                           
   781                           ; 1 bytes @ 0x14
   782   000015                     	ds	1
   783   000016                     pad@i:
   784                           	callstack 0
   785                           
   786                           ; 2 bytes @ 0x15
   787   000016                     	ds	2
   788   000018                     xtoa@fp:
   789                           	callstack 0
   790                           
   791                           ; 1 bytes @ 0x17
   792   000018                     	ds	1
   793   000019                     xtoa@d:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x18
   797   000019                     	ds	2
   798   00001B                     ??_xtoa:
   799                           
   800                           ; 1 bytes @ 0x1A
   801   00001B                     	ds	3
   802   00001E                     xtoa@p:
   803                           	callstack 0
   804                           
   805                           ; 1 bytes @ 0x1D
   806   00001E                     	ds	1
   807   00001F                     xtoa@w:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x1E
   811   00001F                     	ds	2
   812   000021                     xtoa@c:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x20
   816   000021                     	ds	1
   817   000022                     xtoa@i:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x21
   821   000022                     	ds	2
   822   000024                     vfpfcnvrt@fp:
   823                           	callstack 0
   824                           
   825                           ; 1 bytes @ 0x23
   826   000024                     	ds	1
   827   000025                     vfpfcnvrt@fmt:
   828                           	callstack 0
   829                           
   830                           ; 1 bytes @ 0x24
   831   000025                     	ds	1
   832   000026                     vfpfcnvrt@ap:
   833                           	callstack 0
   834                           
   835                           ; 1 bytes @ 0x25
   836   000026                     	ds	1
   837   000027                     vfpfcnvrt@convarg:
   838                           	callstack 0
   839   000027                     
   840                           ; 1 bytes @ 0x26
   841   000027                     	ds	4
   842   00002B                     vfpfcnvrt@done:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x2A
   846   00002B                     	ds	1
   847   00002C                     vfpfcnvrt@cp:
   848                           	callstack 0
   849                           
   850                           ; 1 bytes @ 0x2B
   851   00002C                     	ds	1
   852   00002D                     ?_vfprintf:
   853                           	callstack 0
   854   00002D                     vfprintf@fp:
   855                           	callstack 0
   856                           
   857                           ; 1 bytes @ 0x2C
   858   00002D                     	ds	1
   859   00002E                     vfprintf@fmt:
   860                           	callstack 0
   861                           
   862                           ; 1 bytes @ 0x2D
   863   00002E                     	ds	1
   864   00002F                     vfprintf@ap:
   865                           	callstack 0
   866                           
   867                           ; 1 bytes @ 0x2E
   868   00002F                     	ds	1
   869   000030                     vfprintf@cfmt:
   870                           	callstack 0
   871   000030                     
   872                           ; 1 bytes @ 0x2F
   873   000030                     	ds	1
   874   000031                     ?_sprintf:
   875                           	callstack 0
   876   000031                     sprintf@s:
   877                           	callstack 0
   878                           
   879                           ; 1 bytes @ 0x30
   880   000031                     	ds	1
   881   000032                     sprintf@fmt:
   882                           	callstack 0
   883                           
   884                           ; 1 bytes @ 0x31
   885   000032                     	ds	3
   886   000035                     sprintf@ap:
   887                           	callstack 0
   888   000035                     
   889                           ; 1 bytes @ 0x34
   890   000035                     	ds	1
   891   000036                     sprintf@f:
   892                           	callstack 0
   893                           
   894                           ; 11 bytes @ 0x35
   895   000036                     	ds	11
   896   000041                     main@rc_input:
   897                           	callstack 0
   898   000041                     
   899                           ; 1 bytes @ 0x40
   900   000041                     	ds	1
   901   000042                     main@i:
   902                           	callstack 0
   903                           
   904                           ; 1 bytes @ 0x41
   905   000042                     	ds	1
   906                           
   907 ;;
   908 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   909 ;;
   910 ;; *************** function _main *****************
   911 ;; Defined at:
   912 ;;		line 148 in file "main.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;  i               1   65[COMRAM] unsigned char 
   917 ;;  rc_input        1   64[COMRAM] unsigned char 
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      void 
   920 ;; Registers used:
   921 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   927 ;;      Params:         0       0       0       0       0       0       0
   928 ;;      Locals:         2       0       0       0       0       0       0
   929 ;;      Temps:          0       0       0       0       0       0       0
   930 ;;      Totals:         2       0       0       0       0       0       0
   931 ;;Total ram usage:        2 bytes
   932 ;; Hardware stack levels required when called: 9
   933 ;; This function calls:
   934 ;;		_SelectIO
   935 ;;		_UART_Init
   936 ;;		_UART_SendChar
   937 ;;		_UART_SendString
   938 ;;		_delay_ms
   939 ;;		_init_ports
   940 ;;		_latch_data
   941 ;;		_read_RC_inputs
   942 ;;		_sprintf
   943 ;;		_strstr
   944 ;; This function is called by:
   945 ;;		Startup code after reset
   946 ;; This function uses a non-reentrant model
   947 ;;
   948                           
   949                           	psect	text0
   950   000684                     __ptext0:
   951                           	callstack 0
   952   000684                     _main:
   953                           	callstack 22
   954   000684                     
   955                           ;main.c: 150: 
   956   000684  0E01               	movlw	1
   957   000686  6E05               	movwf	(delay_ms@ms+1)^0,c
   958   000688  0EF4               	movlw	244
   959   00068A  6E04               	movwf	delay_ms@ms^0,c
   960   00068C  EC74  F008         	call	_delay_ms	;wreg free
   961   000690                     
   962                           ;main.c: 152:             }
   963   000690  ECBC  F008         	call	_UART_Init	;wreg free
   964   000694                     
   965                           ;main.c: 155: 
   966   000694  ECAD  F008         	call	_init_ports	;wreg free
   967   000698                     
   968                           ;main.c: 157:             }
   969   000698  0E00               	movlw	0
   970   00069A  EC52  F007         	call	_SelectIO
   971   00069E                     
   972                           ;main.c: 158:             else if (strstr((char*)uart_rx_buffer, "SHOW_006"))
   973   00069E  0EFF               	movlw	255
   974   0006A0  EC9E  F008         	call	_latch_data
   975   0006A4                     l1676:
   976                           
   977                           ;main.c: 161:                 SelectIO(6);;main.c: 162:             }
   978   0006A4  5049               	movf	_uart_frame_ready^0,w,c	;volatile
   979   0006A6  B4D8               	btfsc	status,2,c
   980   0006A8  EF58  F003         	goto	u1061
   981   0006AC  EF5A  F003         	goto	u1060
   982   0006B0                     u1061:
   983   0006B0  EF52  F003         	goto	l1676
   984   0006B4                     u1060:
   985   0006B4                     
   986                           ;main.c: 163:             else if (strstr((char*)uart_rx_buffer, "SHOW_000"));main.c: 16
      +                          4:             {
   987   0006B4  6A49               	clrf	_uart_frame_ready^0,c	;volatile
   988   0006B6                     
   989                           ;main.c: 166:                 SelectIO(0);
   990   0006B6  0E5E               	movlw	low _uart_rx_buffer
   991   0006B8  6E09               	movwf	strstr@h^0,c
   992   0006BA  0E7A               	movlw	low STR_1
   993   0006BC  6E0A               	movwf	strstr@n^0,c
   994   0006BE  EC7C  F006         	call	_strstr	;wreg free
   995   0006C2  0900               	iorlw	0
   996   0006C4  B4D8               	btfsc	status,2,c
   997   0006C6  EF67  F003         	goto	u1071
   998   0006CA  EF69  F003         	goto	u1070
   999   0006CE                     u1071:
  1000   0006CE  EF73  F003         	goto	l1684
  1001   0006D2                     u1070:
  1002   0006D2                     
  1003                           ;main.c: 167:             };main.c: 168:             else if (strstr((char*)uart_rx_buff
      +                          er, "READ_PIN"))
  1004   0006D2  0E14               	movlw	low STR_3
  1005   0006D4  6E05               	movwf	UART_SendString@str^0,c
  1006   0006D6  5005               	movf	UART_SendString@str^0,w,c
  1007   0006D8  A4D8               	btfss	status,2,c
  1008   0006DA  0E06               	movlw	high __smallconst
  1009   0006DC  6E06               	movwf	(UART_SendString@str+1)^0,c
  1010   0006DE  EC89  F007         	call	_UART_SendString	;wreg free
  1011                           
  1012                           ;main.c: 169:             {
  1013   0006E2  EF4B  F004         	goto	l1740
  1014   0006E6                     l1684:
  1015   0006E6  0E5E               	movlw	low _uart_rx_buffer
  1016   0006E8  6E09               	movwf	strstr@h^0,c
  1017   0006EA  0E32               	movlw	low STR_4
  1018   0006EC  6E0A               	movwf	strstr@n^0,c
  1019   0006EE  EC7C  F006         	call	_strstr	;wreg free
  1020   0006F2  0900               	iorlw	0
  1021   0006F4  B4D8               	btfsc	status,2,c
  1022   0006F6  EF7F  F003         	goto	u1081
  1023   0006FA  EF81  F003         	goto	u1080
  1024   0006FE                     u1081:
  1025   0006FE  EF86  F003         	goto	l1688
  1026   000702                     u1080:
  1027   000702                     
  1028                           ;main.c: 171:                 sprintf(buffer, "RC:%02X\r\n", rc_input);;main.c: 173:    
      +                                   }
  1029   000702  0E01               	movlw	1
  1030   000704  EC52  F007         	call	_SelectIO
  1031                           
  1032                           ;main.c: 174:             else if (strstr((char*)uart_rx_buffer, "SET1_RC5"))
  1033   000708  EF4B  F004         	goto	l1740
  1034   00070C                     l1688:
  1035   00070C  0E5E               	movlw	low _uart_rx_buffer
  1036   00070E  6E09               	movwf	strstr@h^0,c
  1037   000710  0E3B               	movlw	low STR_6
  1038   000712  6E0A               	movwf	strstr@n^0,c
  1039   000714  EC7C  F006         	call	_strstr	;wreg free
  1040   000718  0900               	iorlw	0
  1041   00071A  B4D8               	btfsc	status,2,c
  1042   00071C  EF92  F003         	goto	u1091
  1043   000720  EF94  F003         	goto	u1090
  1044   000724                     u1091:
  1045   000724  EF99  F003         	goto	l1692
  1046   000728                     u1090:
  1047   000728                     
  1048                           ;main.c: 176: ;main.c: 178:             }
  1049   000728  0E02               	movlw	2
  1050   00072A  EC52  F007         	call	_SelectIO
  1051                           
  1052                           ;main.c: 179:             else
  1053   00072E  EF4B  F004         	goto	l1740
  1054   000732                     l1692:
  1055   000732  0E5E               	movlw	low _uart_rx_buffer
  1056   000734  6E09               	movwf	strstr@h^0,c
  1057   000736  0E44               	movlw	low STR_8
  1058   000738  6E0A               	movwf	strstr@n^0,c
  1059   00073A  EC7C  F006         	call	_strstr	;wreg free
  1060   00073E  0900               	iorlw	0
  1061   000740  B4D8               	btfsc	status,2,c
  1062   000742  EFA5  F003         	goto	u1101
  1063   000746  EFA7  F003         	goto	u1100
  1064   00074A                     u1101:
  1065   00074A  EFAC  F003         	goto	l1696
  1066   00074E                     u1100:
  1067   00074E                     
  1068                           ;main.c: 181:                 UART_SendString("ERROR:UNKNOWN_CMD:");;main.c: 183:       
      +                                    {
  1069   00074E  0E03               	movlw	3
  1070   000750  EC52  F007         	call	_SelectIO
  1071                           
  1072                           ;main.c: 184:                     UART_SendChar(uart_rx_buffer[i]);
  1073   000754  EF4B  F004         	goto	l1740
  1074   000758                     l1696:
  1075   000758  0E5E               	movlw	low _uart_rx_buffer
  1076   00075A  6E09               	movwf	strstr@h^0,c
  1077   00075C  0E4D               	movlw	low STR_10
  1078   00075E  6E0A               	movwf	strstr@n^0,c
  1079   000760  EC7C  F006         	call	_strstr	;wreg free
  1080   000764  0900               	iorlw	0
  1081   000766  B4D8               	btfsc	status,2,c
  1082   000768  EFB8  F003         	goto	u1111
  1083   00076C  EFBA  F003         	goto	u1110
  1084   000770                     u1111:
  1085   000770  EFBF  F003         	goto	l1700
  1086   000774                     u1110:
  1087   000774                     
  1088                           ;main.c: 186:                 UART_SendString("\r\n");;main.c: 188: 
  1089   000774  0E04               	movlw	4
  1090   000776  EC52  F007         	call	_SelectIO
  1091                           
  1092                           ;main.c: 189:             uart_rx_index = 0;
  1093   00077A  EF4B  F004         	goto	l1740
  1094   00077E                     l1700:
  1095   00077E  0E5E               	movlw	low _uart_rx_buffer
  1096   000780  6E09               	movwf	strstr@h^0,c
  1097   000782  0E56               	movlw	low STR_12
  1098   000784  6E0A               	movwf	strstr@n^0,c
  1099   000786  EC7C  F006         	call	_strstr	;wreg free
  1100   00078A  0900               	iorlw	0
  1101   00078C  B4D8               	btfsc	status,2,c
  1102   00078E  EFCB  F003         	goto	u1121
  1103   000792  EFCD  F003         	goto	u1120
  1104   000796                     u1121:
  1105   000796  EFD2  F003         	goto	l1704
  1106   00079A                     u1120:
  1107   00079A                     
  1108                           ;main.c: 191:     }
  1109   00079A  0E05               	movlw	5
  1110   00079C  EC52  F007         	call	_SelectIO
  1111   0007A0  EF4B  F004         	goto	l1740
  1112   0007A4                     l1704:
  1113   0007A4  0E5E               	movlw	low _uart_rx_buffer
  1114   0007A6  6E09               	movwf	strstr@h^0,c
  1115   0007A8  0E68               	movlw	low STR_14
  1116   0007AA  6E0A               	movwf	strstr@n^0,c
  1117   0007AC  EC7C  F006         	call	_strstr	;wreg free
  1118   0007B0  0900               	iorlw	0
  1119   0007B2  B4D8               	btfsc	status,2,c
  1120   0007B4  EFDE  F003         	goto	u1131
  1121   0007B8  EFE0  F003         	goto	u1130
  1122   0007BC                     u1131:
  1123   0007BC  EFE5  F003         	goto	l1708
  1124   0007C0                     u1130:
  1125   0007C0  0E06               	movlw	6
  1126   0007C2  EC52  F007         	call	_SelectIO
  1127   0007C6  EF4B  F004         	goto	l1740
  1128   0007CA                     l1708:
  1129   0007CA  0E5E               	movlw	low _uart_rx_buffer
  1130   0007CC  6E09               	movwf	strstr@h^0,c
  1131   0007CE  0E29               	movlw	low STR_16
  1132   0007D0  6E0A               	movwf	strstr@n^0,c
  1133   0007D2  EC7C  F006         	call	_strstr	;wreg free
  1134   0007D6  0900               	iorlw	0
  1135   0007D8  B4D8               	btfsc	status,2,c
  1136   0007DA  EFF1  F003         	goto	u1141
  1137   0007DE  EFF3  F003         	goto	u1140
  1138   0007E2                     u1141:
  1139   0007E2  EFF8  F003         	goto	l1712
  1140   0007E6                     u1140:
  1141   0007E6  0E00               	movlw	0
  1142   0007E8  EC52  F007         	call	_SelectIO
  1143   0007EC  EF4B  F004         	goto	l1740
  1144   0007F0                     l1712:
  1145   0007F0  0E5E               	movlw	low _uart_rx_buffer
  1146   0007F2  6E09               	movwf	strstr@h^0,c
  1147   0007F4  0E71               	movlw	low STR_18
  1148   0007F6  6E0A               	movwf	strstr@n^0,c
  1149   0007F8  EC7C  F006         	call	_strstr	;wreg free
  1150   0007FC  0900               	iorlw	0
  1151   0007FE  B4D8               	btfsc	status,2,c
  1152   000800  EF04  F004         	goto	u1151
  1153   000804  EF06  F004         	goto	u1150
  1154   000808                     u1151:
  1155   000808  EF19  F004         	goto	l1720
  1156   00080C                     u1150:
  1157   00080C  ECC6  F006         	call	_read_RC_inputs	;wreg free
  1158   000810  6E41               	movwf	main@rc_input^0,c
  1159   000812  0E4A               	movlw	low _buffer
  1160   000814  6E31               	movwf	sprintf@s^0,c
  1161   000816  0E1F               	movlw	low STR_20
  1162   000818  6E32               	movwf	sprintf@fmt^0,c
  1163   00081A  C041  F033         	movff	main@rc_input,?_sprintf+2
  1164   00081E  6A34               	clrf	(?_sprintf+3)^0,c
  1165   000820  EC5A  F008         	call	_sprintf	;wreg free
  1166   000824  0E4A               	movlw	low _buffer
  1167   000826  6E05               	movwf	UART_SendString@str^0,c
  1168   000828  6A06               	clrf	(UART_SendString@str+1)^0,c
  1169   00082A  EC89  F007         	call	_UART_SendString	;wreg free
  1170   00082E  EF4B  F004         	goto	l1740
  1171   000832                     l1720:
  1172   000832  0E5E               	movlw	low _uart_rx_buffer
  1173   000834  6E09               	movwf	strstr@h^0,c
  1174   000836  0E5F               	movlw	low STR_21
  1175   000838  6E0A               	movwf	strstr@n^0,c
  1176   00083A  EC7C  F006         	call	_strstr	;wreg free
  1177   00083E  0900               	iorlw	0
  1178   000840  B4D8               	btfsc	status,2,c
  1179   000842  EF25  F004         	goto	u1161
  1180   000846  EF27  F004         	goto	u1160
  1181   00084A                     u1161:
  1182   00084A  EF2A  F004         	goto	l1724
  1183   00084E                     u1160:
  1184   00084E  8A8B               	bsf	139,5,c	;volatile
  1185   000850  EF4B  F004         	goto	l1740
  1186   000854                     l1724:
  1187   000854  0E01               	movlw	low STR_23
  1188   000856  6E05               	movwf	UART_SendString@str^0,c
  1189   000858  5005               	movf	UART_SendString@str^0,w,c
  1190   00085A  A4D8               	btfss	status,2,c
  1191   00085C  0E06               	movlw	high __smallconst
  1192   00085E  6E06               	movwf	(UART_SendString@str+1)^0,c
  1193   000860  EC89  F007         	call	_UART_SendString	;wreg free
  1194   000864  6A42               	clrf	main@i^0,c
  1195   000866                     l1732:
  1196   000866  5042               	movf	main@i^0,w,c
  1197   000868  0F5E               	addlw	low _uart_rx_buffer
  1198   00086A  6ED9               	movwf	fsr2l,c
  1199   00086C  6ADA               	clrf	fsr2h,c
  1200   00086E  50DF               	movf	indf2,w,c
  1201   000870  ECCB  F008         	call	_UART_SendChar
  1202   000874  2A42               	incf	main@i^0,f,c
  1203   000876  0E09               	movlw	9
  1204   000878  6442               	cpfsgt	main@i^0,c
  1205   00087A  EF41  F004         	goto	u1171
  1206   00087E  EF43  F004         	goto	u1170
  1207   000882                     u1171:
  1208   000882  EF33  F004         	goto	l1732
  1209   000886                     u1170:
  1210   000886  0E1C               	movlw	low (STR_3+8)
  1211   000888  6E05               	movwf	UART_SendString@str^0,c
  1212   00088A  5005               	movf	UART_SendString@str^0,w,c
  1213   00088C  A4D8               	btfss	status,2,c
  1214   00088E  0E06               	movlw	high __smallconst
  1215   000890  6E06               	movwf	(UART_SendString@str+1)^0,c
  1216   000892  EC89  F007         	call	_UART_SendString	;wreg free
  1217   000896                     l1740:
  1218   000896  6A48               	clrf	_uart_rx_index^0,c	;volatile
  1219   000898  EF52  F003         	goto	l1676
  1220   00089C  EF07  F000         	goto	start
  1221   0008A0                     __end_of_main:
  1222                           	callstack 0
  1223                           
  1224 ;; *************** function _strstr *****************
  1225 ;; Defined at:
  1226 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strstr.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;  h               1    8[COMRAM] PTR const unsigned char 
  1229 ;;		 -> NULL(0), uart_rx_buffer(10), 
  1230 ;;  n               1    9[COMRAM] PTR const unsigned char 
  1231 ;;		 -> STR_22(9), STR_19(9), STR_17(9), STR_15(9), 
  1232 ;;		 -> STR_13(9), STR_11(9), STR_9(9), STR_7(9), 
  1233 ;;		 -> STR_5(9), STR_2(9), 
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;  nl              2   10[COMRAM] unsigned int 
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    8[COMRAM] PTR unsigned char 
  1238 ;; Registers used:
  1239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1245 ;;      Params:         2       0       0       0       0       0       0
  1246 ;;      Locals:         2       0       0       0       0       0       0
  1247 ;;      Temps:          0       0       0       0       0       0       0
  1248 ;;      Totals:         4       0       0       0       0       0       0
  1249 ;;Total ram usage:        4 bytes
  1250 ;; Hardware stack levels used: 1
  1251 ;; Hardware stack levels required when called: 2
  1252 ;; This function calls:
  1253 ;;		_strchr
  1254 ;;		_strlen
  1255 ;;		_strncmp
  1256 ;; This function is called by:
  1257 ;;		_main
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           	psect	text1
  1262   000CF8                     __ptext1:
  1263                           	callstack 0
  1264   000CF8                     _strstr:
  1265                           	callstack 28
  1266   000CF8  500A               	movf	strstr@n^0,w,c
  1267   000CFA  B4D8               	btfsc	status,2,c
  1268   000CFC  EF82  F006         	goto	u991
  1269   000D00  EF84  F006         	goto	u990
  1270   000D04                     u991:
  1271   000D04  EFC4  F006         	goto	l1642
  1272   000D08                     u990:
  1273   000D08  C00A  F004         	movff	strstr@n,strlen@s
  1274   000D0C  EC40  F008         	call	_strlen	;wreg free
  1275   000D10  C004  F00B         	movff	?_strlen,strstr@nl
  1276   000D14  C005  F00C         	movff	?_strlen+1,strstr@nl+1
  1277   000D18  EFB1  F006         	goto	l1638
  1278   000D1C                     l1630:
  1279   000D1C  C009  F004         	movff	strstr@h,strncmp@l
  1280   000D20  C00A  F005         	movff	strstr@n,strncmp@r
  1281   000D24  C00B  F006         	movff	strstr@nl,strncmp@n
  1282   000D28  C00C  F007         	movff	strstr@nl+1,strncmp@n+1
  1283   000D2C  EC77  F005         	call	_strncmp	;wreg free
  1284   000D30  5004               	movf	?_strncmp^0,w,c
  1285   000D32  1005               	iorwf	(?_strncmp+1)^0,w,c
  1286   000D34  A4D8               	btfss	status,2,c
  1287   000D36  EF9F  F006         	goto	u1001
  1288   000D3A  EFA1  F006         	goto	u1000
  1289   000D3E                     u1001:
  1290   000D3E  EFA4  F006         	goto	l1636
  1291   000D42                     u1000:
  1292   000D42  5009               	movf	strstr@h^0,w,c
  1293   000D44  EFC5  F006         	goto	l946
  1294   000D48                     l1636:
  1295   000D48  2809               	incf	strstr@h^0,w,c
  1296   000D4A  6E04               	movwf	strchr@s^0,c
  1297   000D4C  C00A  FFF6         	movff	strstr@n,tblptrl
  1298   000D50                     	if	1	;There is more than 1 active tblptr byte
  1299   000D50  0E06               	movlw	high __smallconst
  1300   000D52  6EF7               	movwf	tblptrh,c
  1301   000D54                     	endif
  1302   000D54                     	if	0	;tblptru may be non-zero
  1303   000D54                     	endif
  1304   000D54                     	if	0	;tblptru may be non-zero
  1305   000D54                     	endif
  1306   000D54  0008               	tblrd		*
  1307   000D56  50F5               	movf	tablat,w,c
  1308   000D58  6E05               	movwf	strchr@c^0,c
  1309   000D5A  6A06               	clrf	(strchr@c+1)^0,c
  1310   000D5C  EC23  F008         	call	_strchr	;wreg free
  1311   000D60  6E09               	movwf	strstr@h^0,c
  1312   000D62                     l1638:
  1313   000D62  5009               	movf	strstr@h^0,w,c
  1314   000D64  B4D8               	btfsc	status,2,c
  1315   000D66  EFB7  F006         	goto	u1011
  1316   000D6A  EFB9  F006         	goto	u1010
  1317   000D6E                     u1011:
  1318   000D6E  EFC4  F006         	goto	l1642
  1319   000D72                     u1010:
  1320   000D72  5009               	movf	strstr@h^0,w,c
  1321   000D74  6ED9               	movwf	fsr2l,c
  1322   000D76  6ADA               	clrf	fsr2h,c
  1323   000D78  50DF               	movf	indf2,w,c
  1324   000D7A  A4D8               	btfss	status,2,c
  1325   000D7C  EFC2  F006         	goto	u1021
  1326   000D80  EFC4  F006         	goto	u1020
  1327   000D84                     u1021:
  1328   000D84  EF8E  F006         	goto	l1630
  1329   000D88                     u1020:
  1330   000D88                     l1642:
  1331   000D88  0E00               	movlw	0
  1332   000D8A                     l946:
  1333   000D8A  0012               	return		;funcret
  1334   000D8C                     __end_of_strstr:
  1335                           	callstack 0
  1336                           
  1337 ;; *************** function _strncmp *****************
  1338 ;; Defined at:
  1339 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strncmp.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  l               1    3[COMRAM] PTR const unsigned char 
  1342 ;;		 -> NULL(0), uart_rx_buffer(10), 
  1343 ;;  r               1    4[COMRAM] PTR const unsigned char 
  1344 ;;		 -> STR_22(9), STR_19(9), STR_17(9), STR_15(9), 
  1345 ;;		 -> STR_13(9), STR_11(9), STR_9(9), STR_7(9), 
  1346 ;;		 -> STR_5(9), STR_2(9), 
  1347 ;;  n               2    5[COMRAM] unsigned int 
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;		None
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  2    3[COMRAM] int 
  1352 ;; Registers used:
  1353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1359 ;;      Params:         4       0       0       0       0       0       0
  1360 ;;      Locals:         0       0       0       0       0       0       0
  1361 ;;      Temps:          1       0       0       0       0       0       0
  1362 ;;      Totals:         5       0       0       0       0       0       0
  1363 ;;Total ram usage:        5 bytes
  1364 ;; Hardware stack levels used: 1
  1365 ;; Hardware stack levels required when called: 1
  1366 ;; This function calls:
  1367 ;;		Nothing
  1368 ;; This function is called by:
  1369 ;;		_strstr
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           	psect	text2
  1374   000AEE                     __ptext2:
  1375                           	callstack 0
  1376   000AEE                     _strncmp:
  1377                           	callstack 28
  1378   000AEE  0606               	decf	strncmp@n^0,f,c
  1379   000AF0  A0D8               	btfss	status,0,c
  1380   000AF2  0607               	decf	(strncmp@n+1)^0,f,c
  1381   000AF4  2806               	incf	strncmp@n^0,w,c
  1382   000AF6  E106               	bnz	u861
  1383   000AF8  2807               	incf	(strncmp@n+1)^0,w,c
  1384   000AFA  A4D8               	btfss	status,2,c
  1385   000AFC  EF82  F005         	goto	u861
  1386   000B00  EF84  F005         	goto	u860
  1387   000B04                     u861:
  1388   000B04  EF8F  F005         	goto	l1542
  1389   000B08                     u860:
  1390   000B08  0E00               	movlw	0
  1391   000B0A  6E05               	movwf	(?_strncmp+1)^0,c
  1392   000B0C  0E00               	movlw	0
  1393   000B0E  6E04               	movwf	?_strncmp^0,c
  1394   000B10  EFD4  F005         	goto	l965
  1395   000B14                     l1540:
  1396   000B14  2A04               	incf	strncmp@l^0,f,c
  1397   000B16  2A05               	incf	strncmp@r^0,f,c
  1398   000B18  0606               	decf	strncmp@n^0,f,c
  1399   000B1A  A0D8               	btfss	status,0,c
  1400   000B1C  0607               	decf	(strncmp@n+1)^0,f,c
  1401   000B1E                     l1542:
  1402   000B1E  5004               	movf	strncmp@l^0,w,c
  1403   000B20  6ED9               	movwf	fsr2l,c
  1404   000B22  6ADA               	clrf	fsr2h,c
  1405   000B24  50DF               	movf	indf2,w,c
  1406   000B26  B4D8               	btfsc	status,2,c
  1407   000B28  EF98  F005         	goto	u871
  1408   000B2C  EF9A  F005         	goto	u870
  1409   000B30                     u871:
  1410   000B30  EFC4  F005         	goto	l1550
  1411   000B34                     u870:
  1412   000B34  C005  FFF6         	movff	strncmp@r,tblptrl
  1413   000B38                     	if	1	;There is more than 1 active tblptr byte
  1414   000B38  0E06               	movlw	high __smallconst
  1415   000B3A  6EF7               	movwf	tblptrh,c
  1416   000B3C                     	endif
  1417   000B3C                     	if	0	;tblptru may be non-zero
  1418   000B3C                     	endif
  1419   000B3C                     	if	0	;tblptru may be non-zero
  1420   000B3C                     	endif
  1421   000B3C  0008               	tblrd		*
  1422   000B3E  50F5               	movf	tablat,w,c
  1423   000B40  0900               	iorlw	0
  1424   000B42  B4D8               	btfsc	status,2,c
  1425   000B44  EFA6  F005         	goto	u881
  1426   000B48  EFA8  F005         	goto	u880
  1427   000B4C                     u881:
  1428   000B4C  EFC4  F005         	goto	l1550
  1429   000B50                     u880:
  1430   000B50  5006               	movf	strncmp@n^0,w,c
  1431   000B52  1007               	iorwf	(strncmp@n+1)^0,w,c
  1432   000B54  B4D8               	btfsc	status,2,c
  1433   000B56  EFAF  F005         	goto	u891
  1434   000B5A  EFB1  F005         	goto	u890
  1435   000B5E                     u891:
  1436   000B5E  EFC4  F005         	goto	l1550
  1437   000B62                     u890:
  1438   000B62  5004               	movf	strncmp@l^0,w,c
  1439   000B64  6ED9               	movwf	fsr2l,c
  1440   000B66  6ADA               	clrf	fsr2h,c
  1441   000B68  50DF               	movf	indf2,w,c
  1442   000B6A  6E08               	movwf	??_strncmp^0,c
  1443   000B6C  C005  FFF6         	movff	strncmp@r,tblptrl
  1444   000B70                     	if	1	;There is more than 1 active tblptr byte
  1445   000B70  0E06               	movlw	high __smallconst
  1446   000B72  6EF7               	movwf	tblptrh,c
  1447   000B74                     	endif
  1448   000B74                     	if	0	;tblptru may be non-zero
  1449   000B74                     	endif
  1450   000B74                     	if	0	;tblptru may be non-zero
  1451   000B74                     	endif
  1452   000B74  0008               	tblrd		*
  1453   000B76  50F5               	movf	tablat,w,c
  1454   000B78  1808               	xorwf	??_strncmp^0,w,c
  1455   000B7A  B4D8               	btfsc	status,2,c
  1456   000B7C  EFC2  F005         	goto	u901
  1457   000B80  EFC4  F005         	goto	u900
  1458   000B84                     u901:
  1459   000B84  EF8A  F005         	goto	l1540
  1460   000B88                     u900:
  1461   000B88                     l1550:
  1462   000B88  5004               	movf	strncmp@l^0,w,c
  1463   000B8A  6ED9               	movwf	fsr2l,c
  1464   000B8C  6ADA               	clrf	fsr2h,c
  1465   000B8E  50DF               	movf	indf2,w,c
  1466   000B90  6E08               	movwf	??_strncmp^0,c
  1467   000B92  C005  FFF6         	movff	strncmp@r,tblptrl
  1468   000B96                     	if	1	;There is more than 1 active tblptr byte
  1469   000B96  0E06               	movlw	high __smallconst
  1470   000B98  6EF7               	movwf	tblptrh,c
  1471   000B9A                     	endif
  1472   000B9A                     	if	0	;tblptru may be non-zero
  1473   000B9A                     	endif
  1474   000B9A                     	if	0	;tblptru may be non-zero
  1475   000B9A                     	endif
  1476   000B9A  0008               	tblrd		*
  1477   000B9C  50F5               	movf	tablat,w,c
  1478   000B9E  5C08               	subwf	??_strncmp^0,w,c
  1479   000BA0  6E04               	movwf	?_strncmp^0,c
  1480   000BA2  6A05               	clrf	(?_strncmp+1)^0,c
  1481   000BA4  A0D8               	btfss	status,0,c
  1482   000BA6  0605               	decf	(?_strncmp+1)^0,f,c
  1483   000BA8                     l965:
  1484   000BA8  0012               	return		;funcret
  1485   000BAA                     __end_of_strncmp:
  1486                           	callstack 0
  1487                           
  1488 ;; *************** function _strlen *****************
  1489 ;; Defined at:
  1490 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
  1491 ;; Parameters:    Size  Location     Type
  1492 ;;  s               1    3[COMRAM] PTR const unsigned char 
  1493 ;;		 -> STR_22(9), STR_19(9), STR_17(9), STR_15(9), 
  1494 ;;		 -> STR_13(9), STR_11(9), STR_9(9), STR_7(9), 
  1495 ;;		 -> STR_5(9), STR_2(9), 
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;  a               1    5[COMRAM] PTR const unsigned char 
  1498 ;;		 -> STR_22(9), STR_19(9), STR_17(9), STR_15(9), 
  1499 ;;		 -> STR_13(9), STR_11(9), STR_9(9), STR_7(9), 
  1500 ;;		 -> STR_5(9), STR_2(9), 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  2    3[COMRAM] unsigned int 
  1503 ;; Registers used:
  1504 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1510 ;;      Params:         2       0       0       0       0       0       0
  1511 ;;      Locals:         1       0       0       0       0       0       0
  1512 ;;      Temps:          0       0       0       0       0       0       0
  1513 ;;      Totals:         3       0       0       0       0       0       0
  1514 ;;Total ram usage:        3 bytes
  1515 ;; Hardware stack levels used: 1
  1516 ;; Hardware stack levels required when called: 1
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_strstr
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           	psect	text3
  1525   001080                     __ptext3:
  1526                           	callstack 0
  1527   001080                     _strlen:
  1528                           	callstack 28
  1529   001080  C004  F006         	movff	strlen@s,strlen@a
  1530   001084  EF45  F008         	goto	l1528
  1531   001088                     l1526:
  1532   001088  2A04               	incf	strlen@s^0,f,c
  1533   00108A                     l1528:
  1534   00108A  C004  FFF6         	movff	strlen@s,tblptrl
  1535   00108E                     	if	1	;There is more than 1 active tblptr byte
  1536   00108E  0E06               	movlw	high __smallconst
  1537   001090  6EF7               	movwf	tblptrh,c
  1538   001092                     	endif
  1539   001092                     	if	0	;tblptru may be non-zero
  1540   001092                     	endif
  1541   001092                     	if	0	;tblptru may be non-zero
  1542   001092                     	endif
  1543   001092  0008               	tblrd		*
  1544   001094  50F5               	movf	tablat,w,c
  1545   001096  0900               	iorlw	0
  1546   001098  A4D8               	btfss	status,2,c
  1547   00109A  EF51  F008         	goto	u851
  1548   00109E  EF53  F008         	goto	u850
  1549   0010A2                     u851:
  1550   0010A2  EF44  F008         	goto	l1526
  1551   0010A6                     u850:
  1552   0010A6  5006               	movf	strlen@a^0,w,c
  1553   0010A8  5C04               	subwf	strlen@s^0,w,c
  1554   0010AA  6E04               	movwf	?_strlen^0,c
  1555   0010AC  6A05               	clrf	(?_strlen+1)^0,c
  1556   0010AE  BE04               	btfsc	?_strlen^0,7,c
  1557   0010B0  0605               	decf	(?_strlen+1)^0,f,c
  1558   0010B2  0012               	return		;funcret
  1559   0010B4                     __end_of_strlen:
  1560                           	callstack 0
  1561                           
  1562 ;; *************** function _strchr *****************
  1563 ;; Defined at:
  1564 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strchr.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;  s               1    3[COMRAM] PTR const unsigned char 
  1567 ;;		 -> NULL(0), uart_rx_buffer(10), 
  1568 ;;  c               2    4[COMRAM] int 
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;		None
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    3[COMRAM] PTR unsigned char 
  1573 ;; Registers used:
  1574 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1580 ;;      Params:         3       0       0       0       0       0       0
  1581 ;;      Locals:         0       0       0       0       0       0       0
  1582 ;;      Temps:          1       0       0       0       0       0       0
  1583 ;;      Totals:         4       0       0       0       0       0       0
  1584 ;;Total ram usage:        4 bytes
  1585 ;; Hardware stack levels used: 1
  1586 ;; Hardware stack levels required when called: 1
  1587 ;; This function calls:
  1588 ;;		Nothing
  1589 ;; This function is called by:
  1590 ;;		_strstr
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text4
  1595   001046                     __ptext4:
  1596                           	callstack 0
  1597   001046                     _strchr:
  1598                           	callstack 28
  1599   001046                     l952:
  1600   001046  5004               	movf	strchr@s^0,w,c
  1601   001048  6ED9               	movwf	fsr2l,c
  1602   00104A  6ADA               	clrf	fsr2h,c
  1603   00104C  5005               	movf	strchr@c^0,w,c
  1604   00104E  18DE               	xorwf	postinc2,w,c
  1605   001050  A4D8               	btfss	status,2,c
  1606   001052  EF2D  F008         	goto	u911
  1607   001056  EF2F  F008         	goto	u910
  1608   00105A                     u911:
  1609   00105A  EF32  F008         	goto	l1560
  1610   00105E                     u910:
  1611   00105E  5004               	movf	strchr@s^0,w,c
  1612   001060  EF3F  F008         	goto	l954
  1613   001064                     l1560:
  1614   001064  2A04               	incf	strchr@s^0,f,c
  1615   001066  0404               	decf	strchr@s^0,w,c
  1616   001068  6ED9               	movwf	fsr2l,c
  1617   00106A  6ADA               	clrf	fsr2h,c
  1618   00106C  50DF               	movf	indf2,w,c
  1619   00106E  A4D8               	btfss	status,2,c
  1620   001070  EF3C  F008         	goto	u921
  1621   001074  EF3E  F008         	goto	u920
  1622   001078                     u921:
  1623   001078  EF23  F008         	goto	l952
  1624   00107C                     u920:
  1625   00107C  0E00               	movlw	0
  1626   00107E                     l954:
  1627   00107E  0012               	return		;funcret
  1628   001080                     __end_of_strchr:
  1629                           	callstack 0
  1630                           
  1631 ;; *************** function _sprintf *****************
  1632 ;; Defined at:
  1633 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;  s               1   48[COMRAM] PTR unsigned char 
  1636 ;;		 -> buffer(20), 
  1637 ;;  fmt             1   49[COMRAM] PTR const unsigned char 
  1638 ;;		 -> STR_20(10), 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;  f              11   53[COMRAM] struct _IO_FILE
  1641 ;;  ret             2    0        int 
  1642 ;;  ap              1   52[COMRAM] PTR void [1]
  1643 ;;		 -> ?_sprintf(2), 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  2   48[COMRAM] int 
  1646 ;; Registers used:
  1647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1653 ;;      Params:         4       0       0       0       0       0       0
  1654 ;;      Locals:        12       0       0       0       0       0       0
  1655 ;;      Temps:          0       0       0       0       0       0       0
  1656 ;;      Totals:        16       0       0       0       0       0       0
  1657 ;;Total ram usage:       16 bytes
  1658 ;; Hardware stack levels used: 1
  1659 ;; Hardware stack levels required when called: 8
  1660 ;; This function calls:
  1661 ;;		_vfprintf
  1662 ;; This function is called by:
  1663 ;;		_main
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text5
  1668   0010B4                     __ptext5:
  1669                           	callstack 0
  1670   0010B4                     _sprintf:
  1671                           	callstack 22
  1672   0010B4  0E33               	movlw	low (?_sprintf+2)
  1673   0010B6  6E35               	movwf	sprintf@ap^0,c
  1674   0010B8  C031  F036         	movff	sprintf@s,sprintf@f
  1675   0010BC  0E00               	movlw	0
  1676   0010BE  6E39               	movwf	(sprintf@f+3)^0,c
  1677   0010C0  0E00               	movlw	0
  1678   0010C2  6E38               	movwf	(sprintf@f+2)^0,c
  1679   0010C4  0E00               	movlw	0
  1680   0010C6  6E40               	movwf	(sprintf@f+10)^0,c
  1681   0010C8  0E00               	movlw	0
  1682   0010CA  6E3F               	movwf	(sprintf@f+9)^0,c
  1683   0010CC  0E36               	movlw	low sprintf@f
  1684   0010CE  6E2D               	movwf	vfprintf@fp^0,c
  1685   0010D0  C032  F02E         	movff	sprintf@fmt,vfprintf@fmt
  1686   0010D4  0E35               	movlw	low sprintf@ap
  1687   0010D6  6E2F               	movwf	vfprintf@ap^0,c
  1688   0010D8  ECE6  F007         	call	_vfprintf	;wreg free
  1689   0010DC  5031               	movf	sprintf@s^0,w,c
  1690   0010DE  2438               	addwf	(sprintf@f+2)^0,w,c
  1691   0010E0  6ED9               	movwf	fsr2l,c
  1692   0010E2  6ADA               	clrf	fsr2h,c
  1693   0010E4  6ADF               	clrf	indf2,c
  1694   0010E6  0012               	return		;funcret
  1695   0010E8                     __end_of_sprintf:
  1696                           	callstack 0
  1697                           
  1698 ;; *************** function _vfprintf *****************
  1699 ;; Defined at:
  1700 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;  fp              1   44[COMRAM] PTR struct _IO_FILE
  1703 ;;		 -> sprintf@f(11), 
  1704 ;;  fmt             1   45[COMRAM] PTR const unsigned char 
  1705 ;;		 -> STR_20(10), 
  1706 ;;  ap              1   46[COMRAM] PTR PTR void 
  1707 ;;		 -> sprintf@ap(1), 
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  cfmt            1   47[COMRAM] PTR unsigned char 
  1710 ;;		 -> STR_20(10), 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  2   44[COMRAM] int 
  1713 ;; Registers used:
  1714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1720 ;;      Params:         3       0       0       0       0       0       0
  1721 ;;      Locals:         1       0       0       0       0       0       0
  1722 ;;      Temps:          0       0       0       0       0       0       0
  1723 ;;      Totals:         4       0       0       0       0       0       0
  1724 ;;Total ram usage:        4 bytes
  1725 ;; Hardware stack levels used: 1
  1726 ;; Hardware stack levels required when called: 7
  1727 ;; This function calls:
  1728 ;;		_vfpfcnvrt
  1729 ;; This function is called by:
  1730 ;;		_sprintf
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           	psect	text6
  1735   000FCC                     __ptext6:
  1736                           	callstack 0
  1737   000FCC                     _vfprintf:
  1738                           	callstack 22
  1739   000FCC                     
  1740                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1741   000FCC  C02E  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  1742                           
  1743                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1744   000FD0  EFF2  F007         	goto	l1518
  1745   000FD4                     l1516:
  1746                           
  1747                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1748   000FD4  C02D  F024         	movff	vfprintf@fp,vfpfcnvrt@fp
  1749   000FD8  0E30               	movlw	low vfprintf@cfmt
  1750   000FDA  6E25               	movwf	vfpfcnvrt@fmt^0,c
  1751   000FDC  C02F  F026         	movff	vfprintf@ap,vfpfcnvrt@ap
  1752   000FE0  EC50  F004         	call	_vfpfcnvrt	;wreg free
  1753   000FE4                     l1518:
  1754                           
  1755                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1756   000FE4  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  1757   000FE8                     	if	1	;There is more than 1 active tblptr byte
  1758   000FE8  0E06               	movlw	high __smallconst
  1759   000FEA  6EF7               	movwf	tblptrh,c
  1760   000FEC                     	endif
  1761   000FEC                     	if	0	;tblptru may be non-zero
  1762   000FEC                     	endif
  1763   000FEC                     	if	0	;tblptru may be non-zero
  1764   000FEC                     	endif
  1765   000FEC  0008               	tblrd		*
  1766   000FEE  50F5               	movf	tablat,w,c
  1767   000FF0  0900               	iorlw	0
  1768   000FF2  A4D8               	btfss	status,2,c
  1769   000FF4  EFFE  F007         	goto	u841
  1770   000FF8  EF00  F008         	goto	u840
  1771   000FFC                     u841:
  1772   000FFC  EFEA  F007         	goto	l1516
  1773   001000                     u840:
  1774   001000                     
  1775                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1776   001000  0E00               	movlw	0
  1777   001002  6E2E               	movwf	(?_vfprintf+1)^0,c
  1778   001004  0E00               	movlw	0
  1779   001006  6E2D               	movwf	?_vfprintf^0,c
  1780   001008  0012               	return		;funcret
  1781   00100A                     __end_of_vfprintf:
  1782                           	callstack 0
  1783                           
  1784 ;; *************** function _vfpfcnvrt *****************
  1785 ;; Defined at:
  1786 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  fp              1   35[COMRAM] PTR struct _IO_FILE
  1789 ;;		 -> sprintf@f(11), 
  1790 ;;  fmt             1   36[COMRAM] PTR PTR unsigned char 
  1791 ;;		 -> vfprintf@cfmt(1), 
  1792 ;;  ap              1   37[COMRAM] PTR PTR void 
  1793 ;;		 -> sprintf@ap(1), 
  1794 ;; Auto vars:     Size  Location     Type
  1795 ;;  convarg         4   38[COMRAM] struct .
  1796 ;;  cp              1   43[COMRAM] PTR unsigned char 
  1797 ;;		 -> STR_20(10), 
  1798 ;;  done            1   42[COMRAM] _Bool 
  1799 ;;  c               1    0        unsigned char 
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1    wreg      void 
  1802 ;; Registers used:
  1803 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1809 ;;      Params:         3       0       0       0       0       0       0
  1810 ;;      Locals:         6       0       0       0       0       0       0
  1811 ;;      Temps:          0       0       0       0       0       0       0
  1812 ;;      Totals:         9       0       0       0       0       0       0
  1813 ;;Total ram usage:        9 bytes
  1814 ;; Hardware stack levels used: 1
  1815 ;; Hardware stack levels required when called: 6
  1816 ;; This function calls:
  1817 ;;		_fputc
  1818 ;;		_read_prec_or_width
  1819 ;;		_xtoa
  1820 ;; This function is called by:
  1821 ;;		_vfprintf
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text7
  1826   0008A0                     __ptext7:
  1827                           	callstack 0
  1828   0008A0                     _vfpfcnvrt:
  1829                           	callstack 22
  1830   0008A0                     
  1831                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1832   0008A0  5025               	movf	vfpfcnvrt@fmt^0,w,c
  1833   0008A2  6ED9               	movwf	fsr2l,c
  1834   0008A4  6ADA               	clrf	fsr2h,c
  1835   0008A6  CFDF FFF6          	movff	indf2,tblptrl
  1836   0008AA                     	if	1	;There is more than 1 active tblptr byte
  1837   0008AA  0E06               	movlw	high __smallconst
  1838   0008AC  6EF7               	movwf	tblptrh,c
  1839   0008AE                     	endif
  1840   0008AE                     	if	0	;tblptru may be non-zero
  1841   0008AE                     	endif
  1842   0008AE                     	if	0	;tblptru may be non-zero
  1843   0008AE                     	endif
  1844   0008AE  0008               	tblrd		*
  1845   0008B0  50F5               	movf	tablat,w,c
  1846   0008B2  0A25               	xorlw	37
  1847   0008B4  A4D8               	btfss	status,2,c
  1848   0008B6  EF5F  F004         	goto	u791
  1849   0008BA  EF61  F004         	goto	u790
  1850   0008BE                     u791:
  1851   0008BE  EFEA  F004         	goto	l1502
  1852   0008C2                     u790:
  1853   0008C2                     
  1854                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1855   0008C2  5025               	movf	vfpfcnvrt@fmt^0,w,c
  1856   0008C4  6ED9               	movwf	fsr2l,c
  1857   0008C6  6ADA               	clrf	fsr2h,c
  1858   0008C8  2ADF               	incf	indf2,f,c
  1859   0008CA                     
  1860                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1861   0008CA  0E00               	movlw	0
  1862   0008CC  6E44               	movwf	(_width+1)^0,c
  1863   0008CE  0E00               	movlw	0
  1864   0008D0  6E43               	movwf	_width^0,c
  1865   0008D2  C043  F047         	movff	_width,_flags
  1866   0008D6                     
  1867                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1868   0008D6  6845               	setf	_prec^0,c
  1869   0008D8  6846               	setf	(_prec+1)^0,c
  1870   0008DA                     
  1871                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1872   0008DA  6A2B               	clrf	vfpfcnvrt@done^0,c
  1873                           
  1874                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1875   0008DC  EF8A  F004         	goto	l1474
  1876   0008E0                     l1464:
  1877                           
  1878                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1879   0008E0  8247               	bsf	_flags^0,1,c
  1880   0008E2                     
  1881                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1882   0008E2  5025               	movf	vfpfcnvrt@fmt^0,w,c
  1883   0008E4  6ED9               	movwf	fsr2l,c
  1884   0008E6  6ADA               	clrf	fsr2h,c
  1885   0008E8  2ADF               	incf	indf2,f,c
  1886                           
  1887                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1888   0008EA  EF8A  F004         	goto	l1474
  1889   0008EE                     l1468:
  1890                           
  1891                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1892   0008EE  0E01               	movlw	1
  1893   0008F0  6E2B               	movwf	vfpfcnvrt@done^0,c
  1894                           
  1895                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1896   0008F2  EF8A  F004         	goto	l1474
  1897   0008F6                     l1472:
  1898   0008F6  5025               	movf	vfpfcnvrt@fmt^0,w,c
  1899   0008F8  6ED9               	movwf	fsr2l,c
  1900   0008FA  6ADA               	clrf	fsr2h,c
  1901   0008FC  CFDF FFF6          	movff	indf2,tblptrl
  1902   000900                     	if	1	;There is more than 1 active tblptr byte
  1903   000900  0E06               	movlw	high __smallconst
  1904   000902  6EF7               	movwf	tblptrh,c
  1905   000904                     	endif
  1906   000904                     	if	0	;tblptru may be non-zero
  1907   000904                     	endif
  1908   000904                     	if	0	;tblptru may be non-zero
  1909   000904                     	endif
  1910   000904  0008               	tblrd		*
  1911   000906  50F5               	movf	tablat,w,c
  1912                           
  1913                           ; Switch size 1, requested type "simple"
  1914                           ; Number of cases is 1, Range of values is 48 to 48
  1915                           ; switch strategies available:
  1916                           ; Name         Instructions Cycles
  1917                           ; simple_byte            4     3 (average)
  1918                           ;	Chosen strategy is simple_byte
  1919   000908  0A30               	xorlw	48	; case 48
  1920   00090A  B4D8               	btfsc	status,2,c
  1921   00090C  EF70  F004         	goto	l1464
  1922   000910  EF77  F004         	goto	l1468
  1923   000914                     l1474:
  1924                           
  1925                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1926   000914  502B               	movf	vfpfcnvrt@done^0,w,c
  1927   000916  B4D8               	btfsc	status,2,c
  1928   000918  EF90  F004         	goto	u801
  1929   00091C  EF92  F004         	goto	u800
  1930   000920                     u801:
  1931   000920  EF7B  F004         	goto	l1472
  1932   000924                     u800:
  1933   000924                     
  1934                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1935   000924  C025  F004         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1936   000928  C026  F005         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1937   00092C  EC2A  F006         	call	_read_prec_or_width	;wreg free
  1938   000930  C004  F043         	movff	?_read_prec_or_width,_width
  1939   000934  C005  F044         	movff	?_read_prec_or_width+1,_width+1
  1940   000938                     
  1941                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1942   000938  BE44               	btfsc	(_width+1)^0,7,c
  1943   00093A  EFA3  F004         	goto	u810
  1944   00093E  EFA1  F004         	goto	u811
  1945   000942                     u811:
  1946   000942  EFA8  F004         	goto	l1482
  1947   000946                     u810:
  1948   000946                     
  1949                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1950   000946  8047               	bsf	_flags^0,0,c
  1951                           
  1952                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1953   000948  6C43               	negf	_width^0,c
  1954   00094A  1E44               	comf	(_width+1)^0,f,c
  1955   00094C  B0D8               	btfsc	status,0,c
  1956   00094E  2A44               	incf	(_width+1)^0,f,c
  1957   000950                     l1482:
  1958                           
  1959                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1439:   if (0
  1960   000950  5025               	movf	vfpfcnvrt@fmt^0,w,c
  1961   000952  6ED9               	movwf	fsr2l,c
  1962   000954  6ADA               	clrf	fsr2h,c
  1963   000956  50DF               	movf	indf2,w,c
  1964   000958  6E2C               	movwf	vfpfcnvrt@cp^0,c
  1965   00095A  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1966   00095E                     	if	1	;There is more than 1 active tblptr byte
  1967   00095E  0E06               	movlw	high __smallconst
  1968   000960  6EF7               	movwf	tblptrh,c
  1969   000962                     	endif
  1970   000962                     	if	0	;tblptru may be non-zero
  1971   000962                     	endif
  1972   000962                     	if	0	;tblptru may be non-zero
  1973   000962                     	endif
  1974   000962  0008               	tblrd		*
  1975   000964  50F5               	movf	tablat,w,c
  1976   000966  0A58               	xorlw	88
  1977   000968  A4D8               	btfss	status,2,c
  1978   00096A  EFB9  F004         	goto	u821
  1979   00096E  EFBB  F004         	goto	u820
  1980   000972                     u821:
  1981   000972  EFE4  F004         	goto	l1498
  1982   000976                     u820:
  1983   000976                     
  1984                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  1985   000976  5026               	movf	vfpfcnvrt@ap^0,w,c
  1986   000978  6ED9               	movwf	fsr2l,c
  1987   00097A  6ADA               	clrf	fsr2h,c
  1988   00097C  0E02               	movlw	2
  1989   00097E  26DF               	addwf	indf2,f,c
  1990   000980  5CDF               	subwf	indf2,w,c
  1991   000982  6ED9               	movwf	fsr2l,c
  1992   000984  6ADA               	clrf	fsr2h,c
  1993   000986  CFDE F027          	movff	postinc2,vfpfcnvrt@convarg
  1994   00098A  CFDE F028          	movff	postinc2,vfpfcnvrt@convarg+1
  1995   00098E                     
  1996                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  1997   00098E  5025               	movf	vfpfcnvrt@fmt^0,w,c
  1998   000990  6ED9               	movwf	fsr2l,c
  1999   000992  6ADA               	clrf	fsr2h,c
  2000   000994  282C               	incf	vfpfcnvrt@cp^0,w,c
  2001   000996  6EDF               	movwf	indf2,c
  2002                           
  2003                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  2004   000998  EFD8  F004         	goto	l1496
  2005   00099C                     l1490:
  2006                           
  2007                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (void) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
  2008   00099C  C024  F018         	movff	vfpfcnvrt@fp,xtoa@fp
  2009   0009A0  C027  F019         	movff	vfpfcnvrt@convarg,xtoa@d
  2010   0009A4  C028  F01A         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  2011   0009A8  ECFC  F004         	call	_xtoa	;wreg free
  2012   0009AC  EFFB  F004         	goto	l903
  2013   0009B0                     l1496:
  2014   0009B0  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2015   0009B4                     	if	1	;There is more than 1 active tblptr byte
  2016   0009B4  0E06               	movlw	high __smallconst
  2017   0009B6  6EF7               	movwf	tblptrh,c
  2018   0009B8                     	endif
  2019   0009B8                     	if	0	;tblptru may be non-zero
  2020   0009B8                     	endif
  2021   0009B8                     	if	0	;tblptru may be non-zero
  2022   0009B8                     	endif
  2023   0009B8  0008               	tblrd		*
  2024   0009BA  50F5               	movf	tablat,w,c
  2025                           
  2026                           ; Switch size 1, requested type "simple"
  2027                           ; Number of cases is 1, Range of values is 88 to 88
  2028                           ; switch strategies available:
  2029                           ; Name         Instructions Cycles
  2030                           ; simple_byte            4     3 (average)
  2031                           ;	Chosen strategy is simple_byte
  2032   0009BC  0A58               	xorlw	88	; case 88
  2033   0009BE  B4D8               	btfsc	status,2,c
  2034   0009C0  EFCE  F004         	goto	l1490
  2035   0009C4  EFE4  F004         	goto	l1498
  2036   0009C8                     l1498:
  2037                           
  2038                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2039   0009C8  5025               	movf	vfpfcnvrt@fmt^0,w,c
  2040   0009CA  6ED9               	movwf	fsr2l,c
  2041   0009CC  6ADA               	clrf	fsr2h,c
  2042   0009CE  2ADF               	incf	indf2,f,c
  2043   0009D0  EFFB  F004         	goto	l903
  2044   0009D4                     l1502:
  2045                           
  2046                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2047   0009D4  5025               	movf	vfpfcnvrt@fmt^0,w,c
  2048   0009D6  6ED9               	movwf	fsr2l,c
  2049   0009D8  6ADA               	clrf	fsr2h,c
  2050   0009DA  CFDF FFF6          	movff	indf2,tblptrl
  2051   0009DE                     	if	1	;There is more than 1 active tblptr byte
  2052   0009DE  0E06               	movlw	high __smallconst
  2053   0009E0  6EF7               	movwf	tblptrh,c
  2054   0009E2                     	endif
  2055   0009E2                     	if	0	;tblptru may be non-zero
  2056   0009E2                     	endif
  2057   0009E2                     	if	0	;tblptru may be non-zero
  2058   0009E2                     	endif
  2059   0009E2  0008               	tblrd		*
  2060   0009E4  50F5               	movf	tablat,w,c
  2061   0009E6  6E04               	movwf	fputc@c^0,c
  2062   0009E8  6A05               	clrf	(fputc@c+1)^0,c
  2063   0009EA  C024  F006         	movff	vfpfcnvrt@fp,fputc@fp
  2064   0009EE  ECD5  F005         	call	_fputc	;wreg free
  2065   0009F2  EFE4  F004         	goto	l1498
  2066   0009F6                     l903:
  2067   0009F6  0012               	return		;funcret
  2068   0009F8                     __end_of_vfpfcnvrt:
  2069                           	callstack 0
  2070                           
  2071 ;; *************** function _xtoa *****************
  2072 ;; Defined at:
  2073 ;;		line 1055 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  2076 ;;		 -> sprintf@f(11), 
  2077 ;;  d               2   24[COMRAM] unsigned int 
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;  i               2   33[COMRAM] int 
  2080 ;;  w               2   30[COMRAM] int 
  2081 ;;  c               1   32[COMRAM] unsigned char 
  2082 ;;  p               1   29[COMRAM] _Bool 
  2083 ;; Return value:  Size  Location     Type
  2084 ;;                  1    wreg      void 
  2085 ;; Registers used:
  2086 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2087 ;; Tracked objects:
  2088 ;;		On entry : 0/0
  2089 ;;		On exit  : 0/0
  2090 ;;		Unchanged: 0/0
  2091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2092 ;;      Params:         3       0       0       0       0       0       0
  2093 ;;      Locals:         6       0       0       0       0       0       0
  2094 ;;      Temps:          3       0       0       0       0       0       0
  2095 ;;      Totals:        12       0       0       0       0       0       0
  2096 ;;Total ram usage:       12 bytes
  2097 ;; Hardware stack levels used: 1
  2098 ;; Hardware stack levels required when called: 5
  2099 ;; This function calls:
  2100 ;;		_pad
  2101 ;; This function is called by:
  2102 ;;		_vfpfcnvrt
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           	psect	text8
  2107   0009F8                     __ptext8:
  2108                           	callstack 0
  2109   0009F8                     _xtoa:
  2110                           	callstack 22
  2111   0009F8                     
  2112                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1055: static void
      +                           xtoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1058: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 1059:  char c;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 
      +                          1063:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c
      +                          : 1067:  _Bool p = 1;
  2113   0009F8  0E01               	movlw	1
  2114   0009FA  6E1E               	movwf	xtoa@p^0,c
  2115   0009FC                     
  2116                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
  2117   0009FC  C043  F01F         	movff	_width,xtoa@w
  2118   000A00  C044  F020         	movff	_width+1,xtoa@w+1
  2119                           
  2120                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
  2121   000A04  0E00               	movlw	0
  2122   000A06  6E23               	movwf	(xtoa@i+1)^0,c
  2123   000A08  0E1F               	movlw	31
  2124   000A0A  6E22               	movwf	xtoa@i^0,c
  2125   000A0C                     
  2126                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
  2127   000A0C  0100               	movlb	0	; () banked
  2128   000A0E  6B9F               	clrf	(_dbuf+31)& (0+255),b
  2129                           
  2130                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  2131   000A10  EF38  F005         	goto	l1426
  2132   000A14                     l1408:
  2133                           
  2134                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1107:         --i;
  2135   000A14  0622               	decf	xtoa@i^0,f,c
  2136   000A16  A0D8               	btfss	status,0,c
  2137   000A18  0623               	decf	(xtoa@i+1)^0,f,c
  2138   000A1A                     
  2139                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
  2140   000A1A  5019               	movf	xtoa@d^0,w,c
  2141   000A1C  0B0F               	andlw	15
  2142   000A1E  6E21               	movwf	xtoa@c^0,c
  2143   000A20                     
  2144                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
  2145   000A20  0E0A               	movlw	10
  2146   000A22  6021               	cpfslt	xtoa@c^0,c
  2147   000A24  EF16  F005         	goto	u701
  2148   000A28  EF18  F005         	goto	u700
  2149   000A2C                     u701:
  2150   000A2C  EF1C  F005         	goto	l1416
  2151   000A30                     u700:
  2152   000A30                     
  2153                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
  2154   000A30  0E30               	movlw	48
  2155   000A32  2621               	addwf	xtoa@c^0,f,c
  2156                           
  2157                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1111:   }
  2158   000A34  EF1E  F005         	goto	l1418
  2159   000A38                     l1416:
  2160                           
  2161                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1118:    c += 'A'
      +                           - 10;
  2162   000A38  0E37               	movlw	55
  2163   000A3A  2621               	addwf	xtoa@c^0,f,c
  2164   000A3C                     l1418:
  2165                           
  2166                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
  2167   000A3C  5022               	movf	xtoa@i^0,w,c
  2168   000A3E  0F80               	addlw	low _dbuf
  2169   000A40  6ED9               	movwf	fsr2l,c
  2170   000A42  6ADA               	clrf	fsr2h,c
  2171   000A44  C021  FFDF         	movff	xtoa@c,indf2
  2172   000A48                     
  2173                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1125:   p = 0;
  2174   000A48  6A1E               	clrf	xtoa@p^0,c
  2175   000A4A                     
  2176                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
  2177   000A4A  061F               	decf	xtoa@w^0,f,c
  2178   000A4C  A0D8               	btfss	status,0,c
  2179   000A4E  0620               	decf	(xtoa@w+1)^0,f,c
  2180   000A50                     
  2181                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
  2182   000A50  C019  F01B         	movff	xtoa@d,??_xtoa
  2183   000A54  C01A  F01C         	movff	xtoa@d+1,??_xtoa+1
  2184   000A58  0E04               	movlw	4
  2185   000A5A  6E1D               	movwf	(??_xtoa+2)^0,c
  2186   000A5C                     u715:
  2187   000A5C  90D8               	bcf	status,0,c
  2188   000A5E  321C               	rrcf	(??_xtoa+1)^0,f,c
  2189   000A60  321B               	rrcf	??_xtoa^0,f,c
  2190   000A62  2E1D               	decfsz	(??_xtoa+2)^0,f,c
  2191   000A64  EF2E  F005         	goto	u715
  2192   000A68  C01B  F019         	movff	??_xtoa,xtoa@d
  2193   000A6C  C01C  F01A         	movff	??_xtoa+1,xtoa@d+1
  2194   000A70                     l1426:
  2195                           
  2196                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  2197   000A70  BE23               	btfsc	(xtoa@i+1)^0,7,c
  2198   000A72  EF44  F005         	goto	u721
  2199   000A76  5023               	movf	(xtoa@i+1)^0,w,c
  2200   000A78  E109               	bnz	u720
  2201   000A7A  0E02               	movlw	2
  2202   000A7C  5C22               	subwf	xtoa@i^0,w,c
  2203   000A7E  A0D8               	btfss	status,0,c
  2204   000A80  EF44  F005         	goto	u721
  2205   000A84  EF46  F005         	goto	u720
  2206   000A88                     u721:
  2207   000A88  EF6B  F005         	goto	l1436
  2208   000A8C                     u720:
  2209   000A8C  5019               	movf	xtoa@d^0,w,c
  2210   000A8E  101A               	iorwf	(xtoa@d+1)^0,w,c
  2211   000A90  A4D8               	btfss	status,2,c
  2212   000A92  EF4D  F005         	goto	u731
  2213   000A96  EF4F  F005         	goto	u730
  2214   000A9A                     u731:
  2215   000A9A  EF0A  F005         	goto	l1408
  2216   000A9E                     u730:
  2217   000A9E  501E               	movf	xtoa@p^0,w,c
  2218   000AA0  A4D8               	btfss	status,2,c
  2219   000AA2  EF55  F005         	goto	u741
  2220   000AA6  EF57  F005         	goto	u740
  2221   000AAA                     u741:
  2222   000AAA  EF0A  F005         	goto	l1408
  2223   000AAE                     u740:
  2224   000AAE  BE20               	btfsc	(xtoa@w+1)^0,7,c
  2225   000AB0  EF62  F005         	goto	u751
  2226   000AB4  5020               	movf	(xtoa@w+1)^0,w,c
  2227   000AB6  E108               	bnz	u750
  2228   000AB8  041F               	decf	xtoa@w^0,w,c
  2229   000ABA  A0D8               	btfss	status,0,c
  2230   000ABC  EF62  F005         	goto	u751
  2231   000AC0  EF64  F005         	goto	u750
  2232   000AC4                     u751:
  2233   000AC4  EF6B  F005         	goto	l1436
  2234   000AC8                     u750:
  2235   000AC8  B247               	btfsc	_flags^0,1,c
  2236   000ACA  EF69  F005         	goto	u761
  2237   000ACE  EF6B  F005         	goto	u760
  2238   000AD2                     u761:
  2239   000AD2  EF0A  F005         	goto	l1408
  2240   000AD6                     u760:
  2241   000AD6                     l1436:
  2242                           
  2243                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  2244   000AD6  C018  F011         	movff	xtoa@fp,pad@fp
  2245   000ADA  5022               	movf	xtoa@i^0,w,c
  2246   000ADC  0F80               	addlw	low _dbuf
  2247   000ADE  6E12               	movwf	pad@buf^0,c
  2248   000AE0  C01F  F013         	movff	xtoa@w,pad@p
  2249   000AE4  C020  F014         	movff	xtoa@w+1,pad@p+1
  2250   000AE8  EC0D  F007         	call	_pad	;wreg free
  2251   000AEC  0012               	return		;funcret
  2252   000AEE                     __end_of_xtoa:
  2253                           	callstack 0
  2254                           
  2255 ;; *************** function _pad *****************
  2256 ;; Defined at:
  2257 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  fp              1   16[COMRAM] PTR struct _IO_FILE
  2260 ;;		 -> sprintf@f(11), 
  2261 ;;  buf             1   17[COMRAM] PTR unsigned char 
  2262 ;;		 -> dbuf(32), 
  2263 ;;  p               2   18[COMRAM] int 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  i               2   21[COMRAM] int 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2275 ;;      Params:         4       0       0       0       0       0       0
  2276 ;;      Locals:         2       0       0       0       0       0       0
  2277 ;;      Temps:          1       0       0       0       0       0       0
  2278 ;;      Totals:         7       0       0       0       0       0       0
  2279 ;;Total ram usage:        7 bytes
  2280 ;; Hardware stack levels used: 1
  2281 ;; Hardware stack levels required when called: 4
  2282 ;; This function calls:
  2283 ;;		_fputc
  2284 ;;		_fputs
  2285 ;; This function is called by:
  2286 ;;		_xtoa
  2287 ;; This function uses a non-reentrant model
  2288 ;;
  2289                           
  2290                           	psect	text9
  2291   000E1A                     __ptext9:
  2292                           	callstack 0
  2293   000E1A                     _pad:
  2294                           	callstack 22
  2295   000E1A                     
  2296                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  2297   000E1A  A047               	btfss	_flags^0,0,c
  2298   000E1C  EF12  F007         	goto	u661
  2299   000E20  EF14  F007         	goto	u660
  2300   000E24                     u661:
  2301   000E24  EF1A  F007         	goto	l1390
  2302   000E28                     u660:
  2303   000E28                     
  2304                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  2305   000E28  C012  F00C         	movff	pad@buf,fputs@s
  2306   000E2C  C011  F00D         	movff	pad@fp,fputs@fp
  2307   000E30  EC05  F008         	call	_fputs	;wreg free
  2308   000E34                     l1390:
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  2311   000E34  BE14               	btfsc	(pad@p+1)^0,7,c
  2312   000E36  EF21  F007         	goto	u670
  2313   000E3A  EF1F  F007         	goto	u671
  2314   000E3E                     u671:
  2315   000E3E  EF25  F007         	goto	l861
  2316   000E42                     u670:
  2317   000E42                     
  2318                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  2319   000E42  0E00               	movlw	0
  2320   000E44  6E14               	movwf	(pad@p+1)^0,c
  2321   000E46  0E00               	movlw	0
  2322   000E48  6E13               	movwf	pad@p^0,c
  2323   000E4A                     l861:
  2324                           
  2325                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  2326   000E4A  0E00               	movlw	0
  2327   000E4C  6E17               	movwf	(pad@i+1)^0,c
  2328   000E4E  0E00               	movlw	0
  2329   000E50  6E16               	movwf	pad@i^0,c
  2330                           
  2331                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2332   000E52  EF35  F007         	goto	l1398
  2333   000E56                     l1394:
  2334                           
  2335                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  2336   000E56  0E00               	movlw	0
  2337   000E58  6E05               	movwf	(fputc@c+1)^0,c
  2338   000E5A  0E20               	movlw	32
  2339   000E5C  6E04               	movwf	fputc@c^0,c
  2340   000E5E  C011  F006         	movff	pad@fp,fputc@fp
  2341   000E62  ECD5  F005         	call	_fputc	;wreg free
  2342   000E66                     
  2343                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  2344   000E66  4A16               	infsnz	pad@i^0,f,c
  2345   000E68  2A17               	incf	(pad@i+1)^0,f,c
  2346   000E6A                     l1398:
  2347                           
  2348                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2349   000E6A  5013               	movf	pad@p^0,w,c
  2350   000E6C  5C16               	subwf	pad@i^0,w,c
  2351   000E6E  5017               	movf	(pad@i+1)^0,w,c
  2352   000E70  0A80               	xorlw	128
  2353   000E72  6E15               	movwf	??_pad^0,c
  2354   000E74  5014               	movf	(pad@p+1)^0,w,c
  2355   000E76  0A80               	xorlw	128
  2356   000E78  5815               	subwfb	??_pad^0,w,c
  2357   000E7A  A0D8               	btfss	status,0,c
  2358   000E7C  EF42  F007         	goto	u681
  2359   000E80  EF44  F007         	goto	u680
  2360   000E84                     u681:
  2361   000E84  EF2B  F007         	goto	l1394
  2362   000E88                     u680:
  2363   000E88                     
  2364                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  2365   000E88  B047               	btfsc	_flags^0,0,c
  2366   000E8A  EF49  F007         	goto	u691
  2367   000E8E  EF4B  F007         	goto	u690
  2368   000E92                     u691:
  2369   000E92  EF51  F007         	goto	l866
  2370   000E96                     u690:
  2371   000E96                     
  2372                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  2373   000E96  C012  F00C         	movff	pad@buf,fputs@s
  2374   000E9A  C011  F00D         	movff	pad@fp,fputs@fp
  2375   000E9E  EC05  F008         	call	_fputs	;wreg free
  2376   000EA2                     l866:
  2377   000EA2  0012               	return		;funcret
  2378   000EA4                     __end_of_pad:
  2379                           	callstack 0
  2380                           
  2381 ;; *************** function _fputs *****************
  2382 ;; Defined at:
  2383 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  2384 ;; Parameters:    Size  Location     Type
  2385 ;;  s               1   11[COMRAM] PTR const unsigned char 
  2386 ;;		 -> dbuf(32), 
  2387 ;;  fp              1   12[COMRAM] PTR struct _IO_FILE
  2388 ;;		 -> sprintf@f(11), 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  i               2   14[COMRAM] int 
  2391 ;;  c               1   13[COMRAM] unsigned char 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  2   11[COMRAM] int 
  2394 ;; Registers used:
  2395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2401 ;;      Params:         2       0       0       0       0       0       0
  2402 ;;      Locals:         3       0       0       0       0       0       0
  2403 ;;      Temps:          0       0       0       0       0       0       0
  2404 ;;      Totals:         5       0       0       0       0       0       0
  2405 ;;Total ram usage:        5 bytes
  2406 ;; Hardware stack levels used: 1
  2407 ;; Hardware stack levels required when called: 3
  2408 ;; This function calls:
  2409 ;;		_fputc
  2410 ;; This function is called by:
  2411 ;;		_pad
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text10
  2416   00100A                     __ptext10:
  2417                           	callstack 0
  2418   00100A                     _fputs:
  2419                           	callstack 22
  2420   00100A  0E00               	movlw	0
  2421   00100C  6E10               	movwf	(fputs@i+1)^0,c
  2422   00100E  0E00               	movlw	0
  2423   001010  6E0F               	movwf	fputs@i^0,c
  2424   001012  EF14  F008         	goto	l1384
  2425   001016                     l1380:
  2426   001016  C00E  F004         	movff	fputs@c,fputc@c
  2427   00101A  6A05               	clrf	(fputc@c+1)^0,c
  2428   00101C  C00D  F006         	movff	fputs@fp,fputc@fp
  2429   001020  ECD5  F005         	call	_fputc	;wreg free
  2430   001024  4A0F               	infsnz	fputs@i^0,f,c
  2431   001026  2A10               	incf	(fputs@i+1)^0,f,c
  2432   001028                     l1384:
  2433   001028  500C               	movf	fputs@s^0,w,c
  2434   00102A  240F               	addwf	fputs@i^0,w,c
  2435   00102C  6ED9               	movwf	fsr2l,c
  2436   00102E  6ADA               	clrf	fsr2h,c
  2437   001030  50DF               	movf	indf2,w,c
  2438   001032  6E0E               	movwf	fputs@c^0,c
  2439   001034  500E               	movf	fputs@c^0,w,c
  2440   001036  A4D8               	btfss	status,2,c
  2441   001038  EF20  F008         	goto	u651
  2442   00103C  EF22  F008         	goto	u650
  2443   001040                     u651:
  2444   001040  EF0B  F008         	goto	l1380
  2445   001044                     u650:
  2446   001044  0012               	return		;funcret
  2447   001046                     __end_of_fputs:
  2448                           	callstack 0
  2449                           
  2450 ;; *************** function _fputc *****************
  2451 ;; Defined at:
  2452 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  2453 ;; Parameters:    Size  Location     Type
  2454 ;;  c               2    3[COMRAM] int 
  2455 ;;  fp              1    5[COMRAM] PTR struct _IO_FILE
  2456 ;;		 -> sprintf@f(11), 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;		None
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  2    3[COMRAM] int 
  2461 ;; Registers used:
  2462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2468 ;;      Params:         3       0       0       0       0       0       0
  2469 ;;      Locals:         0       0       0       0       0       0       0
  2470 ;;      Temps:          5       0       0       0       0       0       0
  2471 ;;      Totals:         8       0       0       0       0       0       0
  2472 ;;Total ram usage:        8 bytes
  2473 ;; Hardware stack levels used: 1
  2474 ;; Hardware stack levels required when called: 2
  2475 ;; This function calls:
  2476 ;;		_putch
  2477 ;; This function is called by:
  2478 ;;		_pad
  2479 ;;		_vfpfcnvrt
  2480 ;;		_fputs
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text11
  2485   000BAA                     __ptext11:
  2486                           	callstack 0
  2487   000BAA                     _fputc:
  2488                           	callstack 22
  2489   000BAA  5006               	movf	fputc@fp^0,w,c
  2490   000BAC  B4D8               	btfsc	status,2,c
  2491   000BAE  EFDB  F005         	goto	u611
  2492   000BB2  EFDD  F005         	goto	u610
  2493   000BB6                     u611:
  2494   000BB6  EFE5  F005         	goto	l1368
  2495   000BBA                     u610:
  2496   000BBA  5006               	movf	fputc@fp^0,w,c
  2497   000BBC  A4D8               	btfss	status,2,c
  2498   000BBE  EFE3  F005         	goto	u621
  2499   000BC2  EFE5  F005         	goto	u620
  2500   000BC6                     u621:
  2501   000BC6  EFEA  F005         	goto	l1370
  2502   000BCA                     u620:
  2503   000BCA                     l1368:
  2504   000BCA  5004               	movf	fputc@c^0,w,c
  2505   000BCC  ECDC  F008         	call	_putch
  2506   000BD0  EF29  F006         	goto	l922
  2507   000BD4                     l1370:
  2508   000BD4  5006               	movf	fputc@fp^0,w,c
  2509   000BD6  6ED9               	movwf	fsr2l,c
  2510   000BD8  6ADA               	clrf	fsr2h,c
  2511   000BDA  0E09               	movlw	9
  2512   000BDC  26D9               	addwf	fsr2l,f,c
  2513   000BDE  50DE               	movf	postinc2,w,c
  2514   000BE0  10DE               	iorwf	postinc2,w,c
  2515   000BE2  B4D8               	btfsc	status,2,c
  2516   000BE4  EFF6  F005         	goto	u631
  2517   000BE8  EFF8  F005         	goto	u630
  2518   000BEC                     u631:
  2519   000BEC  EF11  F006         	goto	l1374
  2520   000BF0                     u630:
  2521   000BF0  5006               	movf	fputc@fp^0,w,c
  2522   000BF2  6ED9               	movwf	fsr2l,c
  2523   000BF4  6ADA               	clrf	fsr2h,c
  2524   000BF6  0E09               	movlw	9
  2525   000BF8  26D9               	addwf	fsr2l,f,c
  2526   000BFA  5006               	movf	fputc@fp^0,w,c
  2527   000BFC  6EE1               	movwf	fsr1l,c
  2528   000BFE  6AE2               	clrf	fsr1h,c
  2529   000C00  0E02               	movlw	2
  2530   000C02  26E1               	addwf	fsr1l,f,c
  2531   000C04  50DE               	movf	postinc2,w,c
  2532   000C06  5CE6               	subwf	postinc1,w,c
  2533   000C08  50E6               	movf	postinc1,w,c
  2534   000C0A  0A80               	xorlw	128
  2535   000C0C  6E0B               	movwf	(??_fputc+4)^0,c
  2536   000C0E  50DE               	movf	postinc2,w,c
  2537   000C10  0A80               	xorlw	128
  2538   000C12  580B               	subwfb	(??_fputc+4)^0,w,c
  2539   000C14  B0D8               	btfsc	status,0,c
  2540   000C16  EF0F  F006         	goto	u641
  2541   000C1A  EF11  F006         	goto	u640
  2542   000C1E                     u641:
  2543   000C1E  EF29  F006         	goto	l922
  2544   000C22                     u640:
  2545   000C22                     l1374:
  2546   000C22  5006               	movf	fputc@fp^0,w,c
  2547   000C24  6ED9               	movwf	fsr2l,c
  2548   000C26  6ADA               	clrf	fsr2h,c
  2549   000C28  0E02               	movlw	2
  2550   000C2A  26D9               	addwf	fsr2l,f,c
  2551   000C2C  50DF               	movf	indf2,w,c
  2552   000C2E  6E07               	movwf	??_fputc^0,c
  2553   000C30  5006               	movf	fputc@fp^0,w,c
  2554   000C32  6ED9               	movwf	fsr2l,c
  2555   000C34  6ADA               	clrf	fsr2h,c
  2556   000C36  50DF               	movf	indf2,w,c
  2557   000C38  2407               	addwf	??_fputc^0,w,c
  2558   000C3A  6ED9               	movwf	fsr2l,c
  2559   000C3C  6ADA               	clrf	fsr2h,c
  2560   000C3E  C004  FFDF         	movff	fputc@c,indf2
  2561   000C42  5006               	movf	fputc@fp^0,w,c
  2562   000C44  6ED9               	movwf	fsr2l,c
  2563   000C46  6ADA               	clrf	fsr2h,c
  2564   000C48  0E02               	movlw	2
  2565   000C4A  26D9               	addwf	fsr2l,f,c
  2566   000C4C  2ADE               	incf	postinc2,f,c
  2567   000C4E  0E00               	movlw	0
  2568   000C50  22DD               	addwfc	postdec2,f,c
  2569   000C52                     l922:
  2570   000C52  0012               	return		;funcret
  2571   000C54                     __end_of_fputc:
  2572                           	callstack 0
  2573                           
  2574 ;; *************** function _putch *****************
  2575 ;; Defined at:
  2576 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  c               1    wreg     unsigned char 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  c               1    0[COMRAM] unsigned char 
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2590 ;;      Params:         0       0       0       0       0       0       0
  2591 ;;      Locals:         0       0       0       0       0       0       0
  2592 ;;      Temps:          0       0       0       0       0       0       0
  2593 ;;      Totals:         0       0       0       0       0       0       0
  2594 ;;Total ram usage:        0 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; Hardware stack levels required when called: 1
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_fputc
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text12
  2605   0011B8                     __ptext12:
  2606                           	callstack 0
  2607   0011B8                     _putch:
  2608                           	callstack 22
  2609   0011B8  0012               	return		;funcret
  2610   0011BA                     __end_of_putch:
  2611                           	callstack 0
  2612                           
  2613 ;; *************** function _read_prec_or_width *****************
  2614 ;; Defined at:
  2615 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;  fmt             1    3[COMRAM] PTR PTR const unsigned c
  2618 ;;		 -> vfprintf@cfmt(1), 
  2619 ;;  ap              1    4[COMRAM] PTR PTR void [1]
  2620 ;;		 -> sprintf@ap(1), 
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;  c               1    7[COMRAM] unsigned char 
  2623 ;;  n               2    8[COMRAM] int 
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  2    3[COMRAM] int 
  2626 ;; Registers used:
  2627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2633 ;;      Params:         2       0       0       0       0       0       0
  2634 ;;      Locals:         3       0       0       0       0       0       0
  2635 ;;      Temps:          2       0       0       0       0       0       0
  2636 ;;      Totals:         7       0       0       0       0       0       0
  2637 ;;Total ram usage:        7 bytes
  2638 ;; Hardware stack levels used: 1
  2639 ;; Hardware stack levels required when called: 1
  2640 ;; This function calls:
  2641 ;;		Nothing
  2642 ;; This function is called by:
  2643 ;;		_vfpfcnvrt
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           	psect	text13
  2648   000C54                     __ptext13:
  2649                           	callstack 0
  2650   000C54                     _read_prec_or_width:
  2651                           	callstack 26
  2652   000C54                     
  2653                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  2654   000C54  0E00               	movlw	0
  2655   000C56  6E0A               	movwf	(read_prec_or_width@n+1)^0,c
  2656   000C58  0E00               	movlw	0
  2657   000C5A  6E09               	movwf	read_prec_or_width@n^0,c
  2658   000C5C                     
  2659                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  2660   000C5C  5004               	movf	read_prec_or_width@fmt^0,w,c
  2661   000C5E  6ED9               	movwf	fsr2l,c
  2662   000C60  6ADA               	clrf	fsr2h,c
  2663   000C62  CFDF FFF6          	movff	indf2,tblptrl
  2664   000C66                     	if	1	;There is more than 1 active tblptr byte
  2665   000C66  0E06               	movlw	high __smallconst
  2666   000C68  6EF7               	movwf	tblptrh,c
  2667   000C6A                     	endif
  2668   000C6A                     	if	0	;tblptru may be non-zero
  2669   000C6A                     	endif
  2670   000C6A                     	if	0	;tblptru may be non-zero
  2671   000C6A                     	endif
  2672   000C6A  0008               	tblrd		*
  2673   000C6C  50F5               	movf	tablat,w,c
  2674   000C6E  0A2A               	xorlw	42
  2675   000C70  A4D8               	btfss	status,2,c
  2676   000C72  EF3D  F006         	goto	u771
  2677   000C76  EF3F  F006         	goto	u770
  2678   000C7A                     u771:
  2679   000C7A  EF64  F006         	goto	l1452
  2680   000C7E                     u770:
  2681   000C7E                     
  2682                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2683   000C7E  5004               	movf	read_prec_or_width@fmt^0,w,c
  2684   000C80  6ED9               	movwf	fsr2l,c
  2685   000C82  6ADA               	clrf	fsr2h,c
  2686   000C84  2ADF               	incf	indf2,f,c
  2687   000C86                     
  2688                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2689   000C86  5005               	movf	read_prec_or_width@ap^0,w,c
  2690   000C88  6ED9               	movwf	fsr2l,c
  2691   000C8A  6ADA               	clrf	fsr2h,c
  2692   000C8C  0E02               	movlw	2
  2693   000C8E  26DF               	addwf	indf2,f,c
  2694   000C90  5CDF               	subwf	indf2,w,c
  2695   000C92  6ED9               	movwf	fsr2l,c
  2696   000C94  6ADA               	clrf	fsr2h,c
  2697   000C96  CFDE F009          	movff	postinc2,read_prec_or_width@n
  2698   000C9A  CFDE F00A          	movff	postinc2,read_prec_or_width@n+1
  2699                           
  2700                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2701   000C9E  EF77  F006         	goto	l882
  2702   000CA2                     l1448:
  2703                           
  2704                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2705   000CA2  0E0A               	movlw	10
  2706   000CA4  0209               	mulwf	read_prec_or_width@n^0,c
  2707   000CA6  CFF3 F006          	movff	prodl,??_read_prec_or_width
  2708   000CAA  CFF4 F007          	movff	prodh,??_read_prec_or_width+1
  2709   000CAE  020A               	mulwf	(read_prec_or_width@n+1)^0,c
  2710   000CB0  50F3               	movf	prodl,w,c
  2711   000CB2  2607               	addwf	(??_read_prec_or_width+1)^0,f,c
  2712   000CB4  5008               	movf	read_prec_or_width@c^0,w,c
  2713   000CB6  2406               	addwf	??_read_prec_or_width^0,w,c
  2714   000CB8  6E09               	movwf	read_prec_or_width@n^0,c
  2715   000CBA  0E00               	movlw	0
  2716   000CBC  2007               	addwfc	(??_read_prec_or_width+1)^0,w,c
  2717   000CBE  6E0A               	movwf	(read_prec_or_width@n+1)^0,c
  2718   000CC0                     
  2719                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2720   000CC0  5004               	movf	read_prec_or_width@fmt^0,w,c
  2721   000CC2  6ED9               	movwf	fsr2l,c
  2722   000CC4  6ADA               	clrf	fsr2h,c
  2723   000CC6  2ADF               	incf	indf2,f,c
  2724   000CC8                     l1452:
  2725                           
  2726                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2727   000CC8  5004               	movf	read_prec_or_width@fmt^0,w,c
  2728   000CCA  6ED9               	movwf	fsr2l,c
  2729   000CCC  6ADA               	clrf	fsr2h,c
  2730   000CCE  CFDF FFF6          	movff	indf2,tblptrl
  2731   000CD2                     	if	1	;There is more than 1 active tblptr byte
  2732   000CD2  0E06               	movlw	high __smallconst
  2733   000CD4  6EF7               	movwf	tblptrh,c
  2734   000CD6                     	endif
  2735   000CD6                     	if	0	;tblptru may be non-zero
  2736   000CD6                     	endif
  2737   000CD6                     	if	0	;tblptru may be non-zero
  2738   000CD6                     	endif
  2739   000CD6  0008               	tblrd		*
  2740   000CD8  50F5               	movf	tablat,w,c
  2741   000CDA  0FD0               	addlw	208
  2742   000CDC  6E08               	movwf	read_prec_or_width@c^0,c
  2743   000CDE  0E09               	movlw	9
  2744   000CE0  6408               	cpfsgt	read_prec_or_width@c^0,c
  2745   000CE2  EF75  F006         	goto	u781
  2746   000CE6  EF77  F006         	goto	u780
  2747   000CEA                     u781:
  2748   000CEA  EF51  F006         	goto	l1448
  2749   000CEE                     u780:
  2750   000CEE                     l882:
  2751                           
  2752                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2753   000CEE  C009  F004         	movff	read_prec_or_width@n,?_read_prec_or_width
  2754   000CF2  C00A  F005         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2755   000CF6  0012               	return		;funcret
  2756   000CF8                     __end_of_read_prec_or_width:
  2757                           	callstack 0
  2758                           
  2759 ;; *************** function _read_RC_inputs *****************
  2760 ;; Defined at:
  2761 ;;		line 67 in file "main.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;		None
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;  result          1    4[COMRAM] unsigned char 
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  1    wreg      unsigned char 
  2768 ;; Registers used:
  2769 ;;		wreg, status,2, status,0
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2775 ;;      Params:         0       0       0       0       0       0       0
  2776 ;;      Locals:         1       0       0       0       0       0       0
  2777 ;;      Temps:          1       0       0       0       0       0       0
  2778 ;;      Totals:         2       0       0       0       0       0       0
  2779 ;;Total ram usage:        2 bytes
  2780 ;; Hardware stack levels used: 1
  2781 ;; Hardware stack levels required when called: 1
  2782 ;; This function calls:
  2783 ;;		Nothing
  2784 ;; This function is called by:
  2785 ;;		_main
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text14
  2790   000D8C                     __ptext14:
  2791                           	callstack 0
  2792   000D8C                     _read_RC_inputs:
  2793                           	callstack 29
  2794   000D8C                     
  2795                           ;main.c: 69: 
  2796   000D8C  6A05               	clrf	read_RC_inputs@result^0,c
  2797   000D8E                     
  2798                           ;main.c: 71: void SelectIO(uint8_t index)
  2799   000D8E  B082               	btfsc	130,0,c	;volatile
  2800   000D90  EFCC  F006         	goto	u941
  2801   000D94  EFCF  F006         	goto	u940
  2802   000D98                     u941:
  2803   000D98  0E01               	movlw	1
  2804   000D9A  EFD0  F006         	goto	u946
  2805   000D9E                     u940:
  2806   000D9E  0E00               	movlw	0
  2807   000DA0                     u946:
  2808   000DA0  1205               	iorwf	read_RC_inputs@result^0,f,c
  2809                           
  2810                           ;main.c: 72: {
  2811   000DA2  B282               	btfsc	130,1,c	;volatile
  2812   000DA4  EFD6  F006         	goto	u951
  2813   000DA8  EFDA  F006         	goto	u950
  2814   000DAC                     u951:
  2815   000DAC  6A04               	clrf	??_read_RC_inputs^0,c
  2816   000DAE  2A04               	incf	??_read_RC_inputs^0,f,c
  2817   000DB0  EFDB  F006         	goto	u958
  2818   000DB4                     u950:
  2819   000DB4  6A04               	clrf	??_read_RC_inputs^0,c
  2820   000DB6                     u958:
  2821   000DB6  90D8               	bcf	status,0,c
  2822   000DB8  3404               	rlcf	??_read_RC_inputs^0,w,c
  2823   000DBA  1205               	iorwf	read_RC_inputs@result^0,f,c
  2824                           
  2825                           ;main.c: 73: 
  2826   000DBC  B482               	btfsc	130,2,c	;volatile
  2827   000DBE  EFE3  F006         	goto	u961
  2828   000DC2  EFE7  F006         	goto	u960
  2829   000DC6                     u961:
  2830   000DC6  6A04               	clrf	??_read_RC_inputs^0,c
  2831   000DC8  2A04               	incf	??_read_RC_inputs^0,f,c
  2832   000DCA  EFE8  F006         	goto	u968
  2833   000DCE                     u960:
  2834   000DCE  6A04               	clrf	??_read_RC_inputs^0,c
  2835   000DD0                     u968:
  2836   000DD0  90D8               	bcf	status,0,c
  2837   000DD2  3604               	rlcf	??_read_RC_inputs^0,f,c
  2838   000DD4  90D8               	bcf	status,0,c
  2839   000DD6  3404               	rlcf	??_read_RC_inputs^0,w,c
  2840   000DD8  1205               	iorwf	read_RC_inputs@result^0,f,c
  2841                           
  2842                           ;main.c: 74:     LATAbits.LATA0 = 0;
  2843   000DDA  B682               	btfsc	130,3,c	;volatile
  2844   000DDC  EFF2  F006         	goto	u971
  2845   000DE0  EFF6  F006         	goto	u970
  2846   000DE4                     u971:
  2847   000DE4  6A04               	clrf	??_read_RC_inputs^0,c
  2848   000DE6  2A04               	incf	??_read_RC_inputs^0,f,c
  2849   000DE8  EFF7  F006         	goto	u978
  2850   000DEC                     u970:
  2851   000DEC  6A04               	clrf	??_read_RC_inputs^0,c
  2852   000DEE                     u978:
  2853   000DEE  90D8               	bcf	status,0,c
  2854   000DF0  3604               	rlcf	??_read_RC_inputs^0,f,c
  2855   000DF2  90D8               	bcf	status,0,c
  2856   000DF4  3604               	rlcf	??_read_RC_inputs^0,f,c
  2857   000DF6  90D8               	bcf	status,0,c
  2858   000DF8  3404               	rlcf	??_read_RC_inputs^0,w,c
  2859   000DFA  1205               	iorwf	read_RC_inputs@result^0,f,c
  2860                           
  2861                           ;main.c: 75:     LATAbits.LATA1 = 0;
  2862   000DFC  B882               	btfsc	130,4,c	;volatile
  2863   000DFE  EF03  F007         	goto	u981
  2864   000E02  EF07  F007         	goto	u980
  2865   000E06                     u981:
  2866   000E06  6A04               	clrf	??_read_RC_inputs^0,c
  2867   000E08  2A04               	incf	??_read_RC_inputs^0,f,c
  2868   000E0A  EF08  F007         	goto	u988
  2869   000E0E                     u980:
  2870   000E0E  6A04               	clrf	??_read_RC_inputs^0,c
  2871   000E10                     u988:
  2872   000E10  3804               	swapf	??_read_RC_inputs^0,w,c
  2873   000E12  0BF0               	andlw	240
  2874   000E14  1205               	iorwf	read_RC_inputs@result^0,f,c
  2875   000E16                     
  2876                           ;main.c: 76:     LATAbits.LATA2 = 0;
  2877   000E16  5005               	movf	read_RC_inputs@result^0,w,c
  2878   000E18  0012               	return		;funcret
  2879   000E1A                     __end_of_read_RC_inputs:
  2880                           	callstack 0
  2881                           
  2882 ;; *************** function _latch_data *****************
  2883 ;; Defined at:
  2884 ;;		line 45 in file "main.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  seg_data        1    wreg     unsigned char 
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;  seg_data        1    3[COMRAM] unsigned char 
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		wreg
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 0/0
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2898 ;;      Params:         0       0       0       0       0       0       0
  2899 ;;      Locals:         1       0       0       0       0       0       0
  2900 ;;      Temps:          0       0       0       0       0       0       0
  2901 ;;      Totals:         1       0       0       0       0       0       0
  2902 ;;Total ram usage:        1 bytes
  2903 ;; Hardware stack levels used: 1
  2904 ;; Hardware stack levels required when called: 1
  2905 ;; This function calls:
  2906 ;;		Nothing
  2907 ;; This function is called by:
  2908 ;;		_main
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text15
  2913   00113C                     __ptext15:
  2914                           	callstack 0
  2915   00113C                     _latch_data:
  2916                           	callstack 29
  2917                           
  2918                           ;incstack = 0
  2919                           ;latch_data@seg_data stored from wreg
  2920   00113C  6E04               	movwf	latch_data@seg_data^0,c
  2921   00113E                     
  2922                           ;main.c: 45: ;main.c: 46:     TRISBbits.TRISB1 = 0;;main.c: 48: 
  2923   00113E  C004  FF8C         	movff	latch_data@seg_data,3980	;volatile
  2924   001142                     
  2925                           ;main.c: 51:     TRISAbits.TRISA1 = 0;
  2926   001142  928A               	bcf	138,1,c	;volatile
  2927   001144                     
  2928                           ;main.c: 52:     TRISAbits.TRISA2 = 0;
  2929   001144  0E08               	movlw	8
  2930   001146                     u1217:
  2931   001146  2EE8               	decfsz	wreg,f,c
  2932   001148  D7FE               	bra	u1217
  2933   00114A  0000               	nop	
  2934   00114C                     
  2935                           ;main.c: 53:     TRISAbits.TRISA3 = 0;
  2936   00114C  828A               	bsf	138,1,c	;volatile
  2937   00114E                     
  2938                           ;main.c: 54:     TRISAbits.TRISA5 = 0;
  2939   00114E  0E08               	movlw	8
  2940   001150                     u1227:
  2941   001150  2EE8               	decfsz	wreg,f,c
  2942   001152  D7FE               	bra	u1227
  2943   001154  0000               	nop	
  2944   001156                     
  2945                           ;main.c: 55:     TRISEbits.TRISE0 = 0;
  2946   001156  928A               	bcf	138,1,c	;volatile
  2947   001158  0012               	return		;funcret
  2948   00115A                     __end_of_latch_data:
  2949                           	callstack 0
  2950                           
  2951 ;; *************** function _init_ports *****************
  2952 ;; Defined at:
  2953 ;;		line 79 in file "main.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;		None
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;		None
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  1    wreg      void 
  2960 ;; Registers used:
  2961 ;;		cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2967 ;;      Params:         0       0       0       0       0       0       0
  2968 ;;      Locals:         0       0       0       0       0       0       0
  2969 ;;      Temps:          0       0       0       0       0       0       0
  2970 ;;      Totals:         0       0       0       0       0       0       0
  2971 ;;Total ram usage:        0 bytes
  2972 ;; Hardware stack levels used: 1
  2973 ;; Hardware stack levels required when called: 2
  2974 ;; This function calls:
  2975 ;;		_init_inputs_RC0_to_RC4
  2976 ;; This function is called by:
  2977 ;;		_main
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           	psect	text16
  2982   00115A                     __ptext16:
  2983                           	callstack 0
  2984   00115A                     _init_ports:
  2985                           	callstack 28
  2986   00115A                     
  2987                           ;main.c: 83:     {
  2988   00115A  9293               	bcf	147,1,c	;volatile
  2989                           
  2990                           ;main.c: 87:         case 5:
  2991   00115C  9092               	bcf	146,0,c	;volatile
  2992                           
  2993                           ;main.c: 88:             LATAbits.LATA1 = 1;
  2994   00115E  9292               	bcf	146,1,c	;volatile
  2995                           
  2996                           ;main.c: 89:             break;
  2997   001160  9492               	bcf	146,2,c	;volatile
  2998                           
  2999                           ;main.c: 90:         case 4:
  3000   001162  9692               	bcf	146,3,c	;volatile
  3001                           
  3002                           ;main.c: 91:             LATAbits.LATA2 = 1;
  3003   001164  9A92               	bcf	146,5,c	;volatile
  3004                           
  3005                           ;main.c: 92:             break;
  3006   001166  9096               	bcf	150,0,c	;volatile
  3007                           
  3008                           ;main.c: 94:             LATAbits.LATA3 = 1;
  3009   001168  928A               	bcf	138,1,c	;volatile
  3010                           
  3011                           ;main.c: 96: 
  3012   00116A  9A94               	bcf	148,5,c	;volatile
  3013                           
  3014                           ;main.c: 97:         case 2:
  3015   00116C  9A8B               	bcf	139,5,c	;volatile
  3016                           
  3017                           ;main.c: 100: 
  3018   00116E  9093               	bcf	147,0,c	;volatile
  3019                           
  3020                           ;main.c: 102:             LATAbits.LATA5 = 1;
  3021   001170  908A               	bcf	138,0,c	;volatile
  3022   001172                     
  3023                           ;main.c: 104:         default:
  3024   001172  ECD6  F008         	call	_init_inputs_RC0_to_RC4	;wreg free
  3025   001176  0012               	return		;funcret
  3026   001178                     __end_of_init_ports:
  3027                           	callstack 0
  3028                           
  3029 ;; *************** function _init_inputs_RC0_to_RC4 *****************
  3030 ;; Defined at:
  3031 ;;		line 58 in file "main.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;		None
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;		None
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  1    wreg      void 
  3038 ;; Registers used:
  3039 ;;		None
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3045 ;;      Params:         0       0       0       0       0       0       0
  3046 ;;      Locals:         0       0       0       0       0       0       0
  3047 ;;      Temps:          0       0       0       0       0       0       0
  3048 ;;      Totals:         0       0       0       0       0       0       0
  3049 ;;Total ram usage:        0 bytes
  3050 ;; Hardware stack levels used: 1
  3051 ;; Hardware stack levels required when called: 1
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_init_ports
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           	psect	text17
  3060   0011AC                     __ptext17:
  3061                           	callstack 0
  3062   0011AC                     _init_inputs_RC0_to_RC4:
  3063                           	callstack 28
  3064   0011AC                     
  3065                           ;main.c: 60:     LATCbits.LATC5 = 0;
  3066   0011AC  8094               	bsf	148,0,c	;volatile
  3067                           
  3068                           ;main.c: 61: 
  3069   0011AE  8294               	bsf	148,1,c	;volatile
  3070                           
  3071                           ;main.c: 62: 
  3072   0011B0  8494               	bsf	148,2,c	;volatile
  3073                           
  3074                           ;main.c: 63:     TRISBbits.TRISB0 = 0;
  3075   0011B2  8694               	bsf	148,3,c	;volatile
  3076                           
  3077                           ;main.c: 64: 
  3078   0011B4  8894               	bsf	148,4,c	;volatile
  3079   0011B6  0012               	return		;funcret
  3080   0011B8                     __end_of_init_inputs_RC0_to_RC4:
  3081                           	callstack 0
  3082                           
  3083 ;; *************** function _delay_ms *****************
  3084 ;; Defined at:
  3085 ;;		line 37 in file "main.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;  ms              2    3[COMRAM] unsigned int 
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;		None
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      void 
  3092 ;; Registers used:
  3093 ;;		wreg, status,2, status,0
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3099 ;;      Params:         2       0       0       0       0       0       0
  3100 ;;      Locals:         0       0       0       0       0       0       0
  3101 ;;      Temps:          1       0       0       0       0       0       0
  3102 ;;      Totals:         3       0       0       0       0       0       0
  3103 ;;Total ram usage:        3 bytes
  3104 ;; Hardware stack levels used: 1
  3105 ;; Hardware stack levels required when called: 1
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_main
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text18
  3114   0010E8                     __ptext18:
  3115                           	callstack 0
  3116   0010E8                     _delay_ms:
  3117                           	callstack 29
  3118   0010E8                     
  3119                           ;main.c: 37:     result |= (PORTCbits.RC3 << 3);;main.c: 38:     result |= (PORTCbits.RC
      +                          4 << 4);;main.c: 39:     return result;
  3120   0010E8  EF7D  F008         	goto	l1570
  3121   0010EC                     l1568:
  3122                           
  3123                           ;main.c: 40: };main.c: 41: 
  3124   0010EC  0E04               	movlw	4
  3125   0010EE  6E06               	movwf	??_delay_ms^0,c
  3126   0010F0  0E3E               	movlw	62
  3127   0010F2                     u1237:
  3128   0010F2  2EE8               	decfsz	wreg,f,c
  3129   0010F4  D7FE               	bra	u1237
  3130   0010F6  2E06               	decfsz	??_delay_ms^0,f,c
  3131   0010F8  D7FC               	bra	u1237
  3132   0010FA                     l1570:
  3133                           
  3134                           ;main.c: 39:     return result;
  3135   0010FA  0604               	decf	delay_ms@ms^0,f,c
  3136   0010FC  A0D8               	btfss	status,0,c
  3137   0010FE  0605               	decf	(delay_ms@ms+1)^0,f,c
  3138   001100  2804               	incf	delay_ms@ms^0,w,c
  3139   001102  E106               	bnz	u931
  3140   001104  2805               	incf	(delay_ms@ms+1)^0,w,c
  3141   001106  A4D8               	btfss	status,2,c
  3142   001108  EF88  F008         	goto	u931
  3143   00110C  EF8A  F008         	goto	u930
  3144   001110                     u931:
  3145   001110  EF76  F008         	goto	l1568
  3146   001114                     u930:
  3147   001114  0012               	return		;funcret
  3148   001116                     __end_of_delay_ms:
  3149                           	callstack 0
  3150                           
  3151 ;; *************** function _UART_SendString *****************
  3152 ;; Defined at:
  3153 ;;		line 44 in file "u_uart.c"
  3154 ;; Parameters:    Size  Location     Type
  3155 ;;  str             2    4[COMRAM] PTR const unsigned char 
  3156 ;;		 -> STR_24(3), STR_23(19), buffer(20), STR_3(11), 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;		None
  3159 ;; Return value:  Size  Location     Type
  3160 ;;                  1    wreg      void 
  3161 ;; Registers used:
  3162 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3163 ;; Tracked objects:
  3164 ;;		On entry : 0/0
  3165 ;;		On exit  : 0/0
  3166 ;;		Unchanged: 0/0
  3167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3168 ;;      Params:         2       0       0       0       0       0       0
  3169 ;;      Locals:         0       0       0       0       0       0       0
  3170 ;;      Temps:          0       0       0       0       0       0       0
  3171 ;;      Totals:         2       0       0       0       0       0       0
  3172 ;;Total ram usage:        2 bytes
  3173 ;; Hardware stack levels used: 1
  3174 ;; Hardware stack levels required when called: 2
  3175 ;; This function calls:
  3176 ;;		_UART_SendChar
  3177 ;; This function is called by:
  3178 ;;		_main
  3179 ;; This function uses a non-reentrant model
  3180 ;;
  3181                           
  3182                           	psect	text19
  3183   000F12                     __ptext19:
  3184                           	callstack 0
  3185   000F12                     _UART_SendString:
  3186                           	callstack 28
  3187   000F12                     
  3188                           ;u_uart.c: 44: void UART_SendString(const char* str);u_uart.c: 45: {;u_uart.c: 46:     w
      +                          hile (*str)
  3189   000F12  EF9F  F007         	goto	l1652
  3190   000F16                     l1648:
  3191                           
  3192                           ;u_uart.c: 47:         UART_SendChar(*str++);
  3193   000F16  C005  FFF6         	movff	UART_SendString@str,tblptrl
  3194   000F1A  C006  FFF7         	movff	UART_SendString@str+1,tblptrh
  3195   000F1E  6AF8               	clrf	tblptru,c
  3196   000F20  0E05               	movlw	(high __ramtop+-1)
  3197   000F22  64F7               	cpfsgt	tblptrh,c
  3198   000F24  D003               	bra	u1037
  3199   000F26  0008               	tblrd		*
  3200   000F28  50F5               	movf	tablat,w,c
  3201   000F2A  D005               	bra	u1030
  3202   000F2C                     u1037:
  3203   000F2C  CFF6 FFE1          	movff	tblptrl,fsr1l
  3204   000F30  CFF7 FFE2          	movff	tblptrh,fsr1h
  3205   000F34  50E7               	movf	indf1,w,c
  3206   000F36                     u1030:
  3207   000F36  ECCB  F008         	call	_UART_SendChar
  3208   000F3A  4A05               	infsnz	UART_SendString@str^0,f,c
  3209   000F3C  2A06               	incf	(UART_SendString@str+1)^0,f,c
  3210   000F3E                     l1652:
  3211                           
  3212                           ;u_uart.c: 46:     while (*str)
  3213   000F3E  C005  FFF6         	movff	UART_SendString@str,tblptrl
  3214   000F42  C006  FFF7         	movff	UART_SendString@str+1,tblptrh
  3215   000F46  6AF8               	clrf	tblptru,c
  3216   000F48  0E05               	movlw	(high __ramtop+-1)
  3217   000F4A  64F7               	cpfsgt	tblptrh,c
  3218   000F4C  D003               	bra	u1047
  3219   000F4E  0008               	tblrd		*
  3220   000F50  50F5               	movf	tablat,w,c
  3221   000F52  D005               	bra	u1040
  3222   000F54                     u1047:
  3223   000F54  CFF6 FFE1          	movff	tblptrl,fsr1l
  3224   000F58  CFF7 FFE2          	movff	tblptrh,fsr1h
  3225   000F5C  50E7               	movf	indf1,w,c
  3226   000F5E                     u1040:
  3227   000F5E  0900               	iorlw	0
  3228   000F60  A4D8               	btfss	status,2,c
  3229   000F62  EFB5  F007         	goto	u1051
  3230   000F66  EFB7  F007         	goto	u1050
  3231   000F6A                     u1051:
  3232   000F6A  EF8B  F007         	goto	l1648
  3233   000F6E                     u1050:
  3234   000F6E  0012               	return		;funcret
  3235   000F70                     __end_of_UART_SendString:
  3236                           	callstack 0
  3237                           
  3238 ;; *************** function _UART_SendChar *****************
  3239 ;; Defined at:
  3240 ;;		line 37 in file "u_uart.c"
  3241 ;; Parameters:    Size  Location     Type
  3242 ;;  ch              1    wreg     unsigned char 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  ch              1    3[COMRAM] unsigned char 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;                  1    wreg      void 
  3247 ;; Registers used:
  3248 ;;		wreg
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3254 ;;      Params:         0       0       0       0       0       0       0
  3255 ;;      Locals:         1       0       0       0       0       0       0
  3256 ;;      Temps:          0       0       0       0       0       0       0
  3257 ;;      Totals:         1       0       0       0       0       0       0
  3258 ;;Total ram usage:        1 bytes
  3259 ;; Hardware stack levels used: 1
  3260 ;; Hardware stack levels required when called: 1
  3261 ;; This function calls:
  3262 ;;		Nothing
  3263 ;; This function is called by:
  3264 ;;		_main
  3265 ;;		_UART_SendString
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269                           	psect	text20
  3270   001196                     __ptext20:
  3271                           	callstack 0
  3272   001196                     _UART_SendChar:
  3273                           	callstack 28
  3274                           
  3275                           ;incstack = 0
  3276                           ;UART_SendChar@ch stored from wreg
  3277   001196  6E04               	movwf	UART_SendChar@ch^0,c
  3278   001198                     l145:
  3279                           
  3280                           ;u_uart.c: 39:     while (!TXIF)
  3281   001198  A89E               	btfss	3998,4,c	;volatile
  3282   00119A  EFD1  F008         	goto	u831
  3283   00119E  EFD3  F008         	goto	u830
  3284   0011A2                     u831:
  3285   0011A2  EFCC  F008         	goto	l145
  3286   0011A6                     u830:
  3287   0011A6                     
  3288                           ;u_uart.c: 41:     TXREG = ch;
  3289   0011A6  C004  FFAD         	movff	UART_SendChar@ch,4013	;volatile
  3290   0011AA  0012               	return		;funcret
  3291   0011AC                     __end_of_UART_SendChar:
  3292                           	callstack 0
  3293                           
  3294 ;; *************** function _UART_Init *****************
  3295 ;; Defined at:
  3296 ;;		line 17 in file "u_uart.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;		None
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;		None
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  1    wreg      void 
  3303 ;; Registers used:
  3304 ;;		wreg, status,2
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3310 ;;      Params:         0       0       0       0       0       0       0
  3311 ;;      Locals:         0       0       0       0       0       0       0
  3312 ;;      Temps:          0       0       0       0       0       0       0
  3313 ;;      Totals:         0       0       0       0       0       0       0
  3314 ;;Total ram usage:        0 bytes
  3315 ;; Hardware stack levels used: 1
  3316 ;; Hardware stack levels required when called: 1
  3317 ;; This function calls:
  3318 ;;		Nothing
  3319 ;; This function is called by:
  3320 ;;		_main
  3321 ;; This function uses a non-reentrant model
  3322 ;;
  3323                           
  3324                           	psect	text21
  3325   001178                     __ptext21:
  3326                           	callstack 0
  3327   001178                     _UART_Init:
  3328                           	callstack 29
  3329   001178                     
  3330                           ;u_uart.c: 19:     TRISC6 = 0;
  3331   001178  9C94               	bcf	3988,6,c	;volatile
  3332                           
  3333                           ;u_uart.c: 20:     TRISC7 = 1;
  3334   00117A  8E94               	bsf	3988,7,c	;volatile
  3335   00117C                     
  3336                           ;u_uart.c: 22:     SPBRG = 15;
  3337   00117C  0E0F               	movlw	15
  3338   00117E  6EAF               	movwf	175,c	;volatile
  3339   001180                     
  3340                           ;u_uart.c: 23:     BRGH = 0;
  3341   001180  94AC               	bcf	4012,2,c	;volatile
  3342   001182                     
  3343                           ;u_uart.c: 24:     BRG16 = 0;
  3344   001182  96B8               	bcf	4024,3,c	;volatile
  3345   001184                     
  3346                           ;u_uart.c: 26:     SYNC = 0;
  3347   001184  98AC               	bcf	4012,4,c	;volatile
  3348   001186                     
  3349                           ;u_uart.c: 27:     SPEN = 1;
  3350   001186  8EAB               	bsf	4011,7,c	;volatile
  3351   001188                     
  3352                           ;u_uart.c: 28:     TXEN = 1;
  3353   001188  8AAC               	bsf	4012,5,c	;volatile
  3354   00118A                     
  3355                           ;u_uart.c: 29:     CREN = 1;
  3356   00118A  88AB               	bsf	4011,4,c	;volatile
  3357   00118C                     
  3358                           ;u_uart.c: 31:     RCIF = 0;
  3359   00118C  9A9E               	bcf	3998,5,c	;volatile
  3360   00118E                     
  3361                           ;u_uart.c: 32:     RCIE = 1;
  3362   00118E  8A9D               	bsf	3997,5,c	;volatile
  3363   001190                     
  3364                           ;u_uart.c: 33:     PEIE = 1;
  3365   001190  8CF2               	bsf	4082,6,c	;volatile
  3366   001192                     
  3367                           ;u_uart.c: 34:     GIE = 1;
  3368   001192  8EF2               	bsf	4082,7,c	;volatile
  3369   001194  0012               	return		;funcret
  3370   001196                     __end_of_UART_Init:
  3371                           	callstack 0
  3372                           
  3373 ;; *************** function _SelectIO *****************
  3374 ;; Defined at:
  3375 ;;		line 108 in file "main.c"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;  index           1    wreg     unsigned char 
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;  index           1    3[COMRAM] unsigned char 
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  1    wreg      void 
  3382 ;; Registers used:
  3383 ;;		wreg, status,2, status,0
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3389 ;;      Params:         0       0       0       0       0       0       0
  3390 ;;      Locals:         1       0       0       0       0       0       0
  3391 ;;      Temps:          0       0       0       0       0       0       0
  3392 ;;      Totals:         1       0       0       0       0       0       0
  3393 ;;Total ram usage:        1 bytes
  3394 ;; Hardware stack levels used: 1
  3395 ;; Hardware stack levels required when called: 1
  3396 ;; This function calls:
  3397 ;;		Nothing
  3398 ;; This function is called by:
  3399 ;;		_main
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           	psect	text22
  3404   000EA4                     __ptext22:
  3405                           	callstack 0
  3406   000EA4                     _SelectIO:
  3407                           	callstack 29
  3408                           
  3409                           ;incstack = 0
  3410                           ;SelectIO@index stored from wreg
  3411   000EA4  6E04               	movwf	SelectIO@index^0,c
  3412   000EA6                     
  3413                           ;main.c: 108: ;main.c: 109: char buffer[20];;main.c: 111: void main(void)
  3414   000EA6  9089               	bcf	137,0,c	;volatile
  3415                           
  3416                           ;main.c: 112: {
  3417   000EA8  9289               	bcf	137,1,c	;volatile
  3418                           
  3419                           ;main.c: 113:     delay_ms(500);
  3420   000EAA  9489               	bcf	137,2,c	;volatile
  3421                           
  3422                           ;main.c: 114: 
  3423   000EAC  9689               	bcf	137,3,c	;volatile
  3424                           
  3425                           ;main.c: 115:     UART_Init();
  3426   000EAE  9A89               	bcf	137,5,c	;volatile
  3427                           
  3428                           ;main.c: 116: 
  3429   000EB0  908D               	bcf	141,0,c	;volatile
  3430                           
  3431                           ;main.c: 119: 
  3432   000EB2  EF6D  F007         	goto	l1600
  3433   000EB6                     l60:
  3434                           
  3435                           ;main.c: 122: 
  3436   000EB6  8089               	bsf	137,0,c	;volatile
  3437                           
  3438                           ;main.c: 123:     while (1)
  3439   000EB8  EF88  F007         	goto	l68
  3440   000EBC                     l62:
  3441                           
  3442                           ;main.c: 125:         if (uart_frame_ready)
  3443   000EBC  8289               	bsf	137,1,c	;volatile
  3444                           
  3445                           ;main.c: 126:         {
  3446   000EBE  EF88  F007         	goto	l68
  3447   000EC2                     l63:
  3448                           
  3449                           ;main.c: 128: 
  3450   000EC2  8489               	bsf	137,2,c	;volatile
  3451                           
  3452                           ;main.c: 129:             if (strstr((char*)uart_rx_buffer, "CONN_REQ"))
  3453   000EC4  EF88  F007         	goto	l68
  3454   000EC8                     l64:
  3455                           
  3456                           ;main.c: 131:                 UART_SendString("CONN_ACK\r\n");
  3457   000EC8  8689               	bsf	137,3,c	;volatile
  3458                           
  3459                           ;main.c: 132:             }
  3460   000ECA  EF88  F007         	goto	l68
  3461   000ECE                     l65:
  3462                           
  3463                           ;main.c: 135: 
  3464   000ECE  808D               	bsf	141,0,c	;volatile
  3465                           
  3466                           ;main.c: 136:                 SelectIO(1);
  3467   000ED0  EF88  F007         	goto	l68
  3468   000ED4                     l66:
  3469                           
  3470                           ;main.c: 139:             {
  3471   000ED4  8A89               	bsf	137,5,c	;volatile
  3472                           
  3473                           ;main.c: 140: 
  3474   000ED6  EF88  F007         	goto	l68
  3475   000EDA                     l1600:
  3476   000EDA  5004               	movf	SelectIO@index^0,w,c
  3477                           
  3478                           ; Switch size 1, requested type "simple"
  3479                           ; Number of cases is 6, Range of values is 1 to 6
  3480                           ; switch strategies available:
  3481                           ; Name         Instructions Cycles
  3482                           ; simple_byte           19    10 (average)
  3483                           ;	Chosen strategy is simple_byte
  3484   000EDC  0A01               	xorlw	1	; case 1
  3485   000EDE  B4D8               	btfsc	status,2,c
  3486   000EE0  EF6A  F007         	goto	l66
  3487   000EE4  0A03               	xorlw	3	; case 2
  3488   000EE6  B4D8               	btfsc	status,2,c
  3489   000EE8  EF67  F007         	goto	l65
  3490   000EEC  0A01               	xorlw	1	; case 3
  3491   000EEE  B4D8               	btfsc	status,2,c
  3492   000EF0  EF64  F007         	goto	l64
  3493   000EF4  0A07               	xorlw	7	; case 4
  3494   000EF6  B4D8               	btfsc	status,2,c
  3495   000EF8  EF61  F007         	goto	l63
  3496   000EFC  0A01               	xorlw	1	; case 5
  3497   000EFE  B4D8               	btfsc	status,2,c
  3498   000F00  EF5E  F007         	goto	l62
  3499   000F04  0A03               	xorlw	3	; case 6
  3500   000F06  B4D8               	btfsc	status,2,c
  3501   000F08  EF5B  F007         	goto	l60
  3502   000F0C  EF88  F007         	goto	l68
  3503   000F10                     l68:
  3504   000F10  0012               	return		;funcret
  3505   000F12                     __end_of_SelectIO:
  3506                           	callstack 0
  3507                           
  3508 ;; *************** function _ISR *****************
  3509 ;; Defined at:
  3510 ;;		line 51 in file "u_uart.c"
  3511 ;; Parameters:    Size  Location     Type
  3512 ;;		None
  3513 ;; Auto vars:     Size  Location     Type
  3514 ;;  received        1    2[COMRAM] unsigned char 
  3515 ;; Return value:  Size  Location     Type
  3516 ;;                  1    wreg      void 
  3517 ;; Registers used:
  3518 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3519 ;; Tracked objects:
  3520 ;;		On entry : 0/0
  3521 ;;		On exit  : 0/0
  3522 ;;		Unchanged: 0/0
  3523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3524 ;;      Params:         0       0       0       0       0       0       0
  3525 ;;      Locals:         1       0       0       0       0       0       0
  3526 ;;      Temps:          2       0       0       0       0       0       0
  3527 ;;      Totals:         3       0       0       0       0       0       0
  3528 ;;Total ram usage:        3 bytes
  3529 ;; Hardware stack levels used: 1
  3530 ;; This function calls:
  3531 ;;		Nothing
  3532 ;; This function is called by:
  3533 ;;		Interrupt level 2
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           	psect	intcode
  3538   000008                     __pintcode:
  3539                           	callstack 0
  3540   000008                     _ISR:
  3541                           	callstack 22
  3542                           
  3543                           ;incstack = 0
  3544   000008  8268               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3545   00000A  EDB8  F007         	call	int_func,f	;refresh shadow registers
  3546                           
  3547                           	psect	intcode_body
  3548   000F70                     __pintcode_body:
  3549                           	callstack 22
  3550   000F70                     int_func:
  3551                           	callstack 22
  3552   000F70  0006               	pop		; remove dummy address from shadow register refresh
  3553   000F72  CFD9 F001          	movff	fsr2l,??_ISR
  3554   000F76  CFDA F002          	movff	fsr2h,??_ISR+1
  3555   000F7A                     
  3556                           ;u_uart.c: 53:     if (RCIF)
  3557   000F7A  AA9E               	btfss	3998,5,c	;volatile
  3558   000F7C  EFC2  F007         	goto	i2u118_41
  3559   000F80  EFC4  F007         	goto	i2u118_40
  3560   000F84                     i2u118_41:
  3561   000F84  EFE0  F007         	goto	i2l162
  3562   000F88                     i2u118_40:
  3563   000F88                     
  3564                           ;u_uart.c: 54:     {;u_uart.c: 55:         uint8_t received = RCREG;
  3565   000F88  CFAE F003          	movff	4014,ISR@received	;volatile
  3566   000F8C                     
  3567                           ;u_uart.c: 57:         if (uart_frame_ready == 0)
  3568   000F8C  5049               	movf	_uart_frame_ready^0,w,c	;volatile
  3569   000F8E  A4D8               	btfss	status,2,c
  3570   000F90  EFCC  F007         	goto	i2u119_41
  3571   000F94  EFCE  F007         	goto	i2u119_40
  3572   000F98                     i2u119_41:
  3573   000F98  EFE0  F007         	goto	i2l162
  3574   000F9C                     i2u119_40:
  3575   000F9C                     
  3576                           ;u_uart.c: 58:         {;u_uart.c: 59:             uart_rx_buffer[uart_rx_index++] = rec
      +                          eived;
  3577   000F9C  5048               	movf	_uart_rx_index^0,w,c
  3578   000F9E  0F5E               	addlw	low _uart_rx_buffer
  3579   000FA0  6ED9               	movwf	fsr2l,c
  3580   000FA2  6ADA               	clrf	fsr2h,c
  3581   000FA4  C003  FFDF         	movff	ISR@received,indf2
  3582   000FA8  2A48               	incf	_uart_rx_index^0,f,c	;volatile
  3583   000FAA                     
  3584                           ;u_uart.c: 60:             if (uart_rx_index >= 10)
  3585   000FAA  0E09               	movlw	9
  3586   000FAC  6448               	cpfsgt	_uart_rx_index^0,c	;volatile
  3587   000FAE  EFDB  F007         	goto	i2u120_41
  3588   000FB2  EFDD  F007         	goto	i2u120_40
  3589   000FB6                     i2u120_41:
  3590   000FB6  EFE0  F007         	goto	i2l162
  3591   000FBA                     i2u120_40:
  3592   000FBA                     
  3593                           ;u_uart.c: 61:             {;u_uart.c: 62:                 uart_frame_ready = 1;
  3594   000FBA  0E01               	movlw	1
  3595   000FBC  6E49               	movwf	_uart_frame_ready^0,c	;volatile
  3596   000FBE                     
  3597                           ;u_uart.c: 63:                 uart_rx_index = 0;
  3598   000FBE  6A48               	clrf	_uart_rx_index^0,c	;volatile
  3599   000FC0                     i2l162:
  3600   000FC0  C002  FFDA         	movff	??_ISR+1,fsr2h
  3601   000FC4  C001  FFD9         	movff	??_ISR,fsr2l
  3602   000FC8  9268               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3603   000FCA  0011               	retfie		f
  3604   000FCC                     __end_of_ISR:
  3605                           	callstack 0
  3606                           
  3607                           	psect	rparam
  3608   000001                     ___rparam_used  equ	1
  3609   000000                     ___param_bank   equ	0
  3610   000000                     __Lparam        equ	__Lrparam
  3611   000000                     __Hparam        equ	__Hrparam
  3612                           
  3613                           	psect	temp
  3614   000068                     btemp:
  3615                           	callstack 0
  3616   000068                     	ds	1
  3617   000068                     int$flags       set	btemp
  3618   000069                     wtemp8          set	btemp+1
  3619   000069                     ttemp5          set	btemp+1
  3620   00006C                     ttemp6          set	btemp+4
  3621   000070                     ttemp7          set	btemp+8
  3622                           
  3623                           	psect	config
  3624                           
  3625                           ; Padding undefined space
  3626   300000                     	org	3145728
  3627   300000  FF                 	db	255
  3628                           
  3629                           ;Config register CONFIG1H @ 0x300001
  3630                           ;	Oscillator Selection bits
  3631                           ;	OSC = HS, HS oscillator
  3632                           ;	Fail-Safe Clock Monitor Enable bit
  3633                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3634                           ;	Internal/External Oscillator Switchover bit
  3635                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3636   300001                     	org	3145729
  3637   300001  02                 	db	2
  3638                           
  3639                           ;Config register CONFIG2L @ 0x300002
  3640                           ;	Power-up Timer Enable bit
  3641                           ;	PWRT = OFF, PWRT disabled
  3642                           ;	Brown-out Reset Enable bits
  3643                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3644                           ;	Brown Out Reset Voltage bits
  3645                           ;	BORV = 3, Minimum setting
  3646   300002                     	org	3145730
  3647   300002  19                 	db	25
  3648                           
  3649                           ;Config register CONFIG2H @ 0x300003
  3650                           ;	Watchdog Timer Enable bit
  3651                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3652                           ;	Watchdog Timer Postscale Select bits
  3653                           ;	WDTPS = 32768, 1:32768
  3654   300003                     	org	3145731
  3655   300003  1E                 	db	30
  3656                           
  3657                           ; Padding undefined space
  3658   300004                     	org	3145732
  3659   300004  FF                 	db	255
  3660                           
  3661                           ;Config register CONFIG3H @ 0x300005
  3662                           ;	CCP2 MUX bit
  3663                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3664                           ;	PORTB A/D Enable bit
  3665                           ;	PBADEN = 0x1, unprogrammed default
  3666                           ;	Low-Power Timer1 Oscillator Enable bit
  3667                           ;	LPT1OSC = 0x0, unprogrammed default
  3668                           ;	MCLR Pin Enable bit
  3669                           ;	MCLRE = 0x1, unprogrammed default
  3670   300005                     	org	3145733
  3671   300005  83                 	db	131
  3672                           
  3673                           ;Config register CONFIG4L @ 0x300006
  3674                           ;	Stack Full/Underflow Reset Enable bit
  3675                           ;	STVREN = 0x1, unprogrammed default
  3676                           ;	Single-Supply ICSP Enable bit
  3677                           ;	LVP = OFF, Single-Supply ICSP disabled
  3678                           ;	Extended Instruction Set Enable bit
  3679                           ;	XINST = 0x0, unprogrammed default
  3680                           ;	Background Debugger Enable bit
  3681                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3682   300006                     	org	3145734
  3683   300006  81                 	db	129
  3684                           
  3685                           ; Padding undefined space
  3686   300007                     	org	3145735
  3687   300007  FF                 	db	255
  3688                           tosu	equ	0xFFF
  3689                           tosh	equ	0xFFE
  3690                           tosl	equ	0xFFD
  3691                           stkptr	equ	0xFFC
  3692                           pclatu	equ	0xFFB
  3693                           pclath	equ	0xFFA
  3694                           pcl	equ	0xFF9
  3695                           tblptru	equ	0xFF8
  3696                           tblptrh	equ	0xFF7
  3697                           tblptrl	equ	0xFF6
  3698                           tablat	equ	0xFF5
  3699                           prodh	equ	0xFF4
  3700                           prodl	equ	0xFF3
  3701                           indf0	equ	0xFEF
  3702                           postinc0	equ	0xFEE
  3703                           postdec0	equ	0xFED
  3704                           preinc0	equ	0xFEC
  3705                           plusw0	equ	0xFEB
  3706                           fsr0h	equ	0xFEA
  3707                           fsr0l	equ	0xFE9
  3708                           wreg	equ	0xFE8
  3709                           indf1	equ	0xFE7
  3710                           postinc1	equ	0xFE6
  3711                           postdec1	equ	0xFE5
  3712                           preinc1	equ	0xFE4
  3713                           plusw1	equ	0xFE3
  3714                           fsr1h	equ	0xFE2
  3715                           fsr1l	equ	0xFE1
  3716                           bsr	equ	0xFE0
  3717                           indf2	equ	0xFDF
  3718                           postinc2	equ	0xFDE
  3719                           postdec2	equ	0xFDD
  3720                           preinc2	equ	0xFDC
  3721                           plusw2	equ	0xFDB
  3722                           fsr2h	equ	0xFDA
  3723                           fsr2l	equ	0xFD9
  3724                           status	equ	0xFD8

Data Sizes:
    Strings     130
    Constant    0
    Data        0
    BSS         69
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     66     103
    BANK0           128      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(COMRAM[20]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(COMRAM[20]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1012$buffer	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(COMRAM[20]), 

    S1012$source	PTR const unsigned char  size(2) Largest target is 0

    sp__strchr	PTR unsigned char  size(1) Largest target is 10
		 -> uart_rx_buffer(COMRAM[10]), NULL(NULL[0]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 10
		 -> uart_rx_buffer(COMRAM[10]), NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_20(CODE[10]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 20
		 -> buffer(COMRAM[20]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 10
		 -> uart_rx_buffer(COMRAM[10]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_11(CODE[9]), STR_13(CODE[9]), STR_15(CODE[9]), STR_17(CODE[9]), 
		 -> STR_19(CODE[9]), STR_2(CODE[9]), STR_22(CODE[9]), STR_5(CODE[9]), 
		 -> STR_7(CODE[9]), STR_9(CODE[9]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_11(CODE[9]), STR_13(CODE[9]), STR_15(CODE[9]), STR_17(CODE[9]), 
		 -> STR_19(CODE[9]), STR_2(CODE[9]), STR_22(CODE[9]), STR_5(CODE[9]), 
		 -> STR_7(CODE[9]), STR_9(CODE[9]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 10
		 -> uart_rx_buffer(COMRAM[10]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_11(CODE[9]), STR_13(CODE[9]), STR_15(CODE[9]), STR_17(CODE[9]), 
		 -> STR_19(CODE[9]), STR_2(CODE[9]), STR_22(CODE[9]), STR_5(CODE[9]), 
		 -> STR_7(CODE[9]), STR_9(CODE[9]), 

    strstr@h	PTR const unsigned char  size(1) Largest target is 10
		 -> uart_rx_buffer(COMRAM[10]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_11(CODE[9]), STR_13(CODE[9]), STR_15(CODE[9]), STR_17(CODE[9]), 
		 -> STR_19(CODE[9]), STR_2(CODE[9]), STR_22(CODE[9]), STR_5(CODE[9]), 
		 -> STR_7(CODE[9]), STR_9(CODE[9]), 

    UART_SendString@str	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer(COMRAM[20]), STR_23(CODE[19]), STR_24(CODE[3]), STR_3(CODE[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 10
		 -> STR_20(CODE[10]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 10
		 -> STR_20(CODE[10]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_20(CODE[10]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _strstr->_strncmp
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _UART_SendString->_UART_SendChar

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3133
                                             64 COMRAM     2     2      0
                           _SelectIO
                          _UART_Init
                      _UART_SendChar
                    _UART_SendString
                           _delay_ms
                         _init_ports
                         _latch_data
                     _read_RC_inputs
                            _sprintf
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _strstr                                               4     2      2     605
                                              8 COMRAM     4     2      2
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              5     1      4     182
                                              3 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      91
                                              3 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _strchr                                               4     1      3      90
                                              3 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    14      4    2221
                                             48 COMRAM    16    12      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    2018
                                             44 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           10     7      3    1884
                                             35 COMRAM     9     6      3
                              _fputc
                 _read_prec_or_width
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                12     9      3    1045
                                             23 COMRAM    12     9      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     3      4     747
                                             16 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                5     3      2     333
                                             11 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     232
                                              3 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     182
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _read_RC_inputs                                       2     2      0      28
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _latch_data                                           1     1      0      29
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
             _init_inputs_RC0_to_RC4
 ---------------------------------------------------------------------------------
 (2) _init_inputs_RC0_to_RC4                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             3     1      2      23
                                              3 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _UART_SendString                                      2     0      2      78
                                              4 COMRAM     2     0      2
                      _UART_SendChar
 ---------------------------------------------------------------------------------
 (2) _UART_SendChar                                        1     1      0      29
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SelectIO                                             1     1      0      29
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                  3     3      0      23
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SelectIO
   _UART_Init
   _UART_SendChar
   _UART_SendString
     _UART_SendChar
   _delay_ms
   _init_ports
     _init_inputs_RC0_to_RC4
   _latch_data
   _read_RC_inputs
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _read_prec_or_width
         _xtoa
           _pad
             _fputc
             _fputs
               _fputc
   _strstr
     _strchr
     _strlen
     _strncmp

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0      32     25.0%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     66     103     81.7%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         35      0       0      0.0%
BITBIGSFRllh         6      0       0      0.0%
BITBIGSFRlll         2      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     137      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat May 17 20:27:09 2025

                            l50 11B6                              l60 0EB6                              l44 1114  
                            l53 0E18                              l62 0EBC                              l63 0EC2  
                            l47 1158                              l64 0EC8                              l56 1176  
                            l65 0ECE                              l66 0ED4                              l68 0F10  
                           l142 1194                             l145 1198                             l154 0F6E  
                           l148 11AA                             l910 1008                             l903 09F6  
                           l922 0C52                             l930 1044                             l843 10E6  
                           l933 11B8                             l861 0E4A                             l864 0E88  
                           l952 1046                             l961 10B2                             l882 0CEE  
                           l866 0EA2                             l954 107E                             l946 0D8A  
                           l965 0BA8                             l886 0CF6                             l878 0AEC  
                           _GIE 7F97                             u610 0BBA                             u611 0BB6  
                           u620 0BCA                             u700 0A30                             _ISR 0008  
                           u621 0BC6                             u701 0A2C                             u630 0BF0  
                           u631 0BEC                             u640 0C22                             u720 0A8C  
                           u800 0924                             u641 0C1E                             u721 0A88  
                           u801 0920                             u650 1044                             u730 0A9E  
                           u810 0946                             u651 1040                             u731 0A9A  
                           u715 0A5C                             u811 0942                             u660 0E28  
                           u740 0AAE                             u820 0976                             u900 0B88  
                           u661 0E24                             u741 0AAA                             u821 0972  
                           u901 0B84                             u830 11A6                             u670 0E42  
                           u750 0AC8                             u910 105E                             u831 11A2  
                           u671 0E3E                             u751 0AC4                             u911 105A  
                           u680 0E88                             u760 0AD6                             u840 1000  
                           u920 107C                             u681 0E84                             u761 0AD2  
                           u841 0FFC                             u921 1078                             u930 1114  
                           u770 0C7E                             u690 0E96                             u850 10A6  
                           u931 1110                             u771 0C7A                             u691 0E92  
                           u851 10A2                             u940 0D9E                             u780 0CEE  
                           u860 0B08                             u941 0D98                             u781 0CEA  
                           u861 0B04                             u950 0DB4                             u790 08C2  
                           u870 0B34                             u951 0DAC                             u791 08BE  
                           u871 0B30                             u960 0DCE                             u880 0B50  
                           u961 0DC6                             u881 0B4C                             u970 0DEC  
                           u946 0DA0                             u890 0B62                             u971 0DE4  
                           u891 0B5E                             u980 0E0E                             u981 0E06  
                           u958 0DB6                             u990 0D08                             u991 0D04  
                           u968 0DD0                             u978 0DEE                             u988 0E10  
                           _pad 0E1A                             wreg 0FE8                            ?_ISR 0001  
                          l1400 0E96                            l1410 0A1A                            l1402 09F8  
                          l1420 0A48                            l1412 0A20                            l1404 09FC  
                          l1510 1198                            l1430 0A9E                            l1422 0A4A  
                          l1414 0A30                            l1406 0A0C                            l1502 09D4  
                          l1600 0EDA                            l1512 11A6                            l1440 0C54  
                          l1432 0AAE                            l1424 0A50                            l1416 0A38  
                          l1408 0A14                            l1520 1000                            l1610 1184  
                          l1602 1178                            l1450 0CC0                            l1442 0C5C  
                          l1370 0BD4                            l1434 0AC8                            l1418 0A3C  
                          l1426 0A70                            l1514 0FCC                            l1530 10A6  
                          l1620 118E                            l1612 1186                            l1604 117C  
                          l1508 11AC                            l1444 0C7E                            l1452 0CC8  
                          l1372 0BF0                            l1364 0BAA                            l1380 1016  
                          l1428 0A8C                            l1436 0AD6                            l1460 08D6  
                          l1516 0FD4                            l1524 1080                            l1540 0B14  
                          l1700 077E                            l1622 1190                            l1614 1188  
                          l1606 1180                            l1446 0C86                            l1374 0C22  
                          l1366 0BBA                            l1382 1024                            l1390 0E34  
                          l1462 08DA                            l1454 08A0                            l1518 0FE4  
                          l1526 1088                            l1550 0B88                            l1542 0B1E  
                          l1534 0AEE                            l1630 0D1C                            l1710 07E6  
                          l1702 079A                            l1624 1192                            l1616 118A  
                          l1608 1182                            l1448 0CA2                            l1368 0BCA  
                          l1384 1028                            l1392 0E42                            l1480 0946  
                          l1472 08F6                            l1464 08E0                            l1456 08C2  
                          l1560 1064                            l1528 108A                            l1544 0B34  
                          l1536 0B08                            l1640 0D72                            l1632 0D42  
                          l1720 0832                            l1712 07F0                            l1704 07A4  
                          l1618 118C                            l1650 0F3A                            l1570 10FA  
                          l1378 100A                            l1394 0E56                            l1386 0E1A  
                          l1490 099C                            l1482 0950                            l1466 08E2  
                          l1474 0914                            l1458 08CA                            l1562 107C  
                          l1554 1046                            l1546 0B50                            l1642 0D88  
                          l1626 0CF8                            l1722 084E                            l1714 080C  
                          l1706 07C0                            l1652 0F3E                            l1580 114E  
                          l1572 113E                            l1396 0E66                            l1388 0E28  
                          l1484 095A                            l1476 0924                            l1468 08EE  
                          l1660 10CC                            l1556 105E                            l1548 0B62  
                          l1636 0D48                            l1628 0D08                            l1732 0866  
                          l1724 0854                            l1716 0812                            l1708 07CA  
                          l1740 0896                            l1646 0F12                            l1566 10E8  
                          l1582 1156                            l1574 1142                            l1398 0E6A  
                          l1486 0976                            l1478 0938                            l1662 10DC  
                          l1654 10B4                            l1638 0D62                            l1734 0874  
                          l1726 0864                            l1718 0824                            l1670 0694  
                          l1648 0F16                            l1568 10EC                            l1592 115A  
                          l1576 1144                            l1584 0D8C                            l1496 09B0  
                          l1488 098E                            l1656 10BC                            l1736 0876  
                          l1680 06B6                            l1672 0698                            l1594 1172  
                          l1578 114C                            l1586 0D8E                            l1498 09C8  
                          l1658 10C4                            l1738 0886                            l1690 0728  
                          l1682 06D2                            l1674 069E                            l1666 0684  
                          l1596 0EA6                            l1588 0E16                            l1692 0732  
                          l1684 06E6                            l1676 06A4                            l1668 0690  
                          l1694 074E                            l1686 0702                            l1678 06B4  
                          l1696 0758                            l1688 070C                            l1698 0774  
                          ?_pad 0011                            STR_1 067A                            STR_2 067A  
                          STR_3 0614                            STR_4 0632                            STR_5 0632  
                          STR_6 063B                            STR_7 063B                            STR_8 0644  
                          STR_9 0644                            _BRGH 7D62                            u1000 0D42  
                          _CREN 7D5C                            u1001 0D3E                            u1010 0D72  
                          u1011 0D6E                            u1020 0D88                            u1100 074E  
                          u1021 0D84                            u1101 074A                            u1030 0F36  
                          u1110 0774                            u1111 0770                            u1040 0F5E  
                          u1120 079A                            u1121 0796                            u1050 0F6E  
                          u1130 07C0                            u1051 0F6A                            u1131 07BC  
                          u1140 07E6                            u1060 06B4                            u1037 0F2C  
                          u1141 07E2                            u1061 06B0                            u1150 080C  
                          u1070 06D2                            u1047 0F54                            u1151 0808  
                          u1071 06CE                            u1160 084E                            u1080 0702  
                          u1217 1146                            u1161 084A                            u1081 06FE  
                          u1170 0886                            u1090 0728                            u1227 1150  
                          u1171 0882                            u1091 0724                            u1237 10F2  
                          _LATD 0F8C                            _PEIE 7F96                            _RCIE 7CED  
                          _RCIF 7CF5                            _SPEN 7D5F                            _TXEN 7D65  
                          _TXIF 7CF4                            _SYNC 7D64                            _dbuf 0080  
                          _main 0684                            _prec 0045                            pad@i 0016  
                          pad@p 0013                            fsr1h 0FE2                            fsr2h 0FDA  
                          indf1 0FE7                            indf2 0FDF                            fsr1l 0FE1  
                          fsr2l 0FD9                            btemp 0068                            _xtoa 09F8  
                          prodh 0FF4                            prodl 0FF3                            start 000E  
                  ___param_bank 0000                           ??_ISR 0001                           ??_pad 0015  
            latch_data@seg_data 0004                           ?_main 0001                           STR_10 064D  
                         STR_11 064D                           STR_12 0656                           STR_20 061F  
                         STR_13 0656                           STR_21 065F                           STR_22 065F  
                         STR_14 0668                           STR_15 0668                           STR_23 0601  
                         STR_24 061C                           STR_16 0629                           _BRG16 7DC3  
                         STR_17 0629                           STR_18 0671                           STR_19 0671  
                         ?_xtoa 0018                           i2l162 0FC0                           _RCREG 0FAE  
                  vfpfcnvrt@fmt 0025                           _SPBRG 0FAF                           _TXREG 0FAD  
                  main@rc_input 0041                   SelectIO@index 0004                           _flags 0047  
           read_prec_or_width@c 0008             read_prec_or_width@n 0009                           _fputc 0BAA  
                         _fputs 100A                           pad@fp 0011                           _width 0043  
                         _putch 11B8                           main@i 0042                ?_UART_SendString 0005  
                         tablat 0FF5                           ttemp5 0069                           ttemp6 006C  
                         ttemp7 0070                           status 0FD8                           wtemp8 0069  
               __end_of_sprintf 10E8                           xtoa@c 0021                           xtoa@d 0019  
                         xtoa@i 0022                           xtoa@p 001E                           xtoa@w 001F  
               __end_of_strncmp 0BAA                 __initialization 1116                    __end_of_main 08A0  
                  __end_of_xtoa 0AEE                          ??_main 0041                __end_of_SelectIO 0F12  
                        ??_xtoa 001B                   __activetblptr 0002      __end_of_read_prec_or_width 0CF8  
      ??_init_inputs_RC0_to_RC4 0004                          ?_fputc 0004                          ?_fputs 000C  
                        ?_putch 0001                          i2l1750 0FA8                          i2l1742 0F7A  
                        i2l1752 0FAA                          i2l1744 0F88                          i2l1754 0FBA  
                        i2l1746 0F8C                          i2l1756 0FBE                          i2l1748 0F9C  
                 vfpfcnvrt@done 002B                          _TRISC6 7CA6                          _TRISC7 7CA7  
              __end_of_delay_ms 1116                    vfprintf@cfmt 0030               __end_of_UART_Init 1196  
                        _buffer 004A            read_prec_or_width@ap 0005                          clear_0 111C  
                        clear_1 1128                          isa$std 0001                          pad@buf 0012  
                        _strchr 1046                          _strlen 1080                          _strstr 0CF8  
                        fputc@c 0004                          fputs@c 000E                          fputs@i 000F  
                        fputs@s 000C                    __mediumconst 0600                          tblptrh 0FF7  
                        tblptrl 0FF6                          tblptru 0FF8                          putch@c 0001  
              __end_of_vfprintf 100A                       ??_sprintf 0035           __end_of_UART_SendChar 11AC  
                        xtoa@fp 0018                       ??_strncmp 0008                      __accesstop 0080  
       __end_of__initialization 112E                   ___rparam_used 0001                  __pcstackCOMRAM 0001  
                 __end_of_fputc 0C54                   __end_of_fputs 1046                   __end_of_putch 11BA  
                   ISR@received 0003                         ??_fputc 0007                         ??_fputs 000E  
                       ??_putch 0004                      __pbssBANK0 0080                       ?_SelectIO 0001  
                       ?_strchr 0004                         ?_strlen 0004                         ?_strstr 0009  
                     ?_delay_ms 0004                      _latch_data 113C                      ??_SelectIO 0004  
                       __Hparam 0000                         __Lparam 0000              UART_SendString@str 0005  
        _init_inputs_RC0_to_RC4 11AC                       ?_vfprintf 002D                    __psmallconst 0600  
                       __pcinit 1116                      _init_ports 115A                         __ramtop 0600  
                       __ptext0 0684                         __ptext1 0CF8                         __ptext2 0AEE  
                       __ptext3 1080                         __ptext4 1046                         __ptext5 10B4  
                       __ptext6 0FCC                         __ptext7 08A0                         __ptext8 09F8  
                       __ptext9 0E1A            read_RC_inputs@result 0005           read_prec_or_width@fmt 0004  
                    ??_delay_ms 0006                         _sprintf 10B4                         _strncmp 0AEE  
                __pintcode_body 0F70                      delay_ms@ms 0004            end_of_initialization 112E  
                       fputc@fp 0006                   __Lmediumconst 0000                         int_func 0F70  
                       fputs@fp 000D              _read_prec_or_width 0C54               __end_of_vfpfcnvrt 09F8  
                       postdec2 0FDD             ?_read_prec_or_width 0004                         postinc0 0FEE  
                       postinc1 0FE6                         postinc2 0FDE                vfpfcnvrt@convarg 0027  
                    ??_vfprintf 0030                         strchr@c 0005                         strchr@s 0004  
                       strlen@a 0006                         strlen@s 0004                       _UART_Init 1178  
                       strstr@h 0009                         strstr@n 000A                       _PORTCbits 0F82  
                _read_RC_inputs 0D8C                       _TRISAbits 0F92                       _TRISBbits 0F93  
                     _TRISCbits 0F94                       _TRISEbits 0F96            ??_read_prec_or_width 0006  
                   ?_latch_data 0001                     vfpfcnvrt@ap 0026                     vfpfcnvrt@cp 002C  
                   vfpfcnvrt@fp 0024                      ?_UART_Init 0001                     ?_init_ports 0001  
        __end_of_read_RC_inputs 0E1A                  __end_of_strchr 1080                  __end_of_strlen 10B4  
                __end_of_strstr 0D8C             start_initialization 1116                     __end_of_ISR 0FCC  
                   __end_of_pad 0EA4                     vfprintf@fmt 002E               ??_UART_SendString 0007  
               ?_read_RC_inputs 0001                        ??_strchr 0007                        ??_strlen 0006  
                      ??_strstr 000B                _uart_frame_ready 0049                     __pbssCOMRAM 0043  
       ?_init_inputs_RC0_to_RC4 0001                       __pintcode 0008                     ??_UART_Init 0004  
                   __smallconst 0600                        ?_sprintf 0031                        ?_strncmp 0004  
                 _UART_SendChar 1196                  _uart_rx_buffer 005E  __end_of_init_inputs_RC0_to_RC4 11B8  
                      _LATAbits 0F89                        _LATBbits 0F8A                        _LATCbits 0F8B  
                      _LATEbits 0F8D                        i2u120_40 0FBA                        i2u120_41 0FB6  
                      i2u118_40 0F88                        i2u118_41 0F84                        i2u119_40 0F9C  
                      i2u119_41 0F98                       _vfpfcnvrt 08A0                 UART_SendChar@ch 0004  
                ?_UART_SendChar 0001                    ??_latch_data 0004                        _SelectIO 0EA4  
                      __Hrparam 0000                      vfprintf@ap 002F                        __Lrparam 0000  
                    vfprintf@fp 002D                      ?_vfpfcnvrt 0024                    ??_init_ports 0004  
                    sprintf@fmt 0032              __end_of_latch_data 115A                        _delay_ms 10E8  
                      __ptext10 100A                        __ptext11 0BAA                        __ptext20 1196  
                      __ptext12 11B8                        __ptext21 1178                        __ptext13 0C54  
                      __ptext22 0EA4                        __ptext14 0D8C                        __ptext15 113C  
                      __ptext16 115A                        __ptext17 11AC                        __ptext18 10E8  
                      __ptext19 0F12              __end_of_init_ports 1178                   _uart_rx_index 0048  
               _UART_SendString 0F12                ??_read_RC_inputs 0004                        isa$xinst 0000  
                      int$flags 0068                        _vfprintf 0FCC                 ??_UART_SendChar 0004  
                      intlevel2 0000                       sprintf@ap 0035                     ??_vfpfcnvrt 0027  
                      sprintf@f 0036                        sprintf@s 0031                        strncmp@l 0004  
                      strncmp@n 0006                        strncmp@r 0005                        strstr@nl 000B  
       __end_of_UART_SendString 0F70  
