

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun Jun 08 15:57:39 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=3
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=3
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=3
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43   000000                     
    44                           ; Generated 17/10/2023 GMT
    45                           ; 
    46                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4520 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78   000FE0                     bsr             equ	4064
    79   000FE9                     fsr0            equ	4073
    80   000FEA                     fsr0h           equ	4074
    81   000FE9                     fsr0l           equ	4073
    82   000FE1                     fsr1            equ	4065
    83   000FE2                     fsr1h           equ	4066
    84   000FE1                     fsr1l           equ	4065
    85   000FD9                     fsr2            equ	4057
    86   000FDA                     fsr2h           equ	4058
    87   000FD9                     fsr2l           equ	4057
    88   000FEF                     indf0           equ	4079
    89   000FE7                     indf1           equ	4071
    90   000FDF                     indf2           equ	4063
    91   000FF2                     intcon          equ	4082
    92   000000                     nvmcon          equ	0
    93   000FF9                     pcl             equ	4089
    94   000FFA                     pclath          equ	4090
    95   000FFB                     pclatu          equ	4091
    96   000FEB                     plusw0          equ	4075
    97   000FE3                     plusw1          equ	4067
    98   000FDB                     plusw2          equ	4059
    99   000FED                     postdec0        equ	4077
   100   000FE5                     postdec1        equ	4069
   101   000FDD                     postdec2        equ	4061
   102   000FEE                     postinc0        equ	4078
   103   000FE6                     postinc1        equ	4070
   104   000FDE                     postinc2        equ	4062
   105   000FEC                     preinc0         equ	4076
   106   000FE4                     preinc1         equ	4068
   107   000FDC                     preinc2         equ	4060
   108   000FF3                     prod            equ	4083
   109   000FF4                     prodh           equ	4084
   110   000FF3                     prodl           equ	4083
   111   000FD8                     status          equ	4056
   112   000FF5                     tablat          equ	4085
   113   000FF6                     tblptr          equ	4086
   114   000FF7                     tblptrh         equ	4087
   115   000FF6                     tblptrl         equ	4086
   116   000FF8                     tblptru         equ	4088
   117   000FFD                     tosl            equ	4093
   118   000FE8                     wreg            equ	4072
   119   000F80                     PORTA           equ	3968	;# 
   120   000F81                     PORTB           equ	3969	;# 
   121   000F82                     PORTC           equ	3970	;# 
   122   000F83                     PORTD           equ	3971	;# 
   123   000F84                     PORTE           equ	3972	;# 
   124   000F89                     LATA            equ	3977	;# 
   125   000F8A                     LATB            equ	3978	;# 
   126   000F8B                     LATC            equ	3979	;# 
   127   000F8C                     LATD            equ	3980	;# 
   128   000F8D                     LATE            equ	3981	;# 
   129   000F92                     TRISA           equ	3986	;# 
   130   000F92                     DDRA            equ	3986	;# 
   131   000F93                     TRISB           equ	3987	;# 
   132   000F93                     DDRB            equ	3987	;# 
   133   000F94                     TRISC           equ	3988	;# 
   134   000F94                     DDRC            equ	3988	;# 
   135   000F95                     TRISD           equ	3989	;# 
   136   000F95                     DDRD            equ	3989	;# 
   137   000F96                     TRISE           equ	3990	;# 
   138   000F96                     DDRE            equ	3990	;# 
   139   000F9B                     OSCTUNE         equ	3995	;# 
   140   000F9D                     PIE1            equ	3997	;# 
   141   000F9E                     PIR1            equ	3998	;# 
   142   000F9F                     IPR1            equ	3999	;# 
   143   000FA0                     PIE2            equ	4000	;# 
   144   000FA1                     PIR2            equ	4001	;# 
   145   000FA2                     IPR2            equ	4002	;# 
   146   000FA6                     EECON1          equ	4006	;# 
   147   000FA7                     EECON2          equ	4007	;# 
   148   000FA8                     EEDATA          equ	4008	;# 
   149   000FA9                     EEADR           equ	4009	;# 
   150   000FAB                     RCSTA           equ	4011	;# 
   151   000FAB                     RCSTA1          equ	4011	;# 
   152   000FAC                     TXSTA           equ	4012	;# 
   153   000FAC                     TXSTA1          equ	4012	;# 
   154   000FAD                     TXREG           equ	4013	;# 
   155   000FAD                     TXREG1          equ	4013	;# 
   156   000FAE                     RCREG           equ	4014	;# 
   157   000FAE                     RCREG1          equ	4014	;# 
   158   000FAF                     SPBRG           equ	4015	;# 
   159   000FAF                     SPBRG1          equ	4015	;# 
   160   000FB0                     SPBRGH          equ	4016	;# 
   161   000FB1                     T3CON           equ	4017	;# 
   162   000FB2                     TMR3            equ	4018	;# 
   163   000FB2                     TMR3L           equ	4018	;# 
   164   000FB3                     TMR3H           equ	4019	;# 
   165   000FB4                     CMCON           equ	4020	;# 
   166   000FB5                     CVRCON          equ	4021	;# 
   167   000FB6                     ECCP1AS         equ	4022	;# 
   168   000FB6                     ECCPAS          equ	4022	;# 
   169   000FB7                     PWM1CON         equ	4023	;# 
   170   000FB7                     ECCP1DEL        equ	4023	;# 
   171   000FB8                     BAUDCON         equ	4024	;# 
   172   000FB8                     BAUDCTL         equ	4024	;# 
   173   000FBA                     CCP2CON         equ	4026	;# 
   174   000FBB                     CCPR2           equ	4027	;# 
   175   000FBB                     CCPR2L          equ	4027	;# 
   176   000FBC                     CCPR2H          equ	4028	;# 
   177   000FBD                     CCP1CON         equ	4029	;# 
   178   000FBE                     CCPR1           equ	4030	;# 
   179   000FBE                     CCPR1L          equ	4030	;# 
   180   000FBF                     CCPR1H          equ	4031	;# 
   181   000FC0                     ADCON2          equ	4032	;# 
   182   000FC1                     ADCON1          equ	4033	;# 
   183   000FC2                     ADCON0          equ	4034	;# 
   184   000FC3                     ADRES           equ	4035	;# 
   185   000FC3                     ADRESL          equ	4035	;# 
   186   000FC4                     ADRESH          equ	4036	;# 
   187   000FC5                     SSPCON2         equ	4037	;# 
   188   000FC6                     SSPCON1         equ	4038	;# 
   189   000FC7                     SSPSTAT         equ	4039	;# 
   190   000FC8                     SSPADD          equ	4040	;# 
   191   000FC9                     SSPBUF          equ	4041	;# 
   192   000FCA                     T2CON           equ	4042	;# 
   193   000FCB                     PR2             equ	4043	;# 
   194   000FCB                     MEMCON          equ	4043	;# 
   195   000FCC                     TMR2            equ	4044	;# 
   196   000FCD                     T1CON           equ	4045	;# 
   197   000FCE                     TMR1            equ	4046	;# 
   198   000FCE                     TMR1L           equ	4046	;# 
   199   000FCF                     TMR1H           equ	4047	;# 
   200   000FD0                     RCON            equ	4048	;# 
   201   000FD1                     WDTCON          equ	4049	;# 
   202   000FD2                     HLVDCON         equ	4050	;# 
   203   000FD2                     LVDCON          equ	4050	;# 
   204   000FD3                     OSCCON          equ	4051	;# 
   205   000FD5                     T0CON           equ	4053	;# 
   206   000FD6                     TMR0            equ	4054	;# 
   207   000FD6                     TMR0L           equ	4054	;# 
   208   000FD7                     TMR0H           equ	4055	;# 
   209   000FD8                     STATUS          equ	4056	;# 
   210   000FD9                     FSR2            equ	4057	;# 
   211   000FD9                     FSR2L           equ	4057	;# 
   212   000FDA                     FSR2H           equ	4058	;# 
   213   000FDB                     PLUSW2          equ	4059	;# 
   214   000FDC                     PREINC2         equ	4060	;# 
   215   000FDD                     POSTDEC2        equ	4061	;# 
   216   000FDE                     POSTINC2        equ	4062	;# 
   217   000FDF                     INDF2           equ	4063	;# 
   218   000FE0                     BSR             equ	4064	;# 
   219   000FE1                     FSR1            equ	4065	;# 
   220   000FE1                     FSR1L           equ	4065	;# 
   221   000FE2                     FSR1H           equ	4066	;# 
   222   000FE3                     PLUSW1          equ	4067	;# 
   223   000FE4                     PREINC1         equ	4068	;# 
   224   000FE5                     POSTDEC1        equ	4069	;# 
   225   000FE6                     POSTINC1        equ	4070	;# 
   226   000FE7                     INDF1           equ	4071	;# 
   227   000FE8                     WREG            equ	4072	;# 
   228   000FE9                     FSR0            equ	4073	;# 
   229   000FE9                     FSR0L           equ	4073	;# 
   230   000FEA                     FSR0H           equ	4074	;# 
   231   000FEB                     PLUSW0          equ	4075	;# 
   232   000FEC                     PREINC0         equ	4076	;# 
   233   000FED                     POSTDEC0        equ	4077	;# 
   234   000FEE                     POSTINC0        equ	4078	;# 
   235   000FEF                     INDF0           equ	4079	;# 
   236   000FF0                     INTCON3         equ	4080	;# 
   237   000FF1                     INTCON2         equ	4081	;# 
   238   000FF2                     INTCON          equ	4082	;# 
   239   000FF3                     PROD            equ	4083	;# 
   240   000FF3                     PRODL           equ	4083	;# 
   241   000FF4                     PRODH           equ	4084	;# 
   242   000FF5                     TABLAT          equ	4085	;# 
   243   000FF6                     TBLPTR          equ	4086	;# 
   244   000FF6                     TBLPTRL         equ	4086	;# 
   245   000FF7                     TBLPTRH         equ	4087	;# 
   246   000FF8                     TBLPTRU         equ	4088	;# 
   247   000FF9                     PCLAT           equ	4089	;# 
   248   000FF9                     PC              equ	4089	;# 
   249   000FF9                     PCL             equ	4089	;# 
   250   000FFA                     PCLATH          equ	4090	;# 
   251   000FFB                     PCLATU          equ	4091	;# 
   252   000FFC                     STKPTR          equ	4092	;# 
   253   000FFD                     TOS             equ	4093	;# 
   254   000FFD                     TOSL            equ	4093	;# 
   255   000FFE                     TOSH            equ	4094	;# 
   256   000FFF                     TOSU            equ	4095	;# 
   257   000F80                     PORTA           equ	3968	;# 
   258   000F81                     PORTB           equ	3969	;# 
   259   000F82                     PORTC           equ	3970	;# 
   260   000F83                     PORTD           equ	3971	;# 
   261   000F84                     PORTE           equ	3972	;# 
   262   000F89                     LATA            equ	3977	;# 
   263   000F8A                     LATB            equ	3978	;# 
   264   000F8B                     LATC            equ	3979	;# 
   265   000F8C                     LATD            equ	3980	;# 
   266   000F8D                     LATE            equ	3981	;# 
   267   000F92                     TRISA           equ	3986	;# 
   268   000F92                     DDRA            equ	3986	;# 
   269   000F93                     TRISB           equ	3987	;# 
   270   000F93                     DDRB            equ	3987	;# 
   271   000F94                     TRISC           equ	3988	;# 
   272   000F94                     DDRC            equ	3988	;# 
   273   000F95                     TRISD           equ	3989	;# 
   274   000F95                     DDRD            equ	3989	;# 
   275   000F96                     TRISE           equ	3990	;# 
   276   000F96                     DDRE            equ	3990	;# 
   277   000F9B                     OSCTUNE         equ	3995	;# 
   278   000F9D                     PIE1            equ	3997	;# 
   279   000F9E                     PIR1            equ	3998	;# 
   280   000F9F                     IPR1            equ	3999	;# 
   281   000FA0                     PIE2            equ	4000	;# 
   282   000FA1                     PIR2            equ	4001	;# 
   283   000FA2                     IPR2            equ	4002	;# 
   284   000FA6                     EECON1          equ	4006	;# 
   285   000FA7                     EECON2          equ	4007	;# 
   286   000FA8                     EEDATA          equ	4008	;# 
   287   000FA9                     EEADR           equ	4009	;# 
   288   000FAB                     RCSTA           equ	4011	;# 
   289   000FAB                     RCSTA1          equ	4011	;# 
   290   000FAC                     TXSTA           equ	4012	;# 
   291   000FAC                     TXSTA1          equ	4012	;# 
   292   000FAD                     TXREG           equ	4013	;# 
   293   000FAD                     TXREG1          equ	4013	;# 
   294   000FAE                     RCREG           equ	4014	;# 
   295   000FAE                     RCREG1          equ	4014	;# 
   296   000FAF                     SPBRG           equ	4015	;# 
   297   000FAF                     SPBRG1          equ	4015	;# 
   298   000FB0                     SPBRGH          equ	4016	;# 
   299   000FB1                     T3CON           equ	4017	;# 
   300   000FB2                     TMR3            equ	4018	;# 
   301   000FB2                     TMR3L           equ	4018	;# 
   302   000FB3                     TMR3H           equ	4019	;# 
   303   000FB4                     CMCON           equ	4020	;# 
   304   000FB5                     CVRCON          equ	4021	;# 
   305   000FB6                     ECCP1AS         equ	4022	;# 
   306   000FB6                     ECCPAS          equ	4022	;# 
   307   000FB7                     PWM1CON         equ	4023	;# 
   308   000FB7                     ECCP1DEL        equ	4023	;# 
   309   000FB8                     BAUDCON         equ	4024	;# 
   310   000FB8                     BAUDCTL         equ	4024	;# 
   311   000FBA                     CCP2CON         equ	4026	;# 
   312   000FBB                     CCPR2           equ	4027	;# 
   313   000FBB                     CCPR2L          equ	4027	;# 
   314   000FBC                     CCPR2H          equ	4028	;# 
   315   000FBD                     CCP1CON         equ	4029	;# 
   316   000FBE                     CCPR1           equ	4030	;# 
   317   000FBE                     CCPR1L          equ	4030	;# 
   318   000FBF                     CCPR1H          equ	4031	;# 
   319   000FC0                     ADCON2          equ	4032	;# 
   320   000FC1                     ADCON1          equ	4033	;# 
   321   000FC2                     ADCON0          equ	4034	;# 
   322   000FC3                     ADRES           equ	4035	;# 
   323   000FC3                     ADRESL          equ	4035	;# 
   324   000FC4                     ADRESH          equ	4036	;# 
   325   000FC5                     SSPCON2         equ	4037	;# 
   326   000FC6                     SSPCON1         equ	4038	;# 
   327   000FC7                     SSPSTAT         equ	4039	;# 
   328   000FC8                     SSPADD          equ	4040	;# 
   329   000FC9                     SSPBUF          equ	4041	;# 
   330   000FCA                     T2CON           equ	4042	;# 
   331   000FCB                     PR2             equ	4043	;# 
   332   000FCB                     MEMCON          equ	4043	;# 
   333   000FCC                     TMR2            equ	4044	;# 
   334   000FCD                     T1CON           equ	4045	;# 
   335   000FCE                     TMR1            equ	4046	;# 
   336   000FCE                     TMR1L           equ	4046	;# 
   337   000FCF                     TMR1H           equ	4047	;# 
   338   000FD0                     RCON            equ	4048	;# 
   339   000FD1                     WDTCON          equ	4049	;# 
   340   000FD2                     HLVDCON         equ	4050	;# 
   341   000FD2                     LVDCON          equ	4050	;# 
   342   000FD3                     OSCCON          equ	4051	;# 
   343   000FD5                     T0CON           equ	4053	;# 
   344   000FD6                     TMR0            equ	4054	;# 
   345   000FD6                     TMR0L           equ	4054	;# 
   346   000FD7                     TMR0H           equ	4055	;# 
   347   000FD8                     STATUS          equ	4056	;# 
   348   000FD9                     FSR2            equ	4057	;# 
   349   000FD9                     FSR2L           equ	4057	;# 
   350   000FDA                     FSR2H           equ	4058	;# 
   351   000FDB                     PLUSW2          equ	4059	;# 
   352   000FDC                     PREINC2         equ	4060	;# 
   353   000FDD                     POSTDEC2        equ	4061	;# 
   354   000FDE                     POSTINC2        equ	4062	;# 
   355   000FDF                     INDF2           equ	4063	;# 
   356   000FE0                     BSR             equ	4064	;# 
   357   000FE1                     FSR1            equ	4065	;# 
   358   000FE1                     FSR1L           equ	4065	;# 
   359   000FE2                     FSR1H           equ	4066	;# 
   360   000FE3                     PLUSW1          equ	4067	;# 
   361   000FE4                     PREINC1         equ	4068	;# 
   362   000FE5                     POSTDEC1        equ	4069	;# 
   363   000FE6                     POSTINC1        equ	4070	;# 
   364   000FE7                     INDF1           equ	4071	;# 
   365   000FE8                     WREG            equ	4072	;# 
   366   000FE9                     FSR0            equ	4073	;# 
   367   000FE9                     FSR0L           equ	4073	;# 
   368   000FEA                     FSR0H           equ	4074	;# 
   369   000FEB                     PLUSW0          equ	4075	;# 
   370   000FEC                     PREINC0         equ	4076	;# 
   371   000FED                     POSTDEC0        equ	4077	;# 
   372   000FEE                     POSTINC0        equ	4078	;# 
   373   000FEF                     INDF0           equ	4079	;# 
   374   000FF0                     INTCON3         equ	4080	;# 
   375   000FF1                     INTCON2         equ	4081	;# 
   376   000FF2                     INTCON          equ	4082	;# 
   377   000FF3                     PROD            equ	4083	;# 
   378   000FF3                     PRODL           equ	4083	;# 
   379   000FF4                     PRODH           equ	4084	;# 
   380   000FF5                     TABLAT          equ	4085	;# 
   381   000FF6                     TBLPTR          equ	4086	;# 
   382   000FF6                     TBLPTRL         equ	4086	;# 
   383   000FF7                     TBLPTRH         equ	4087	;# 
   384   000FF8                     TBLPTRU         equ	4088	;# 
   385   000FF9                     PCLAT           equ	4089	;# 
   386   000FF9                     PC              equ	4089	;# 
   387   000FF9                     PCL             equ	4089	;# 
   388   000FFA                     PCLATH          equ	4090	;# 
   389   000FFB                     PCLATU          equ	4091	;# 
   390   000FFC                     STKPTR          equ	4092	;# 
   391   000FFD                     TOS             equ	4093	;# 
   392   000FFD                     TOSL            equ	4093	;# 
   393   000FFE                     TOSH            equ	4094	;# 
   394   000FFF                     TOSU            equ	4095	;# 
   395   007CF4                     _TXIF           set	31988
   396   007F97                     _GIE            set	32663
   397   007F96                     _PEIE           set	32662
   398   007CED                     _RCIE           set	31981
   399   007CF5                     _RCIF           set	31989
   400   007D5C                     _CREN           set	32092
   401   007D65                     _TXEN           set	32101
   402   007D5F                     _SPEN           set	32095
   403   007D64                     _SYNC           set	32100
   404   007DC3                     _BRG16          set	32195
   405   007D62                     _BRGH           set	32098
   406   007CA7                     _TRISC7         set	31911
   407   007CA6                     _TRISC6         set	31910
   408   000FAE                     _RCREG          set	4014
   409   000FAD                     _TXREG          set	4013
   410   000FAF                     _SPBRG          set	4015
   411   000F8D                     _LATEbits       set	3981
   412   000F89                     _LATAbits       set	3977
   413   000F95                     _TRISDbits      set	3989
   414   000F8B                     _LATCbits       set	3979
   415   000F96                     _TRISEbits      set	3990
   416   000F92                     _TRISAbits      set	3986
   417   000F93                     _TRISBbits      set	3987
   418   000F82                     _PORTCbits      set	3970
   419   000F94                     _TRISCbits      set	3988
   420   000F8A                     _LATBbits       set	3978
   421   000F8C                     _LATD           set	3980
   422                           
   423                           	psect	smallconst
   424   000600                     __psmallconst:
   425                           	callstack 0
   426   000600  00                 	db	0
   427   000601                     STR_29:
   428   000601  45                 	db	69	;'E'
   429   000602  52                 	db	82	;'R'
   430   000603  52                 	db	82	;'R'
   431   000604  4F                 	db	79	;'O'
   432   000605  52                 	db	82	;'R'
   433   000606  3A                 	db	58	;':'
   434   000607  55                 	db	85	;'U'
   435   000608  4E                 	db	78	;'N'
   436   000609  4B                 	db	75	;'K'
   437   00060A  4E                 	db	78	;'N'
   438   00060B  4F                 	db	79	;'O'
   439   00060C  57                 	db	87	;'W'
   440   00060D  4E                 	db	78	;'N'
   441   00060E  5F                 	db	95	;'_'
   442   00060F  43                 	db	67	;'C'
   443   000610  4D                 	db	77	;'M'
   444   000611  44                 	db	68	;'D'
   445   000612  3A                 	db	58	;':'
   446   000613  00                 	db	0
   447   000614                     STR_4:
   448   000614  43                 	db	67	;'C'
   449   000615  4F                 	db	79	;'O'
   450   000616  4E                 	db	78	;'N'
   451   000617  4E                 	db	78	;'N'
   452   000618  5F                 	db	95	;'_'
   453   000619  41                 	db	65	;'A'
   454   00061A  43                 	db	67	;'C'
   455   00061B  4B                 	db	75	;'K'
   456   00061C  0D                 	db	13
   457   00061D  0A                 	db	10
   458   00061E  00                 	db	0
   459   00061F                     STR_25:
   460   00061F  52                 	db	82	;'R'
   461   000620  43                 	db	67	;'C'
   462   000621  3A                 	db	58	;':'
   463   000622  25                 	db	37
   464   000623  30                 	db	48	;'0'
   465   000624  32                 	db	50	;'2'
   466   000625  58                 	db	88	;'X'
   467   000626  0D                 	db	13
   468   000627  0A                 	db	10
   469   000628  00                 	db	0
   470   000629                     STR_1:
   471   000629  52                 	db	82	;'R'
   472   00062A  43                 	db	67	;'C'
   473   00062B  3A                 	db	58	;':'
   474   00062C  25                 	db	37
   475   00062D  30                 	db	48	;'0'
   476   00062E  34                 	db	52	;'4'
   477   00062F  58                 	db	88	;'X'
   478   000630  0D                 	db	13
   479   000631  0A                 	db	10
   480   000632  00                 	db	0
   481   000633                     STR_17:
   482   000633  53                 	db	83	;'S'
   483   000634  48                 	db	72	;'H'
   484   000635  4F                 	db	79	;'O'
   485   000636  57                 	db	87	;'W'
   486   000637  5F                 	db	95	;'_'
   487   000638  30                 	db	48	;'0'
   488   000639  30                 	db	48	;'0'
   489   00063A  30                 	db	48	;'0'
   490   00063B  00                 	db	0
   491   00063C                     STR_5:
   492   00063C  53                 	db	83	;'S'
   493   00063D  48                 	db	72	;'H'
   494   00063E  4F                 	db	79	;'O'
   495   00063F  57                 	db	87	;'W'
   496   000640  5F                 	db	95	;'_'
   497   000641  30                 	db	48	;'0'
   498   000642  30                 	db	48	;'0'
   499   000643  31                 	db	49	;'1'
   500   000644  00                 	db	0
   501   000645                     STR_7:
   502   000645  53                 	db	83	;'S'
   503   000646  48                 	db	72	;'H'
   504   000647  4F                 	db	79	;'O'
   505   000648  57                 	db	87	;'W'
   506   000649  5F                 	db	95	;'_'
   507   00064A  30                 	db	48	;'0'
   508   00064B  30                 	db	48	;'0'
   509   00064C  32                 	db	50	;'2'
   510   00064D  00                 	db	0
   511   00064E                     STR_9:
   512   00064E  53                 	db	83	;'S'
   513   00064F  48                 	db	72	;'H'
   514   000650  4F                 	db	79	;'O'
   515   000651  57                 	db	87	;'W'
   516   000652  5F                 	db	95	;'_'
   517   000653  30                 	db	48	;'0'
   518   000654  30                 	db	48	;'0'
   519   000655  33                 	db	51	;'3'
   520   000656  00                 	db	0
   521   000657                     STR_11:
   522   000657  53                 	db	83	;'S'
   523   000658  48                 	db	72	;'H'
   524   000659  4F                 	db	79	;'O'
   525   00065A  57                 	db	87	;'W'
   526   00065B  5F                 	db	95	;'_'
   527   00065C  30                 	db	48	;'0'
   528   00065D  30                 	db	48	;'0'
   529   00065E  34                 	db	52	;'4'
   530   00065F  00                 	db	0
   531   000660                     STR_13:
   532   000660  53                 	db	83	;'S'
   533   000661  48                 	db	72	;'H'
   534   000662  4F                 	db	79	;'O'
   535   000663  57                 	db	87	;'W'
   536   000664  5F                 	db	95	;'_'
   537   000665  30                 	db	48	;'0'
   538   000666  30                 	db	48	;'0'
   539   000667  35                 	db	53	;'5'
   540   000668  00                 	db	0
   541   000669                     STR_26:
   542   000669  53                 	db	83	;'S'
   543   00066A  45                 	db	69	;'E'
   544   00066B  54                 	db	84	;'T'
   545   00066C  30                 	db	48	;'0'
   546   00066D  5F                 	db	95	;'_'
   547   00066E  52                 	db	82	;'R'
   548   00066F  43                 	db	67	;'C'
   549   000670  35                 	db	53	;'5'
   550   000671  00                 	db	0
   551   000672                     STR_23:
   552   000672  53                 	db	83	;'S'
   553   000673  45                 	db	69	;'E'
   554   000674  54                 	db	84	;'T'
   555   000675  31                 	db	49	;'1'
   556   000676  5F                 	db	95	;'_'
   557   000677  52                 	db	82	;'R'
   558   000678  43                 	db	67	;'C'
   559   000679  35                 	db	53	;'5'
   560   00067A  00                 	db	0
   561   00067B                     STR_15:
   562   00067B  53                 	db	83	;'S'
   563   00067C  48                 	db	72	;'H'
   564   00067D  4F                 	db	79	;'O'
   565   00067E  57                 	db	87	;'W'
   566   00067F  5F                 	db	95	;'_'
   567   000680  30                 	db	48	;'0'
   568   000681  30                 	db	48	;'0'
   569   000682  36                 	db	54	;'6'
   570   000683  00                 	db	0
   571   000684                     STR_19:
   572   000684  52                 	db	82	;'R'
   573   000685  45                 	db	69	;'E'
   574   000686  41                 	db	65	;'A'
   575   000687  44                 	db	68	;'D'
   576   000688  5F                 	db	95	;'_'
   577   000689  50                 	db	80	;'P'
   578   00068A  49                 	db	73	;'I'
   579   00068B  4E                 	db	78	;'N'
   580   00068C  00                 	db	0
   581   00068D                     STR_21:
   582   00068D  53                 	db	83	;'S'
   583   00068E  54                 	db	84	;'T'
   584   00068F  4F                 	db	79	;'O'
   585   000690  50                 	db	80	;'P'
   586   000691  5F                 	db	95	;'_'
   587   000692  50                 	db	80	;'P'
   588   000693  49                 	db	73	;'I'
   589   000694  4E                 	db	78	;'N'
   590   000695  00                 	db	0
   591   000696                     STR_2:
   592   000696  43                 	db	67	;'C'
   593   000697  4F                 	db	79	;'O'
   594   000698  4E                 	db	78	;'N'
   595   000699  4E                 	db	78	;'N'
   596   00069A  5F                 	db	95	;'_'
   597   00069B  52                 	db	82	;'R'
   598   00069C  45                 	db	69	;'E'
   599   00069D  51                 	db	81	;'Q'
   600   00069E  00                 	db	0
   601   000696                     STR_3           equ	STR_2
   602   00068D                     STR_22          equ	STR_21
   603   000684                     STR_20          equ	STR_19
   604   00067B                     STR_16          equ	STR_15
   605   000672                     STR_24          equ	STR_23
   606   000669                     STR_27          equ	STR_26
   607   000660                     STR_14          equ	STR_13
   608   000657                     STR_12          equ	STR_11
   609   00064E                     STR_10          equ	STR_9
   610   000645                     STR_8           equ	STR_7
   611   00063C                     STR_6           equ	STR_5
   612   000633                     STR_18          equ	STR_17
   613   00061F                     STR_28          equ	STR_25
   614   00061C                     STR_30          equ	STR_4+8
   615   00069F  00                 	db	0	; dummy byte at the end
   616   000600                     __smallconst    set	__psmallconst
   617   000600                     __mediumconst   set	__psmallconst
   618   000002                     __activetblptr  equ	2
   619                           
   620                           ; #config settings
   621                           
   622                           	psect	cinit
   623   001464                     __pcinit:
   624                           	callstack 0
   625   001464                     start_initialization:
   626                           	callstack 0
   627   001464                     __initialization:
   628                           	callstack 0
   629                           
   630                           ; Clear objects allocated to BANK0 (70 bytes)
   631   001464  EE00  F080         	lfsr	0,__pbssBANK0
   632   001468  0E46               	movlw	70
   633   00146A                     clear_0:
   634   00146A  6AEE               	clrf	postinc0,c
   635   00146C  06E8               	decf	wreg,f,c
   636   00146E  E1FD               	bnz	clear_0
   637                           
   638                           ; Clear objects allocated to COMRAM (19 bytes)
   639   001470  EE00  F063         	lfsr	0,__pbssCOMRAM
   640   001474  0E13               	movlw	19
   641   001476                     clear_1:
   642   001476  6AEE               	clrf	postinc0,c
   643   001478  06E8               	decf	wreg,f,c
   644   00147A  E1FD               	bnz	clear_1
   645   00147C                     end_of_initialization:
   646                           	callstack 0
   647   00147C                     __end_of__initialization:
   648                           	callstack 0
   649   00147C  9076               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   650   00147E  9276               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   651   001480  0E00               	movlw	low (__Lmediumconst shr (0+16))
   652   001482  6EF8               	movwf	tblptru,c
   653   001484  0100               	movlb	0
   654   001486  EF50  F003         	goto	_main	;jump to C main() function
   655                           
   656                           	psect	bssCOMRAM
   657   000063                     __pbssCOMRAM:
   658                           	callstack 0
   659   000063                     _width:
   660                           	callstack 0
   661   000063                     	ds	2
   662   000065                     _prec:
   663                           	callstack 0
   664   000065                     	ds	2
   665   000067                     _flags:
   666                           	callstack 0
   667   000067                     	ds	1
   668   000068                     _GREEN_KEY_BYTE:
   669                           	callstack 0
   670   000068                     	ds	1
   671   000069                     _RED_KEY_BYTE:
   672                           	callstack 0
   673   000069                     	ds	1
   674   00006A                     _uart_rx_index:
   675                           	callstack 0
   676   00006A                     	ds	1
   677   00006B                     _uart_frame_ready:
   678                           	callstack 0
   679   00006B                     	ds	1
   680   00006C                     _uart_rx_buffer:
   681                           	callstack 0
   682   00006C                     	ds	10
   683                           
   684                           	psect	bssBANK0
   685   000080                     __pbssBANK0:
   686                           	callstack 0
   687   000080                     _buffer:
   688                           	callstack 0
   689   000080                     	ds	20
   690   000094                     _green_str:
   691                           	callstack 0
   692   000094                     	ds	9
   693   00009D                     _red_str:
   694                           	callstack 0
   695   00009D                     	ds	9
   696   0000A6                     _dbuf:
   697                           	callstack 0
   698   0000A6                     	ds	32
   699                           
   700                           	psect	cstackCOMRAM
   701   000001                     __pcstackCOMRAM:
   702                           	callstack 0
   703   000001                     ??_ISR:
   704                           
   705                           ; 1 bytes @ 0x0
   706   000001                     	ds	2
   707   000003                     ISR@received:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x2
   711   000003                     	ds	1
   712   000004                     ?_strchr:
   713                           	callstack 0
   714   000004                     ?_strlen:
   715                           	callstack 0
   716   000004                     ?_strncmp:
   717                           	callstack 0
   718   000004                     ?_get_key_value:
   719                           	callstack 0
   720   000004                     ?_read_prec_or_width:
   721                           	callstack 0
   722   000004                     latch_data@seg_data:
   723                           	callstack 0
   724   000004                     read_spi_inputs@rc3:
   725                           	callstack 0
   726   000004                     UART_SendChar@ch:
   727                           	callstack 0
   728   000004                     read_prec_or_width@fmt:
   729                           	callstack 0
   730   000004                     strchr@s:
   731                           	callstack 0
   732   000004                     strlen@s:
   733                           	callstack 0
   734   000004                     strncmp@l:
   735                           	callstack 0
   736   000004                     delay_ms@ms:
   737                           	callstack 0
   738   000004                     fputc@c:
   739                           	callstack 0
   740   000004                     ??_read_key_inputs:
   741   000004                     
   742                           ; 1 bytes @ 0x3
   743   000004                     	ds	1
   744   000005                     read_spi_inputs@rc4:
   745                           	callstack 0
   746   000005                     read_key_inputs@result:
   747                           	callstack 0
   748   000005                     SelectIO@index:
   749                           	callstack 0
   750   000005                     read_prec_or_width@ap:
   751                           	callstack 0
   752   000005                     strncmp@r:
   753                           	callstack 0
   754   000005                     UART_SendString@str:
   755                           	callstack 0
   756   000005                     strchr@c:
   757                           	callstack 0
   758   000005                     
   759                           ; 1 bytes @ 0x4
   760   000005                     	ds	1
   761   000006                     read_spi_inputs@result:
   762                           	callstack 0
   763   000006                     fputc@fp:
   764                           	callstack 0
   765   000006                     strlen@a:
   766                           	callstack 0
   767   000006                     strncmp@n:
   768                           	callstack 0
   769   000006                     ??_delay_ms:
   770   000006                     ??_get_key_value:
   771   000006                     ??_read_prec_or_width:
   772                           
   773                           ; 1 bytes @ 0x5
   774   000006                     	ds	1
   775   000007                     ??_fputc:
   776   000007                     
   777                           ; 1 bytes @ 0x6
   778   000007                     	ds	1
   779   000008                     read_prec_or_width@c:
   780                           	callstack 0
   781   000008                     ??_strncmp:
   782                           
   783                           ; 1 bytes @ 0x7
   784   000008                     	ds	1
   785   000009                     ?_strstr:
   786                           	callstack 0
   787   000009                     strstr@h:
   788                           	callstack 0
   789   000009                     read_prec_or_width@n:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x8
   793   000009                     	ds	1
   794   00000A                     strstr@n:
   795                           	callstack 0
   796                           
   797                           ; 1 bytes @ 0x9
   798   00000A                     	ds	1
   799   00000B                     strstr@nl:
   800                           	callstack 0
   801   00000B                     
   802                           ; 1 bytes @ 0xA
   803   00000B                     	ds	1
   804   00000C                     fputs@s:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0xB
   808   00000C                     	ds	1
   809   00000D                     fputs@fp:
   810                           	callstack 0
   811                           
   812                           ; 1 bytes @ 0xC
   813   00000D                     	ds	1
   814   00000E                     fputs@c:
   815                           	callstack 0
   816   00000E                     
   817                           ; 1 bytes @ 0xD
   818   00000E                     	ds	1
   819   00000F                     fputs@i:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0xE
   823   00000F                     	ds	2
   824   000011                     pad@fp:
   825                           	callstack 0
   826                           
   827                           ; 1 bytes @ 0x10
   828   000011                     	ds	1
   829   000012                     pad@buf:
   830                           	callstack 0
   831                           
   832                           ; 1 bytes @ 0x11
   833   000012                     	ds	1
   834   000013                     pad@p:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x12
   838   000013                     	ds	2
   839   000015                     ??_pad:
   840                           
   841                           ; 1 bytes @ 0x14
   842   000015                     	ds	1
   843   000016                     pad@i:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x15
   847   000016                     	ds	2
   848   000018                     xtoa@fp:
   849                           	callstack 0
   850                           
   851                           ; 1 bytes @ 0x17
   852   000018                     	ds	1
   853   000019                     xtoa@d:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x18
   857   000019                     	ds	2
   858   00001B                     ??_xtoa:
   859                           
   860                           ; 1 bytes @ 0x1A
   861   00001B                     	ds	3
   862   00001E                     xtoa@p:
   863                           	callstack 0
   864                           
   865                           ; 1 bytes @ 0x1D
   866   00001E                     	ds	1
   867   00001F                     xtoa@w:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x1E
   871   00001F                     	ds	2
   872   000021                     xtoa@c:
   873                           	callstack 0
   874                           
   875                           ; 1 bytes @ 0x20
   876   000021                     	ds	1
   877   000022                     xtoa@i:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x21
   881   000022                     	ds	2
   882   000024                     vfpfcnvrt@fp:
   883                           	callstack 0
   884                           
   885                           ; 1 bytes @ 0x23
   886   000024                     	ds	1
   887   000025                     vfpfcnvrt@fmt:
   888                           	callstack 0
   889                           
   890                           ; 1 bytes @ 0x24
   891   000025                     	ds	1
   892   000026                     vfpfcnvrt@ap:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0x25
   896   000026                     	ds	1
   897   000027                     vfpfcnvrt@convarg:
   898                           	callstack 0
   899   000027                     
   900                           ; 1 bytes @ 0x26
   901   000027                     	ds	4
   902   00002B                     vfpfcnvrt@done:
   903                           	callstack 0
   904                           
   905                           ; 1 bytes @ 0x2A
   906   00002B                     	ds	1
   907   00002C                     vfpfcnvrt@cp:
   908                           	callstack 0
   909                           
   910                           ; 1 bytes @ 0x2B
   911   00002C                     	ds	1
   912   00002D                     ?_vfprintf:
   913                           	callstack 0
   914   00002D                     vfprintf@fp:
   915                           	callstack 0
   916                           
   917                           ; 1 bytes @ 0x2C
   918   00002D                     	ds	1
   919   00002E                     vfprintf@fmt:
   920                           	callstack 0
   921                           
   922                           ; 1 bytes @ 0x2D
   923   00002E                     	ds	1
   924   00002F                     vfprintf@ap:
   925                           	callstack 0
   926                           
   927                           ; 1 bytes @ 0x2E
   928   00002F                     	ds	1
   929   000030                     vfprintf@cfmt:
   930                           	callstack 0
   931   000030                     
   932                           ; 1 bytes @ 0x2F
   933   000030                     	ds	1
   934   000031                     ?_sprintf:
   935                           	callstack 0
   936   000031                     sprintf@s:
   937                           	callstack 0
   938                           
   939                           ; 1 bytes @ 0x30
   940   000031                     	ds	1
   941   000032                     sprintf@fmt:
   942                           	callstack 0
   943                           
   944                           ; 1 bytes @ 0x31
   945   000032                     	ds	3
   946   000035                     sprintf@ap:
   947                           	callstack 0
   948   000035                     
   949                           ; 1 bytes @ 0x34
   950   000035                     	ds	1
   951   000036                     sprintf@f:
   952                           	callstack 0
   953                           
   954                           ; 11 bytes @ 0x35
   955   000036                     	ds	11
   956   000041                     scan_usr_key@xbuffer:
   957                           	callstack 0
   958   000041                     
   959                           ; 1 bytes @ 0x40
   960   000041                     	ds	10
   961   00004B                     scan_usr_key@retx:
   962                           	callstack 0
   963                           
   964                           ; 1 bytes @ 0x4A
   965   00004B                     	ds	1
   966   00004C                     ??_main:
   967                           
   968                           ; 1 bytes @ 0x4B
   969   00004C                     	ds	1
   970   00004D                     main@xbuffer:
   971                           	callstack 0
   972                           
   973                           ; 10 bytes @ 0x4C
   974   00004D                     	ds	10
   975   000057                     main@xbuffer_606:
   976                           	callstack 0
   977                           
   978                           ; 10 bytes @ 0x56
   979   000057                     	ds	10
   980   000061                     main@read_pin_cmd:
   981                           	callstack 0
   982                           
   983                           ; 1 bytes @ 0x60
   984   000061                     	ds	1
   985   000062                     main@i:
   986                           	callstack 0
   987                           
   988                           ; 1 bytes @ 0x61
   989   000062                     	ds	1
   990                           
   991 ;;
   992 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   993 ;;
   994 ;; *************** function _main *****************
   995 ;; Defined at:
   996 ;;		line 351 in file "main.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;		None
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;  i               1   97[COMRAM] unsigned char 
  1001 ;;  xbuffer        10   86[COMRAM] unsigned char [10]
  1002 ;;  xbuffer        10   76[COMRAM] unsigned char [10]
  1003 ;;  read_pin_cmd    1   96[COMRAM] unsigned char 
  1004 ;;  read_spi_cmd    1    0        unsigned char 
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1014 ;;      Params:         0       0       0       0       0       0       0
  1015 ;;      Locals:        22       0       0       0       0       0       0
  1016 ;;      Temps:          1       0       0       0       0       0       0
  1017 ;;      Totals:        23       0       0       0       0       0       0
  1018 ;;Total ram usage:       23 bytes
  1019 ;; Hardware stack levels required when called: 10
  1020 ;; This function calls:
  1021 ;;		_SelectIO
  1022 ;;		_UART_Init
  1023 ;;		_UART_SendChar
  1024 ;;		_UART_SendString
  1025 ;;		_delay_ms
  1026 ;;		_init_ports
  1027 ;;		_latch_data
  1028 ;;		_read_spi_inputs
  1029 ;;		_reset_usr_key_value
  1030 ;;		_scan_usr_key
  1031 ;;		_sprintf
  1032 ;;		_strstr
  1033 ;; This function is called by:
  1034 ;;		Startup code after reset
  1035 ;; This function uses a non-reentrant model
  1036 ;;
  1037                           
  1038                           	psect	text0
  1039   0006A0                     __ptext0:
  1040                           	callstack 0
  1041   0006A0                     _main:
  1042                           	callstack 21
  1043   0006A0                     
  1044                           ;main.c: 353:     delay_ms(500);
  1045   0006A0  0E01               	movlw	1
  1046   0006A2  6E05               	movwf	(delay_ms@ms+1)^0,c
  1047   0006A4  0EF4               	movlw	244
  1048   0006A6  6E04               	movwf	delay_ms@ms^0,c
  1049   0006A8  EC04  F00A         	call	_delay_ms	;wreg free
  1050   0006AC                     
  1051                           ;main.c: 355:     UART_Init();
  1052   0006AC  EC55  F00A         	call	_UART_Init	;wreg free
  1053   0006B0                     
  1054                           ;main.c: 357:     init_ports();
  1055   0006B0  EC1B  F00A         	call	_init_ports	;wreg free
  1056   0006B4                     
  1057                           ;main.c: 359:     SelectIO(0);
  1058   0006B4  0E00               	movlw	0
  1059   0006B6  ECB6  F008         	call	_SelectIO
  1060   0006BA                     
  1061                           ;main.c: 360:     latch_data(0x00);
  1062   0006BA  0E00               	movlw	0
  1063   0006BC  EC64  F00A         	call	_latch_data
  1064   0006C0                     
  1065                           ;main.c: 362:     reset_usr_key_value();
  1066   0006C0  EC90  F00A         	call	_reset_usr_key_value	;wreg free
  1067   0006C4                     
  1068                           ;main.c: 363:     uint8_t read_pin_cmd = 0;
  1069   0006C4  6A61               	clrf	main@read_pin_cmd^0,c
  1070   0006C6                     l2191:
  1071                           
  1072                           ;main.c: 367:     {;main.c: 368:         if (uart_frame_ready)
  1073   0006C6  506B               	movf	_uart_frame_ready^0,w,c	;volatile
  1074   0006C8  B4D8               	btfsc	status,2,c
  1075   0006CA  EF69  F003         	goto	u1321
  1076   0006CE  EF6B  F003         	goto	u1320
  1077   0006D2                     u1321:
  1078   0006D2  EF9C  F004         	goto	l2283
  1079   0006D6                     u1320:
  1080   0006D6                     
  1081                           ;main.c: 369:         {;main.c: 370:             uart_frame_ready = 0;
  1082   0006D6  6A6B               	clrf	_uart_frame_ready^0,c	;volatile
  1083   0006D8                     
  1084                           ;main.c: 372:             if (strstr((char*)uart_rx_buffer, "CONN_REQ"))
  1085   0006D8  0E6C               	movlw	low _uart_rx_buffer
  1086   0006DA  6E09               	movwf	strstr@h^0,c
  1087   0006DC  0E96               	movlw	low STR_2
  1088   0006DE  6E0A               	movwf	strstr@n^0,c
  1089   0006E0  EC27  F008         	call	_strstr	;wreg free
  1090   0006E4  0900               	iorlw	0
  1091   0006E6  B4D8               	btfsc	status,2,c
  1092   0006E8  EF78  F003         	goto	u1331
  1093   0006EC  EF7A  F003         	goto	u1330
  1094   0006F0                     u1331:
  1095   0006F0  EF84  F003         	goto	l2199
  1096   0006F4                     u1330:
  1097   0006F4                     
  1098                           ;main.c: 373:             {;main.c: 374:                 UART_SendString("CONN_ACK\r\n")
      +                          ;
  1099   0006F4  0E14               	movlw	low STR_4
  1100   0006F6  6E05               	movwf	UART_SendString@str^0,c
  1101   0006F8  5005               	movf	UART_SendString@str^0,w,c
  1102   0006FA  A4D8               	btfss	status,2,c
  1103   0006FC  0E06               	movlw	high __smallconst
  1104   0006FE  6E06               	movwf	(UART_SendString@str+1)^0,c
  1105   000700  ECF0  F008         	call	_UART_SendString	;wreg free
  1106                           
  1107                           ;main.c: 375:             }
  1108   000704  EF9B  F004         	goto	l2281
  1109   000708                     l2199:
  1110   000708  0E6C               	movlw	low _uart_rx_buffer
  1111   00070A  6E09               	movwf	strstr@h^0,c
  1112   00070C  0E3C               	movlw	low STR_5
  1113   00070E  6E0A               	movwf	strstr@n^0,c
  1114   000710  EC27  F008         	call	_strstr	;wreg free
  1115   000714  0900               	iorlw	0
  1116   000716  B4D8               	btfsc	status,2,c
  1117   000718  EF90  F003         	goto	u1341
  1118   00071C  EF92  F003         	goto	u1340
  1119   000720                     u1341:
  1120   000720  EF97  F003         	goto	l2203
  1121   000724                     u1340:
  1122   000724                     
  1123                           ;main.c: 377:             {;main.c: 379:                 SelectIO(1);
  1124   000724  0E01               	movlw	1
  1125   000726  ECB6  F008         	call	_SelectIO
  1126                           
  1127                           ;main.c: 380:             }
  1128   00072A  EF9B  F004         	goto	l2281
  1129   00072E                     l2203:
  1130   00072E  0E6C               	movlw	low _uart_rx_buffer
  1131   000730  6E09               	movwf	strstr@h^0,c
  1132   000732  0E45               	movlw	low STR_7
  1133   000734  6E0A               	movwf	strstr@n^0,c
  1134   000736  EC27  F008         	call	_strstr	;wreg free
  1135   00073A  0900               	iorlw	0
  1136   00073C  B4D8               	btfsc	status,2,c
  1137   00073E  EFA3  F003         	goto	u1351
  1138   000742  EFA5  F003         	goto	u1350
  1139   000746                     u1351:
  1140   000746  EFAA  F003         	goto	l2207
  1141   00074A                     u1350:
  1142   00074A                     
  1143                           ;main.c: 382:             {;main.c: 384:                 SelectIO(2);
  1144   00074A  0E02               	movlw	2
  1145   00074C  ECB6  F008         	call	_SelectIO
  1146                           
  1147                           ;main.c: 385:             }
  1148   000750  EF9B  F004         	goto	l2281
  1149   000754                     l2207:
  1150   000754  0E6C               	movlw	low _uart_rx_buffer
  1151   000756  6E09               	movwf	strstr@h^0,c
  1152   000758  0E4E               	movlw	low STR_9
  1153   00075A  6E0A               	movwf	strstr@n^0,c
  1154   00075C  EC27  F008         	call	_strstr	;wreg free
  1155   000760  0900               	iorlw	0
  1156   000762  B4D8               	btfsc	status,2,c
  1157   000764  EFB6  F003         	goto	u1361
  1158   000768  EFB8  F003         	goto	u1360
  1159   00076C                     u1361:
  1160   00076C  EFBD  F003         	goto	l2211
  1161   000770                     u1360:
  1162   000770                     
  1163                           ;main.c: 387:             {;main.c: 389:                 SelectIO(3);
  1164   000770  0E03               	movlw	3
  1165   000772  ECB6  F008         	call	_SelectIO
  1166                           
  1167                           ;main.c: 390:             }
  1168   000776  EF9B  F004         	goto	l2281
  1169   00077A                     l2211:
  1170   00077A  0E6C               	movlw	low _uart_rx_buffer
  1171   00077C  6E09               	movwf	strstr@h^0,c
  1172   00077E  0E57               	movlw	low STR_11
  1173   000780  6E0A               	movwf	strstr@n^0,c
  1174   000782  EC27  F008         	call	_strstr	;wreg free
  1175   000786  0900               	iorlw	0
  1176   000788  B4D8               	btfsc	status,2,c
  1177   00078A  EFC9  F003         	goto	u1371
  1178   00078E  EFCB  F003         	goto	u1370
  1179   000792                     u1371:
  1180   000792  EFD0  F003         	goto	l2215
  1181   000796                     u1370:
  1182   000796                     
  1183                           ;main.c: 392:             {;main.c: 394:                 SelectIO(4);
  1184   000796  0E04               	movlw	4
  1185   000798  ECB6  F008         	call	_SelectIO
  1186                           
  1187                           ;main.c: 395:             }
  1188   00079C  EF9B  F004         	goto	l2281
  1189   0007A0                     l2215:
  1190   0007A0  0E6C               	movlw	low _uart_rx_buffer
  1191   0007A2  6E09               	movwf	strstr@h^0,c
  1192   0007A4  0E60               	movlw	low STR_13
  1193   0007A6  6E0A               	movwf	strstr@n^0,c
  1194   0007A8  EC27  F008         	call	_strstr	;wreg free
  1195   0007AC  0900               	iorlw	0
  1196   0007AE  B4D8               	btfsc	status,2,c
  1197   0007B0  EFDC  F003         	goto	u1381
  1198   0007B4  EFDE  F003         	goto	u1380
  1199   0007B8                     u1381:
  1200   0007B8  EFE3  F003         	goto	l2219
  1201   0007BC                     u1380:
  1202   0007BC                     
  1203                           ;main.c: 397:             {;main.c: 399:                 SelectIO(5);
  1204   0007BC  0E05               	movlw	5
  1205   0007BE  ECB6  F008         	call	_SelectIO
  1206                           
  1207                           ;main.c: 400:             }
  1208   0007C2  EF9B  F004         	goto	l2281
  1209   0007C6                     l2219:
  1210   0007C6  0E6C               	movlw	low _uart_rx_buffer
  1211   0007C8  6E09               	movwf	strstr@h^0,c
  1212   0007CA  0E7B               	movlw	low STR_15
  1213   0007CC  6E0A               	movwf	strstr@n^0,c
  1214   0007CE  EC27  F008         	call	_strstr	;wreg free
  1215   0007D2  0900               	iorlw	0
  1216   0007D4  B4D8               	btfsc	status,2,c
  1217   0007D6  EFEF  F003         	goto	u1391
  1218   0007DA  EFF1  F003         	goto	u1390
  1219   0007DE                     u1391:
  1220   0007DE  EFF6  F003         	goto	l2223
  1221   0007E2                     u1390:
  1222   0007E2                     
  1223                           ;main.c: 402:             {;main.c: 404:                 SelectIO(6);
  1224   0007E2  0E06               	movlw	6
  1225   0007E4  ECB6  F008         	call	_SelectIO
  1226                           
  1227                           ;main.c: 405:             }
  1228   0007E8  EF9B  F004         	goto	l2281
  1229   0007EC                     l2223:
  1230   0007EC  0E6C               	movlw	low _uart_rx_buffer
  1231   0007EE  6E09               	movwf	strstr@h^0,c
  1232   0007F0  0E33               	movlw	low STR_17
  1233   0007F2  6E0A               	movwf	strstr@n^0,c
  1234   0007F4  EC27  F008         	call	_strstr	;wreg free
  1235   0007F8  0900               	iorlw	0
  1236   0007FA  B4D8               	btfsc	status,2,c
  1237   0007FC  EF02  F004         	goto	u1401
  1238   000800  EF04  F004         	goto	u1400
  1239   000804                     u1401:
  1240   000804  EF09  F004         	goto	l2227
  1241   000808                     u1400:
  1242   000808                     
  1243                           ;main.c: 407:             {;main.c: 409:                 SelectIO(0);
  1244   000808  0E00               	movlw	0
  1245   00080A  ECB6  F008         	call	_SelectIO
  1246                           
  1247                           ;main.c: 410:             }
  1248   00080E  EF9B  F004         	goto	l2281
  1249   000812                     l2227:
  1250   000812  0E6C               	movlw	low _uart_rx_buffer
  1251   000814  6E09               	movwf	strstr@h^0,c
  1252   000816  0E84               	movlw	low STR_19
  1253   000818  6E0A               	movwf	strstr@n^0,c
  1254   00081A  EC27  F008         	call	_strstr	;wreg free
  1255   00081E  0900               	iorlw	0
  1256   000820  B4D8               	btfsc	status,2,c
  1257   000822  EF15  F004         	goto	u1411
  1258   000826  EF17  F004         	goto	u1410
  1259   00082A                     u1411:
  1260   00082A  EF1B  F004         	goto	l2231
  1261   00082E                     u1410:
  1262   00082E                     
  1263                           ;main.c: 412:             {;main.c: 413:                 read_pin_cmd = 1;
  1264   00082E  0E01               	movlw	1
  1265   000830  6E61               	movwf	main@read_pin_cmd^0,c
  1266                           
  1267                           ;main.c: 414:             }
  1268   000832  EF9B  F004         	goto	l2281
  1269   000836                     l2231:
  1270   000836  0E6C               	movlw	low _uart_rx_buffer
  1271   000838  6E09               	movwf	strstr@h^0,c
  1272   00083A  0E8D               	movlw	low STR_21
  1273   00083C  6E0A               	movwf	strstr@n^0,c
  1274   00083E  EC27  F008         	call	_strstr	;wreg free
  1275   000842  0900               	iorlw	0
  1276   000844  B4D8               	btfsc	status,2,c
  1277   000846  EF27  F004         	goto	u1421
  1278   00084A  EF29  F004         	goto	u1420
  1279   00084E                     u1421:
  1280   00084E  EF34  F004         	goto	l2249
  1281   000852                     u1420:
  1282   000852                     
  1283                           ;main.c: 416:             {;main.c: 417:                 reset_usr_key_value();
  1284   000852  EC90  F00A         	call	_reset_usr_key_value	;wreg free
  1285   000856                     
  1286                           ;main.c: 418:                 read_pin_cmd = 0;
  1287   000856  6A61               	clrf	main@read_pin_cmd^0,c
  1288   000858                     
  1289                           ;main.c: 419:                 LATAbits.LATA0 = 0;
  1290   000858  9089               	bcf	137,0,c	;volatile
  1291   00085A                     
  1292                           ;main.c: 420:                 LATAbits.LATA1 = 0;
  1293   00085A  9289               	bcf	137,1,c	;volatile
  1294   00085C                     
  1295                           ;main.c: 421:                 LATAbits.LATA2 = 0;
  1296   00085C  9489               	bcf	137,2,c	;volatile
  1297   00085E                     
  1298                           ;main.c: 422:                 LATAbits.LATA3 = 0;
  1299   00085E  9689               	bcf	137,3,c	;volatile
  1300   000860                     
  1301                           ;main.c: 423:                 LATEbits.LATE0 = 0;
  1302   000860  908D               	bcf	141,0,c	;volatile
  1303   000862                     
  1304                           ;main.c: 424:                 LATAbits.LATA5 = 0;
  1305   000862  9A89               	bcf	137,5,c	;volatile
  1306                           
  1307                           ;main.c: 425:             }
  1308   000864  EF9B  F004         	goto	l2281
  1309   000868                     l2249:
  1310   000868  0E6C               	movlw	low _uart_rx_buffer
  1311   00086A  6E09               	movwf	strstr@h^0,c
  1312   00086C  0E72               	movlw	low STR_23
  1313   00086E  6E0A               	movwf	strstr@n^0,c
  1314   000870  EC27  F008         	call	_strstr	;wreg free
  1315   000874  0900               	iorlw	0
  1316   000876  B4D8               	btfsc	status,2,c
  1317   000878  EF40  F004         	goto	u1431
  1318   00087C  EF42  F004         	goto	u1430
  1319   000880                     u1431:
  1320   000880  EF57  F004         	goto	l2257
  1321   000884                     u1430:
  1322   000884                     
  1323                           ;main.c: 427:             {;main.c: 428:                 LATBbits.LATB0 = 0;
  1324   000884  908A               	bcf	138,0,c	;volatile
  1325                           
  1326                           ;main.c: 429:                 LATCbits.LATC5 = 0;
  1327   000886  9A8B               	bcf	139,5,c	;volatile
  1328   000888                     
  1329                           ;main.c: 430:                 char xbuffer[10];;main.c: 431:                 sprintf(xbu
      +                          ffer, "RC:%02X\r\n", read_spi_inputs());
  1330   000888  0E4D               	movlw	low main@xbuffer
  1331   00088A  6E31               	movwf	sprintf@s^0,c
  1332   00088C  0E1F               	movlw	low STR_25
  1333   00088E  6E32               	movwf	sprintf@fmt^0,c
  1334   000890  EC45  F00A         	call	_read_spi_inputs	;wreg free
  1335   000894  6E4C               	movwf	??_main^0,c
  1336   000896  504C               	movf	??_main^0,w,c
  1337   000898  6E33               	movwf	(?_sprintf+2)^0,c
  1338   00089A  6A34               	clrf	(?_sprintf+3)^0,c
  1339   00089C  ECEA  F009         	call	_sprintf	;wreg free
  1340   0008A0                     
  1341                           ;main.c: 432:                 UART_SendString(xbuffer);
  1342   0008A0  0E4D               	movlw	low main@xbuffer
  1343   0008A2  6E05               	movwf	UART_SendString@str^0,c
  1344   0008A4  6A06               	clrf	(UART_SendString@str+1)^0,c
  1345   0008A6  ECF0  F008         	call	_UART_SendString	;wreg free
  1346                           
  1347                           ;main.c: 433:             }
  1348   0008AA  EF9B  F004         	goto	l2281
  1349   0008AE                     l2257:
  1350   0008AE  0E6C               	movlw	low _uart_rx_buffer
  1351   0008B0  6E09               	movwf	strstr@h^0,c
  1352   0008B2  0E69               	movlw	low STR_26
  1353   0008B4  6E0A               	movwf	strstr@n^0,c
  1354   0008B6  EC27  F008         	call	_strstr	;wreg free
  1355   0008BA  0900               	iorlw	0
  1356   0008BC  B4D8               	btfsc	status,2,c
  1357   0008BE  EF63  F004         	goto	u1441
  1358   0008C2  EF65  F004         	goto	u1440
  1359   0008C6                     u1441:
  1360   0008C6  EF7A  F004         	goto	l2265
  1361   0008CA                     u1440:
  1362   0008CA                     
  1363                           ;main.c: 435:             {;main.c: 436:                 LATBbits.LATB0 = 0;
  1364   0008CA  908A               	bcf	138,0,c	;volatile
  1365                           
  1366                           ;main.c: 437:                 LATCbits.LATC5 = 1;
  1367   0008CC  8A8B               	bsf	139,5,c	;volatile
  1368   0008CE                     
  1369                           ;main.c: 438:                 char xbuffer[10];;main.c: 439:                 sprintf(xbu
      +                          ffer, "RC:%02X\r\n", read_spi_inputs());
  1370   0008CE  0E57               	movlw	low main@xbuffer_606
  1371   0008D0  6E31               	movwf	sprintf@s^0,c
  1372   0008D2  0E1F               	movlw	low STR_25
  1373   0008D4  6E32               	movwf	sprintf@fmt^0,c
  1374   0008D6  EC45  F00A         	call	_read_spi_inputs	;wreg free
  1375   0008DA  6E4C               	movwf	??_main^0,c
  1376   0008DC  504C               	movf	??_main^0,w,c
  1377   0008DE  6E33               	movwf	(?_sprintf+2)^0,c
  1378   0008E0  6A34               	clrf	(?_sprintf+3)^0,c
  1379   0008E2  ECEA  F009         	call	_sprintf	;wreg free
  1380   0008E6                     
  1381                           ;main.c: 440:                 UART_SendString(xbuffer);
  1382   0008E6  0E57               	movlw	low main@xbuffer_606
  1383   0008E8  6E05               	movwf	UART_SendString@str^0,c
  1384   0008EA  6A06               	clrf	(UART_SendString@str+1)^0,c
  1385   0008EC  ECF0  F008         	call	_UART_SendString	;wreg free
  1386                           
  1387                           ;main.c: 441:             }
  1388   0008F0  EF9B  F004         	goto	l2281
  1389   0008F4                     l2265:
  1390                           
  1391                           ;main.c: 443:             {;main.c: 444:                 UART_SendString("ERROR:UNKNOWN_
      +                          CMD:");
  1392   0008F4  0E01               	movlw	low STR_29
  1393   0008F6  6E05               	movwf	UART_SendString@str^0,c
  1394   0008F8  5005               	movf	UART_SendString@str^0,w,c
  1395   0008FA  A4D8               	btfss	status,2,c
  1396   0008FC  0E06               	movlw	high __smallconst
  1397   0008FE  6E06               	movwf	(UART_SendString@str+1)^0,c
  1398   000900  ECF0  F008         	call	_UART_SendString	;wreg free
  1399   000904                     
  1400                           ;main.c: 445:                 for (char i = 0; i < 10; i++)
  1401   000904  6A62               	clrf	main@i^0,c
  1402   000906                     l2273:
  1403                           
  1404                           ;main.c: 446:                 {;main.c: 447:                     UART_SendChar(uart_rx_b
      +                          uffer[i]);
  1405   000906  5062               	movf	main@i^0,w,c
  1406   000908  0F6C               	addlw	low _uart_rx_buffer
  1407   00090A  6ED9               	movwf	fsr2l,c
  1408   00090C  6ADA               	clrf	fsr2h,c
  1409   00090E  50DF               	movf	indf2,w,c
  1410   000910  EC7F  F00A         	call	_UART_SendChar
  1411   000914                     
  1412                           ;main.c: 448:                 }
  1413   000914  2A62               	incf	main@i^0,f,c
  1414   000916  0E09               	movlw	9
  1415   000918  6462               	cpfsgt	main@i^0,c
  1416   00091A  EF91  F004         	goto	u1451
  1417   00091E  EF93  F004         	goto	u1450
  1418   000922                     u1451:
  1419   000922  EF83  F004         	goto	l2273
  1420   000926                     u1450:
  1421   000926                     
  1422                           ;main.c: 449:                 UART_SendString("\r\n");
  1423   000926  0E1C               	movlw	low (STR_4+8)
  1424   000928  6E05               	movwf	UART_SendString@str^0,c
  1425   00092A  5005               	movf	UART_SendString@str^0,w,c
  1426   00092C  A4D8               	btfss	status,2,c
  1427   00092E  0E06               	movlw	high __smallconst
  1428   000930  6E06               	movwf	(UART_SendString@str+1)^0,c
  1429   000932  ECF0  F008         	call	_UART_SendString	;wreg free
  1430   000936                     l2281:
  1431                           
  1432                           ;main.c: 452:             uart_rx_index = 0;
  1433   000936  6A6A               	clrf	_uart_rx_index^0,c	;volatile
  1434   000938                     l2283:
  1435                           
  1436                           ;main.c: 455:         if (read_pin_cmd)
  1437   000938  5061               	movf	main@read_pin_cmd^0,w,c
  1438   00093A  B4D8               	btfsc	status,2,c
  1439   00093C  EFA2  F004         	goto	u1461
  1440   000940  EFA4  F004         	goto	u1460
  1441   000944                     u1461:
  1442   000944  EFA8  F004         	goto	l2287
  1443   000948                     u1460:
  1444   000948                     
  1445                           ;main.c: 456:         {;main.c: 457:             scan_usr_key();
  1446   000948  ECAE  F004         	call	_scan_usr_key	;wreg free
  1447                           
  1448                           ;main.c: 458:         }
  1449   00094C  EF63  F003         	goto	l2191
  1450   000950                     l2287:
  1451                           
  1452                           ;main.c: 460:         {;main.c: 461:             reset_usr_key_value();
  1453   000950  EC90  F00A         	call	_reset_usr_key_value	;wreg free
  1454   000954  EF63  F003         	goto	l2191
  1455   000958  EF07  F000         	goto	start
  1456   00095C                     __end_of_main:
  1457                           	callstack 0
  1458                           
  1459 ;; *************** function _strstr *****************
  1460 ;; Defined at:
  1461 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strstr.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;  h               1    8[COMRAM] PTR const unsigned char 
  1464 ;;		 -> NULL(0), uart_rx_buffer(10), 
  1465 ;;  n               1    9[COMRAM] PTR const unsigned char 
  1466 ;;		 -> STR_27(9), STR_24(9), STR_22(9), STR_20(9), 
  1467 ;;		 -> STR_18(9), STR_16(9), STR_14(9), STR_12(9), 
  1468 ;;		 -> STR_10(9), STR_8(9), STR_6(9), STR_3(9), 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  nl              2   10[COMRAM] unsigned int 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    8[COMRAM] PTR unsigned char 
  1473 ;; Registers used:
  1474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1480 ;;      Params:         2       0       0       0       0       0       0
  1481 ;;      Locals:         2       0       0       0       0       0       0
  1482 ;;      Temps:          0       0       0       0       0       0       0
  1483 ;;      Totals:         4       0       0       0       0       0       0
  1484 ;;Total ram usage:        4 bytes
  1485 ;; Hardware stack levels used: 1
  1486 ;; Hardware stack levels required when called: 2
  1487 ;; This function calls:
  1488 ;;		_strchr
  1489 ;;		_strlen
  1490 ;;		_strncmp
  1491 ;; This function is called by:
  1492 ;;		_main
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           	psect	text1
  1497   00104E                     __ptext1:
  1498                           	callstack 0
  1499   00104E                     _strstr:
  1500                           	callstack 28
  1501   00104E  500A               	movf	strstr@n^0,w,c
  1502   001050  B4D8               	btfsc	status,2,c
  1503   001052  EF2D  F008         	goto	u1281
  1504   001056  EF2F  F008         	goto	u1280
  1505   00105A                     u1281:
  1506   00105A  EF6F  F008         	goto	l2171
  1507   00105E                     u1280:
  1508   00105E  C00A  F004         	movff	strstr@n,strlen@s
  1509   001062  ECD0  F009         	call	_strlen	;wreg free
  1510   001066  C004  F00B         	movff	?_strlen,strstr@nl
  1511   00106A  C005  F00C         	movff	?_strlen+1,strstr@nl+1
  1512   00106E  EF5C  F008         	goto	l2167
  1513   001072                     l2159:
  1514   001072  C009  F004         	movff	strstr@h,strncmp@l
  1515   001076  C00A  F005         	movff	strstr@n,strncmp@r
  1516   00107A  C00B  F006         	movff	strstr@nl,strncmp@n
  1517   00107E  C00C  F007         	movff	strstr@nl+1,strncmp@n+1
  1518   001082  EC22  F007         	call	_strncmp	;wreg free
  1519   001086  5004               	movf	?_strncmp^0,w,c
  1520   001088  1005               	iorwf	(?_strncmp+1)^0,w,c
  1521   00108A  A4D8               	btfss	status,2,c
  1522   00108C  EF4A  F008         	goto	u1291
  1523   001090  EF4C  F008         	goto	u1290
  1524   001094                     u1291:
  1525   001094  EF4F  F008         	goto	l2165
  1526   001098                     u1290:
  1527   001098  5009               	movf	strstr@h^0,w,c
  1528   00109A  EF70  F008         	goto	l1025
  1529   00109E                     l2165:
  1530   00109E  2809               	incf	strstr@h^0,w,c
  1531   0010A0  6E04               	movwf	strchr@s^0,c
  1532   0010A2  C00A  FFF6         	movff	strstr@n,tblptrl
  1533   0010A6                     	if	1	;There is more than 1 active tblptr byte
  1534   0010A6  0E06               	movlw	high __smallconst
  1535   0010A8  6EF7               	movwf	tblptrh,c
  1536   0010AA                     	endif
  1537   0010AA                     	if	0	;tblptru may be non-zero
  1538   0010AA                     	endif
  1539   0010AA                     	if	0	;tblptru may be non-zero
  1540   0010AA                     	endif
  1541   0010AA  0008               	tblrd		*
  1542   0010AC  50F5               	movf	tablat,w,c
  1543   0010AE  6E05               	movwf	strchr@c^0,c
  1544   0010B0  6A06               	clrf	(strchr@c+1)^0,c
  1545   0010B2  ECB3  F009         	call	_strchr	;wreg free
  1546   0010B6  6E09               	movwf	strstr@h^0,c
  1547   0010B8                     l2167:
  1548   0010B8  5009               	movf	strstr@h^0,w,c
  1549   0010BA  B4D8               	btfsc	status,2,c
  1550   0010BC  EF62  F008         	goto	u1301
  1551   0010C0  EF64  F008         	goto	u1300
  1552   0010C4                     u1301:
  1553   0010C4  EF6F  F008         	goto	l2171
  1554   0010C8                     u1300:
  1555   0010C8  5009               	movf	strstr@h^0,w,c
  1556   0010CA  6ED9               	movwf	fsr2l,c
  1557   0010CC  6ADA               	clrf	fsr2h,c
  1558   0010CE  50DF               	movf	indf2,w,c
  1559   0010D0  A4D8               	btfss	status,2,c
  1560   0010D2  EF6D  F008         	goto	u1311
  1561   0010D6  EF6F  F008         	goto	u1310
  1562   0010DA                     u1311:
  1563   0010DA  EF39  F008         	goto	l2159
  1564   0010DE                     u1310:
  1565   0010DE                     l2171:
  1566   0010DE  0E00               	movlw	0
  1567   0010E0                     l1025:
  1568   0010E0  0012               	return		;funcret
  1569   0010E2                     __end_of_strstr:
  1570                           	callstack 0
  1571                           
  1572 ;; *************** function _strncmp *****************
  1573 ;; Defined at:
  1574 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strncmp.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;  l               1    3[COMRAM] PTR const unsigned char 
  1577 ;;		 -> NULL(0), uart_rx_buffer(10), 
  1578 ;;  r               1    4[COMRAM] PTR const unsigned char 
  1579 ;;		 -> STR_27(9), STR_24(9), STR_22(9), STR_20(9), 
  1580 ;;		 -> STR_18(9), STR_16(9), STR_14(9), STR_12(9), 
  1581 ;;		 -> STR_10(9), STR_8(9), STR_6(9), STR_3(9), 
  1582 ;;  n               2    5[COMRAM] unsigned int 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  2    3[COMRAM] int 
  1587 ;; Registers used:
  1588 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1594 ;;      Params:         4       0       0       0       0       0       0
  1595 ;;      Locals:         0       0       0       0       0       0       0
  1596 ;;      Temps:          1       0       0       0       0       0       0
  1597 ;;      Totals:         5       0       0       0       0       0       0
  1598 ;;Total ram usage:        5 bytes
  1599 ;; Hardware stack levels used: 1
  1600 ;; Hardware stack levels required when called: 1
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		_strstr
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text2
  1609   000E44                     __ptext2:
  1610                           	callstack 0
  1611   000E44                     _strncmp:
  1612                           	callstack 28
  1613   000E44  0606               	decf	strncmp@n^0,f,c
  1614   000E46  A0D8               	btfss	status,0,c
  1615   000E48  0607               	decf	(strncmp@n+1)^0,f,c
  1616   000E4A  2806               	incf	strncmp@n^0,w,c
  1617   000E4C  E106               	bnz	u1091
  1618   000E4E  2807               	incf	(strncmp@n+1)^0,w,c
  1619   000E50  A4D8               	btfss	status,2,c
  1620   000E52  EF2D  F007         	goto	u1091
  1621   000E56  EF2F  F007         	goto	u1090
  1622   000E5A                     u1091:
  1623   000E5A  EF3A  F007         	goto	l1915
  1624   000E5E                     u1090:
  1625   000E5E  0E00               	movlw	0
  1626   000E60  6E05               	movwf	(?_strncmp+1)^0,c
  1627   000E62  0E00               	movlw	0
  1628   000E64  6E04               	movwf	?_strncmp^0,c
  1629   000E66  EF7F  F007         	goto	l1044
  1630   000E6A                     l1913:
  1631   000E6A  2A04               	incf	strncmp@l^0,f,c
  1632   000E6C  2A05               	incf	strncmp@r^0,f,c
  1633   000E6E  0606               	decf	strncmp@n^0,f,c
  1634   000E70  A0D8               	btfss	status,0,c
  1635   000E72  0607               	decf	(strncmp@n+1)^0,f,c
  1636   000E74                     l1915:
  1637   000E74  5004               	movf	strncmp@l^0,w,c
  1638   000E76  6ED9               	movwf	fsr2l,c
  1639   000E78  6ADA               	clrf	fsr2h,c
  1640   000E7A  50DF               	movf	indf2,w,c
  1641   000E7C  B4D8               	btfsc	status,2,c
  1642   000E7E  EF43  F007         	goto	u1101
  1643   000E82  EF45  F007         	goto	u1100
  1644   000E86                     u1101:
  1645   000E86  EF6F  F007         	goto	l1923
  1646   000E8A                     u1100:
  1647   000E8A  C005  FFF6         	movff	strncmp@r,tblptrl
  1648   000E8E                     	if	1	;There is more than 1 active tblptr byte
  1649   000E8E  0E06               	movlw	high __smallconst
  1650   000E90  6EF7               	movwf	tblptrh,c
  1651   000E92                     	endif
  1652   000E92                     	if	0	;tblptru may be non-zero
  1653   000E92                     	endif
  1654   000E92                     	if	0	;tblptru may be non-zero
  1655   000E92                     	endif
  1656   000E92  0008               	tblrd		*
  1657   000E94  50F5               	movf	tablat,w,c
  1658   000E96  0900               	iorlw	0
  1659   000E98  B4D8               	btfsc	status,2,c
  1660   000E9A  EF51  F007         	goto	u1111
  1661   000E9E  EF53  F007         	goto	u1110
  1662   000EA2                     u1111:
  1663   000EA2  EF6F  F007         	goto	l1923
  1664   000EA6                     u1110:
  1665   000EA6  5006               	movf	strncmp@n^0,w,c
  1666   000EA8  1007               	iorwf	(strncmp@n+1)^0,w,c
  1667   000EAA  B4D8               	btfsc	status,2,c
  1668   000EAC  EF5A  F007         	goto	u1121
  1669   000EB0  EF5C  F007         	goto	u1120
  1670   000EB4                     u1121:
  1671   000EB4  EF6F  F007         	goto	l1923
  1672   000EB8                     u1120:
  1673   000EB8  5004               	movf	strncmp@l^0,w,c
  1674   000EBA  6ED9               	movwf	fsr2l,c
  1675   000EBC  6ADA               	clrf	fsr2h,c
  1676   000EBE  50DF               	movf	indf2,w,c
  1677   000EC0  6E08               	movwf	??_strncmp^0,c
  1678   000EC2  C005  FFF6         	movff	strncmp@r,tblptrl
  1679   000EC6                     	if	1	;There is more than 1 active tblptr byte
  1680   000EC6  0E06               	movlw	high __smallconst
  1681   000EC8  6EF7               	movwf	tblptrh,c
  1682   000ECA                     	endif
  1683   000ECA                     	if	0	;tblptru may be non-zero
  1684   000ECA                     	endif
  1685   000ECA                     	if	0	;tblptru may be non-zero
  1686   000ECA                     	endif
  1687   000ECA  0008               	tblrd		*
  1688   000ECC  50F5               	movf	tablat,w,c
  1689   000ECE  1808               	xorwf	??_strncmp^0,w,c
  1690   000ED0  B4D8               	btfsc	status,2,c
  1691   000ED2  EF6D  F007         	goto	u1131
  1692   000ED6  EF6F  F007         	goto	u1130
  1693   000EDA                     u1131:
  1694   000EDA  EF35  F007         	goto	l1913
  1695   000EDE                     u1130:
  1696   000EDE                     l1923:
  1697   000EDE  5004               	movf	strncmp@l^0,w,c
  1698   000EE0  6ED9               	movwf	fsr2l,c
  1699   000EE2  6ADA               	clrf	fsr2h,c
  1700   000EE4  50DF               	movf	indf2,w,c
  1701   000EE6  6E08               	movwf	??_strncmp^0,c
  1702   000EE8  C005  FFF6         	movff	strncmp@r,tblptrl
  1703   000EEC                     	if	1	;There is more than 1 active tblptr byte
  1704   000EEC  0E06               	movlw	high __smallconst
  1705   000EEE  6EF7               	movwf	tblptrh,c
  1706   000EF0                     	endif
  1707   000EF0                     	if	0	;tblptru may be non-zero
  1708   000EF0                     	endif
  1709   000EF0                     	if	0	;tblptru may be non-zero
  1710   000EF0                     	endif
  1711   000EF0  0008               	tblrd		*
  1712   000EF2  50F5               	movf	tablat,w,c
  1713   000EF4  5C08               	subwf	??_strncmp^0,w,c
  1714   000EF6  6E04               	movwf	?_strncmp^0,c
  1715   000EF8  6A05               	clrf	(?_strncmp+1)^0,c
  1716   000EFA  A0D8               	btfss	status,0,c
  1717   000EFC  0605               	decf	(?_strncmp+1)^0,f,c
  1718   000EFE                     l1044:
  1719   000EFE  0012               	return		;funcret
  1720   000F00                     __end_of_strncmp:
  1721                           	callstack 0
  1722                           
  1723 ;; *************** function _strlen *****************
  1724 ;; Defined at:
  1725 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  s               1    3[COMRAM] PTR const unsigned char 
  1728 ;;		 -> STR_27(9), STR_24(9), STR_22(9), STR_20(9), 
  1729 ;;		 -> STR_18(9), STR_16(9), STR_14(9), STR_12(9), 
  1730 ;;		 -> STR_10(9), STR_8(9), STR_6(9), STR_3(9), 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  a               1    5[COMRAM] PTR const unsigned char 
  1733 ;;		 -> STR_27(9), STR_24(9), STR_22(9), STR_20(9), 
  1734 ;;		 -> STR_18(9), STR_16(9), STR_14(9), STR_12(9), 
  1735 ;;		 -> STR_10(9), STR_8(9), STR_6(9), STR_3(9), 
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  2    3[COMRAM] unsigned int 
  1738 ;; Registers used:
  1739 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/0
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1745 ;;      Params:         2       0       0       0       0       0       0
  1746 ;;      Locals:         1       0       0       0       0       0       0
  1747 ;;      Temps:          0       0       0       0       0       0       0
  1748 ;;      Totals:         3       0       0       0       0       0       0
  1749 ;;Total ram usage:        3 bytes
  1750 ;; Hardware stack levels used: 1
  1751 ;; Hardware stack levels required when called: 1
  1752 ;; This function calls:
  1753 ;;		Nothing
  1754 ;; This function is called by:
  1755 ;;		_strstr
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text3
  1760   0013A0                     __ptext3:
  1761                           	callstack 0
  1762   0013A0                     _strlen:
  1763                           	callstack 28
  1764   0013A0  C004  F006         	movff	strlen@s,strlen@a
  1765   0013A4  EFD5  F009         	goto	l1901
  1766   0013A8                     l1899:
  1767   0013A8  2A04               	incf	strlen@s^0,f,c
  1768   0013AA                     l1901:
  1769   0013AA  C004  FFF6         	movff	strlen@s,tblptrl
  1770   0013AE                     	if	1	;There is more than 1 active tblptr byte
  1771   0013AE  0E06               	movlw	high __smallconst
  1772   0013B0  6EF7               	movwf	tblptrh,c
  1773   0013B2                     	endif
  1774   0013B2                     	if	0	;tblptru may be non-zero
  1775   0013B2                     	endif
  1776   0013B2                     	if	0	;tblptru may be non-zero
  1777   0013B2                     	endif
  1778   0013B2  0008               	tblrd		*
  1779   0013B4  50F5               	movf	tablat,w,c
  1780   0013B6  0900               	iorlw	0
  1781   0013B8  A4D8               	btfss	status,2,c
  1782   0013BA  EFE1  F009         	goto	u1081
  1783   0013BE  EFE3  F009         	goto	u1080
  1784   0013C2                     u1081:
  1785   0013C2  EFD4  F009         	goto	l1899
  1786   0013C6                     u1080:
  1787   0013C6  5006               	movf	strlen@a^0,w,c
  1788   0013C8  5C04               	subwf	strlen@s^0,w,c
  1789   0013CA  6E04               	movwf	?_strlen^0,c
  1790   0013CC  6A05               	clrf	(?_strlen+1)^0,c
  1791   0013CE  BE04               	btfsc	?_strlen^0,7,c
  1792   0013D0  0605               	decf	(?_strlen+1)^0,f,c
  1793   0013D2  0012               	return		;funcret
  1794   0013D4                     __end_of_strlen:
  1795                           	callstack 0
  1796                           
  1797 ;; *************** function _strchr *****************
  1798 ;; Defined at:
  1799 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strchr.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  s               1    3[COMRAM] PTR const unsigned char 
  1802 ;;		 -> NULL(0), uart_rx_buffer(10), 
  1803 ;;  c               2    4[COMRAM] int 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    3[COMRAM] PTR unsigned char 
  1808 ;; Registers used:
  1809 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1815 ;;      Params:         3       0       0       0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0       0       0
  1817 ;;      Temps:          1       0       0       0       0       0       0
  1818 ;;      Totals:         4       0       0       0       0       0       0
  1819 ;;Total ram usage:        4 bytes
  1820 ;; Hardware stack levels used: 1
  1821 ;; Hardware stack levels required when called: 1
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_strstr
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text4
  1830   001366                     __ptext4:
  1831                           	callstack 0
  1832   001366                     _strchr:
  1833                           	callstack 28
  1834   001366                     l1031:
  1835   001366  5004               	movf	strchr@s^0,w,c
  1836   001368  6ED9               	movwf	fsr2l,c
  1837   00136A  6ADA               	clrf	fsr2h,c
  1838   00136C  5005               	movf	strchr@c^0,w,c
  1839   00136E  18DE               	xorwf	postinc2,w,c
  1840   001370  A4D8               	btfss	status,2,c
  1841   001372  EFBD  F009         	goto	u1141
  1842   001376  EFBF  F009         	goto	u1140
  1843   00137A                     u1141:
  1844   00137A  EFC2  F009         	goto	l1933
  1845   00137E                     u1140:
  1846   00137E  5004               	movf	strchr@s^0,w,c
  1847   001380  EFCF  F009         	goto	l1033
  1848   001384                     l1933:
  1849   001384  2A04               	incf	strchr@s^0,f,c
  1850   001386  0404               	decf	strchr@s^0,w,c
  1851   001388  6ED9               	movwf	fsr2l,c
  1852   00138A  6ADA               	clrf	fsr2h,c
  1853   00138C  50DF               	movf	indf2,w,c
  1854   00138E  A4D8               	btfss	status,2,c
  1855   001390  EFCC  F009         	goto	u1151
  1856   001394  EFCE  F009         	goto	u1150
  1857   001398                     u1151:
  1858   001398  EFB3  F009         	goto	l1031
  1859   00139C                     u1150:
  1860   00139C  0E00               	movlw	0
  1861   00139E                     l1033:
  1862   00139E  0012               	return		;funcret
  1863   0013A0                     __end_of_strchr:
  1864                           	callstack 0
  1865                           
  1866 ;; *************** function _scan_usr_key *****************
  1867 ;; Defined at:
  1868 ;;		line 215 in file "main.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;		None
  1871 ;; Auto vars:     Size  Location     Type
  1872 ;;  xbuffer        10   64[COMRAM] unsigned char [10]
  1873 ;;  retx            1   74[COMRAM] unsigned char 
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      void 
  1876 ;; Registers used:
  1877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1883 ;;      Params:         0       0       0       0       0       0       0
  1884 ;;      Locals:        11       0       0       0       0       0       0
  1885 ;;      Temps:          0       0       0       0       0       0       0
  1886 ;;      Totals:        11       0       0       0       0       0       0
  1887 ;;Total ram usage:       11 bytes
  1888 ;; Hardware stack levels used: 1
  1889 ;; Hardware stack levels required when called: 9
  1890 ;; This function calls:
  1891 ;;		_UART_SendString
  1892 ;;		_delay_ms
  1893 ;;		_get_key_value
  1894 ;;		_latch_data
  1895 ;;		_read_key_inputs
  1896 ;;		_sprintf
  1897 ;; This function is called by:
  1898 ;;		_main
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text5
  1903   00095C                     __ptext5:
  1904                           	callstack 0
  1905   00095C                     _scan_usr_key:
  1906                           	callstack 21
  1907   00095C                     
  1908                           ;main.c: 218:     latch_data(0x00);
  1909   00095C  0E00               	movlw	0
  1910   00095E  EC64  F00A         	call	_latch_data
  1911   000962                     
  1912                           ;main.c: 220:     delay_ms(20);
  1913   000962  0E00               	movlw	0
  1914   000964  6E05               	movwf	(delay_ms@ms+1)^0,c
  1915   000966  0E14               	movlw	20
  1916   000968  6E04               	movwf	delay_ms@ms^0,c
  1917   00096A  EC04  F00A         	call	_delay_ms	;wreg free
  1918   00096E                     
  1919                           ;main.c: 221:     LATAbits.LATA0 = 1;
  1920   00096E  8089               	bsf	137,0,c	;volatile
  1921   000970                     
  1922                           ;main.c: 222:     LATAbits.LATA1 = 0;
  1923   000970  9289               	bcf	137,1,c	;volatile
  1924   000972                     
  1925                           ;main.c: 223:     LATAbits.LATA2 = 0;
  1926   000972  9489               	bcf	137,2,c	;volatile
  1927   000974                     
  1928                           ;main.c: 224:     LATAbits.LATA3 = 0;
  1929   000974  9689               	bcf	137,3,c	;volatile
  1930   000976                     
  1931                           ;main.c: 225:     LATEbits.LATE0 = 0;
  1932   000976  908D               	bcf	141,0,c	;volatile
  1933   000978                     
  1934                           ;main.c: 226:     LATAbits.LATA5 = 0;
  1935   000978  9A89               	bcf	137,5,c	;volatile
  1936   00097A                     
  1937                           ;main.c: 227:     retx = read_key_inputs();
  1938   00097A  EC4D  F009         	call	_read_key_inputs	;wreg free
  1939   00097E  6E4B               	movwf	scan_usr_key@retx^0,c
  1940   000980                     
  1941                           ;main.c: 228:     if (retx == 6 || retx == 5)
  1942   000980  0E06               	movlw	6
  1943   000982  184B               	xorwf	scan_usr_key@retx^0,w,c
  1944   000984  B4D8               	btfsc	status,2,c
  1945   000986  EFC7  F004         	goto	u1161
  1946   00098A  EFC9  F004         	goto	u1160
  1947   00098E                     u1161:
  1948   00098E  EFDA  F004         	goto	l1995
  1949   000992                     u1160:
  1950   000992  0E05               	movlw	5
  1951   000994  184B               	xorwf	scan_usr_key@retx^0,w,c
  1952   000996  A4D8               	btfss	status,2,c
  1953   000998  EFD0  F004         	goto	u1171
  1954   00099C  EFD2  F004         	goto	u1170
  1955   0009A0                     u1171:
  1956   0009A0  EFE5  F004         	goto	l1997
  1957   0009A4                     u1170:
  1958   0009A4  EFDA  F004         	goto	l1995
  1959   0009A8                     l1989:
  1960                           
  1961                           ;main.c: 233:                 RED_KEY_BYTE |= (1 << 0);
  1962   0009A8  8069               	bsf	_RED_KEY_BYTE^0,0,c
  1963                           
  1964                           ;main.c: 234:                 break;
  1965   0009AA  EFE5  F004         	goto	l1997
  1966   0009AE                     l1991:
  1967                           
  1968                           ;main.c: 236:                 GREEN_KEY_BYTE |= (1 << 0);
  1969   0009AE  8068               	bsf	_GREEN_KEY_BYTE^0,0,c
  1970                           
  1971                           ;main.c: 237:                 break;
  1972   0009B0  EFE5  F004         	goto	l1997
  1973   0009B4                     l1995:
  1974   0009B4  504B               	movf	scan_usr_key@retx^0,w,c
  1975                           
  1976                           ; Switch size 1, requested type "simple"
  1977                           ; Number of cases is 2, Range of values is 5 to 6
  1978                           ; switch strategies available:
  1979                           ; Name         Instructions Cycles
  1980                           ; simple_byte            7     4 (average)
  1981                           ;	Chosen strategy is simple_byte
  1982   0009B6  0A05               	xorlw	5	; case 5
  1983   0009B8  B4D8               	btfsc	status,2,c
  1984   0009BA  EFD7  F004         	goto	l1991
  1985   0009BE  0A03               	xorlw	3	; case 6
  1986   0009C0  B4D8               	btfsc	status,2,c
  1987   0009C2  EFD4  F004         	goto	l1989
  1988   0009C6  EFE5  F004         	goto	l1997
  1989   0009CA                     l1997:
  1990                           
  1991                           ;main.c: 241:     delay_ms(20);
  1992   0009CA  0E00               	movlw	0
  1993   0009CC  6E05               	movwf	(delay_ms@ms+1)^0,c
  1994   0009CE  0E14               	movlw	20
  1995   0009D0  6E04               	movwf	delay_ms@ms^0,c
  1996   0009D2  EC04  F00A         	call	_delay_ms	;wreg free
  1997   0009D6                     
  1998                           ;main.c: 242:     LATAbits.LATA0 = 0;
  1999   0009D6  9089               	bcf	137,0,c	;volatile
  2000   0009D8                     
  2001                           ;main.c: 243:     LATAbits.LATA1 = 1;
  2002   0009D8  8289               	bsf	137,1,c	;volatile
  2003   0009DA                     
  2004                           ;main.c: 244:     LATAbits.LATA2 = 0;
  2005   0009DA  9489               	bcf	137,2,c	;volatile
  2006   0009DC                     
  2007                           ;main.c: 245:     LATAbits.LATA3 = 0;
  2008   0009DC  9689               	bcf	137,3,c	;volatile
  2009   0009DE                     
  2010                           ;main.c: 246:     LATEbits.LATE0 = 0;
  2011   0009DE  908D               	bcf	141,0,c	;volatile
  2012   0009E0                     
  2013                           ;main.c: 247:     LATAbits.LATA5 = 0;
  2014   0009E0  9A89               	bcf	137,5,c	;volatile
  2015                           
  2016                           ;main.c: 248:     retx = read_key_inputs();
  2017   0009E2  EC4D  F009         	call	_read_key_inputs	;wreg free
  2018   0009E6  6E4B               	movwf	scan_usr_key@retx^0,c
  2019   0009E8                     
  2020                           ;main.c: 249:     if (retx == 6 || retx == 5)
  2021   0009E8  0E06               	movlw	6
  2022   0009EA  184B               	xorwf	scan_usr_key@retx^0,w,c
  2023   0009EC  B4D8               	btfsc	status,2,c
  2024   0009EE  EFFB  F004         	goto	u1181
  2025   0009F2  EFFD  F004         	goto	u1180
  2026   0009F6                     u1181:
  2027   0009F6  EF0E  F005         	goto	l2021
  2028   0009FA                     u1180:
  2029   0009FA  0E05               	movlw	5
  2030   0009FC  184B               	xorwf	scan_usr_key@retx^0,w,c
  2031   0009FE  A4D8               	btfss	status,2,c
  2032   000A00  EF04  F005         	goto	u1191
  2033   000A04  EF06  F005         	goto	u1190
  2034   000A08                     u1191:
  2035   000A08  EF19  F005         	goto	l2023
  2036   000A0C                     u1190:
  2037   000A0C  EF0E  F005         	goto	l2021
  2038   000A10                     l2015:
  2039                           
  2040                           ;main.c: 254:                 RED_KEY_BYTE |= (1 << 1);
  2041   000A10  8269               	bsf	_RED_KEY_BYTE^0,1,c
  2042                           
  2043                           ;main.c: 255:                 break;
  2044   000A12  EF19  F005         	goto	l2023
  2045   000A16                     l2017:
  2046                           
  2047                           ;main.c: 257:                 GREEN_KEY_BYTE |= (1 << 1);
  2048   000A16  8268               	bsf	_GREEN_KEY_BYTE^0,1,c
  2049                           
  2050                           ;main.c: 258:                 break;
  2051   000A18  EF19  F005         	goto	l2023
  2052   000A1C                     l2021:
  2053   000A1C  504B               	movf	scan_usr_key@retx^0,w,c
  2054                           
  2055                           ; Switch size 1, requested type "simple"
  2056                           ; Number of cases is 2, Range of values is 5 to 6
  2057                           ; switch strategies available:
  2058                           ; Name         Instructions Cycles
  2059                           ; simple_byte            7     4 (average)
  2060                           ;	Chosen strategy is simple_byte
  2061   000A1E  0A05               	xorlw	5	; case 5
  2062   000A20  B4D8               	btfsc	status,2,c
  2063   000A22  EF0B  F005         	goto	l2017
  2064   000A26  0A03               	xorlw	3	; case 6
  2065   000A28  B4D8               	btfsc	status,2,c
  2066   000A2A  EF08  F005         	goto	l2015
  2067   000A2E  EF19  F005         	goto	l2023
  2068   000A32                     l2023:
  2069                           
  2070                           ;main.c: 262:     delay_ms(20);
  2071   000A32  0E00               	movlw	0
  2072   000A34  6E05               	movwf	(delay_ms@ms+1)^0,c
  2073   000A36  0E14               	movlw	20
  2074   000A38  6E04               	movwf	delay_ms@ms^0,c
  2075   000A3A  EC04  F00A         	call	_delay_ms	;wreg free
  2076   000A3E                     
  2077                           ;main.c: 263:     LATAbits.LATA0 = 0;
  2078   000A3E  9089               	bcf	137,0,c	;volatile
  2079   000A40                     
  2080                           ;main.c: 264:     LATAbits.LATA1 = 0;
  2081   000A40  9289               	bcf	137,1,c	;volatile
  2082   000A42                     
  2083                           ;main.c: 265:     LATAbits.LATA2 = 1;
  2084   000A42  8489               	bsf	137,2,c	;volatile
  2085   000A44                     
  2086                           ;main.c: 266:     LATAbits.LATA3 = 0;
  2087   000A44  9689               	bcf	137,3,c	;volatile
  2088   000A46                     
  2089                           ;main.c: 267:     LATEbits.LATE0 = 0;
  2090   000A46  908D               	bcf	141,0,c	;volatile
  2091   000A48                     
  2092                           ;main.c: 268:     LATAbits.LATA5 = 0;
  2093   000A48  9A89               	bcf	137,5,c	;volatile
  2094                           
  2095                           ;main.c: 269:     retx = read_key_inputs();
  2096   000A4A  EC4D  F009         	call	_read_key_inputs	;wreg free
  2097   000A4E  6E4B               	movwf	scan_usr_key@retx^0,c
  2098   000A50                     
  2099                           ;main.c: 270:     if (retx == 6 || retx == 5)
  2100   000A50  0E06               	movlw	6
  2101   000A52  184B               	xorwf	scan_usr_key@retx^0,w,c
  2102   000A54  B4D8               	btfsc	status,2,c
  2103   000A56  EF2F  F005         	goto	u1201
  2104   000A5A  EF31  F005         	goto	u1200
  2105   000A5E                     u1201:
  2106   000A5E  EF42  F005         	goto	l2047
  2107   000A62                     u1200:
  2108   000A62  0E05               	movlw	5
  2109   000A64  184B               	xorwf	scan_usr_key@retx^0,w,c
  2110   000A66  A4D8               	btfss	status,2,c
  2111   000A68  EF38  F005         	goto	u1211
  2112   000A6C  EF3A  F005         	goto	u1210
  2113   000A70                     u1211:
  2114   000A70  EF4D  F005         	goto	l2049
  2115   000A74                     u1210:
  2116   000A74  EF42  F005         	goto	l2047
  2117   000A78                     l2041:
  2118                           
  2119                           ;main.c: 275:                 RED_KEY_BYTE |= (1 << 2);
  2120   000A78  8469               	bsf	_RED_KEY_BYTE^0,2,c
  2121                           
  2122                           ;main.c: 276:                 break;
  2123   000A7A  EF4D  F005         	goto	l2049
  2124   000A7E                     l2043:
  2125                           
  2126                           ;main.c: 278:                 GREEN_KEY_BYTE |= (1 << 2);
  2127   000A7E  8468               	bsf	_GREEN_KEY_BYTE^0,2,c
  2128                           
  2129                           ;main.c: 279:                 break;
  2130   000A80  EF4D  F005         	goto	l2049
  2131   000A84                     l2047:
  2132   000A84  504B               	movf	scan_usr_key@retx^0,w,c
  2133                           
  2134                           ; Switch size 1, requested type "simple"
  2135                           ; Number of cases is 2, Range of values is 5 to 6
  2136                           ; switch strategies available:
  2137                           ; Name         Instructions Cycles
  2138                           ; simple_byte            7     4 (average)
  2139                           ;	Chosen strategy is simple_byte
  2140   000A86  0A05               	xorlw	5	; case 5
  2141   000A88  B4D8               	btfsc	status,2,c
  2142   000A8A  EF3F  F005         	goto	l2043
  2143   000A8E  0A03               	xorlw	3	; case 6
  2144   000A90  B4D8               	btfsc	status,2,c
  2145   000A92  EF3C  F005         	goto	l2041
  2146   000A96  EF4D  F005         	goto	l2049
  2147   000A9A                     l2049:
  2148                           
  2149                           ;main.c: 283:     delay_ms(20);
  2150   000A9A  0E00               	movlw	0
  2151   000A9C  6E05               	movwf	(delay_ms@ms+1)^0,c
  2152   000A9E  0E14               	movlw	20
  2153   000AA0  6E04               	movwf	delay_ms@ms^0,c
  2154   000AA2  EC04  F00A         	call	_delay_ms	;wreg free
  2155   000AA6                     
  2156                           ;main.c: 284:     LATAbits.LATA0 = 0;
  2157   000AA6  9089               	bcf	137,0,c	;volatile
  2158   000AA8                     
  2159                           ;main.c: 285:     LATAbits.LATA1 = 0;
  2160   000AA8  9289               	bcf	137,1,c	;volatile
  2161   000AAA                     
  2162                           ;main.c: 286:     LATAbits.LATA2 = 0;
  2163   000AAA  9489               	bcf	137,2,c	;volatile
  2164   000AAC                     
  2165                           ;main.c: 287:     LATAbits.LATA3 = 1;
  2166   000AAC  8689               	bsf	137,3,c	;volatile
  2167   000AAE                     
  2168                           ;main.c: 288:     LATEbits.LATE0 = 0;
  2169   000AAE  908D               	bcf	141,0,c	;volatile
  2170   000AB0                     
  2171                           ;main.c: 289:     LATAbits.LATA5 = 0;
  2172   000AB0  9A89               	bcf	137,5,c	;volatile
  2173                           
  2174                           ;main.c: 290:     retx = read_key_inputs();
  2175   000AB2  EC4D  F009         	call	_read_key_inputs	;wreg free
  2176   000AB6  6E4B               	movwf	scan_usr_key@retx^0,c
  2177   000AB8                     
  2178                           ;main.c: 291:     if (retx == 6 || retx == 5)
  2179   000AB8  0E06               	movlw	6
  2180   000ABA  184B               	xorwf	scan_usr_key@retx^0,w,c
  2181   000ABC  B4D8               	btfsc	status,2,c
  2182   000ABE  EF63  F005         	goto	u1221
  2183   000AC2  EF65  F005         	goto	u1220
  2184   000AC6                     u1221:
  2185   000AC6  EF76  F005         	goto	l2073
  2186   000ACA                     u1220:
  2187   000ACA  0E05               	movlw	5
  2188   000ACC  184B               	xorwf	scan_usr_key@retx^0,w,c
  2189   000ACE  A4D8               	btfss	status,2,c
  2190   000AD0  EF6C  F005         	goto	u1231
  2191   000AD4  EF6E  F005         	goto	u1230
  2192   000AD8                     u1231:
  2193   000AD8  EF81  F005         	goto	l2075
  2194   000ADC                     u1230:
  2195   000ADC  EF76  F005         	goto	l2073
  2196   000AE0                     l2067:
  2197                           
  2198                           ;main.c: 296:                 RED_KEY_BYTE |= (1 << 3);
  2199   000AE0  8669               	bsf	_RED_KEY_BYTE^0,3,c
  2200                           
  2201                           ;main.c: 297:                 break;
  2202   000AE2  EF81  F005         	goto	l2075
  2203   000AE6                     l2069:
  2204                           
  2205                           ;main.c: 299:                 GREEN_KEY_BYTE |= (1 << 3);
  2206   000AE6  8668               	bsf	_GREEN_KEY_BYTE^0,3,c
  2207                           
  2208                           ;main.c: 300:                 break;
  2209   000AE8  EF81  F005         	goto	l2075
  2210   000AEC                     l2073:
  2211   000AEC  504B               	movf	scan_usr_key@retx^0,w,c
  2212                           
  2213                           ; Switch size 1, requested type "simple"
  2214                           ; Number of cases is 2, Range of values is 5 to 6
  2215                           ; switch strategies available:
  2216                           ; Name         Instructions Cycles
  2217                           ; simple_byte            7     4 (average)
  2218                           ;	Chosen strategy is simple_byte
  2219   000AEE  0A05               	xorlw	5	; case 5
  2220   000AF0  B4D8               	btfsc	status,2,c
  2221   000AF2  EF73  F005         	goto	l2069
  2222   000AF6  0A03               	xorlw	3	; case 6
  2223   000AF8  B4D8               	btfsc	status,2,c
  2224   000AFA  EF70  F005         	goto	l2067
  2225   000AFE  EF81  F005         	goto	l2075
  2226   000B02                     l2075:
  2227                           
  2228                           ;main.c: 304:     delay_ms(20);
  2229   000B02  0E00               	movlw	0
  2230   000B04  6E05               	movwf	(delay_ms@ms+1)^0,c
  2231   000B06  0E14               	movlw	20
  2232   000B08  6E04               	movwf	delay_ms@ms^0,c
  2233   000B0A  EC04  F00A         	call	_delay_ms	;wreg free
  2234   000B0E                     
  2235                           ;main.c: 305:     LATAbits.LATA0 = 0;
  2236   000B0E  9089               	bcf	137,0,c	;volatile
  2237   000B10                     
  2238                           ;main.c: 306:     LATAbits.LATA1 = 0;
  2239   000B10  9289               	bcf	137,1,c	;volatile
  2240   000B12                     
  2241                           ;main.c: 307:     LATAbits.LATA2 = 0;
  2242   000B12  9489               	bcf	137,2,c	;volatile
  2243   000B14                     
  2244                           ;main.c: 308:     LATAbits.LATA3 = 0;
  2245   000B14  9689               	bcf	137,3,c	;volatile
  2246   000B16                     
  2247                           ;main.c: 309:     LATEbits.LATE0 = 1;
  2248   000B16  808D               	bsf	141,0,c	;volatile
  2249   000B18                     
  2250                           ;main.c: 310:     LATAbits.LATA5 = 0;
  2251   000B18  9A89               	bcf	137,5,c	;volatile
  2252                           
  2253                           ;main.c: 311:     retx = read_key_inputs();
  2254   000B1A  EC4D  F009         	call	_read_key_inputs	;wreg free
  2255   000B1E  6E4B               	movwf	scan_usr_key@retx^0,c
  2256   000B20                     
  2257                           ;main.c: 312:     if (retx == 6 || retx == 5)
  2258   000B20  0E06               	movlw	6
  2259   000B22  184B               	xorwf	scan_usr_key@retx^0,w,c
  2260   000B24  B4D8               	btfsc	status,2,c
  2261   000B26  EF97  F005         	goto	u1241
  2262   000B2A  EF99  F005         	goto	u1240
  2263   000B2E                     u1241:
  2264   000B2E  EFAA  F005         	goto	l2099
  2265   000B32                     u1240:
  2266   000B32  0E05               	movlw	5
  2267   000B34  184B               	xorwf	scan_usr_key@retx^0,w,c
  2268   000B36  A4D8               	btfss	status,2,c
  2269   000B38  EFA0  F005         	goto	u1251
  2270   000B3C  EFA2  F005         	goto	u1250
  2271   000B40                     u1251:
  2272   000B40  EFB5  F005         	goto	l2101
  2273   000B44                     u1250:
  2274   000B44  EFAA  F005         	goto	l2099
  2275   000B48                     l2093:
  2276                           
  2277                           ;main.c: 317:                 RED_KEY_BYTE |= (1 << 4);
  2278   000B48  8869               	bsf	_RED_KEY_BYTE^0,4,c
  2279                           
  2280                           ;main.c: 318:                 break;
  2281   000B4A  EFB5  F005         	goto	l2101
  2282   000B4E                     l2095:
  2283                           
  2284                           ;main.c: 320:                 GREEN_KEY_BYTE |= (1 << 4);
  2285   000B4E  8868               	bsf	_GREEN_KEY_BYTE^0,4,c
  2286                           
  2287                           ;main.c: 321:                 break;
  2288   000B50  EFB5  F005         	goto	l2101
  2289   000B54                     l2099:
  2290   000B54  504B               	movf	scan_usr_key@retx^0,w,c
  2291                           
  2292                           ; Switch size 1, requested type "simple"
  2293                           ; Number of cases is 2, Range of values is 5 to 6
  2294                           ; switch strategies available:
  2295                           ; Name         Instructions Cycles
  2296                           ; simple_byte            7     4 (average)
  2297                           ;	Chosen strategy is simple_byte
  2298   000B56  0A05               	xorlw	5	; case 5
  2299   000B58  B4D8               	btfsc	status,2,c
  2300   000B5A  EFA7  F005         	goto	l2095
  2301   000B5E  0A03               	xorlw	3	; case 6
  2302   000B60  B4D8               	btfsc	status,2,c
  2303   000B62  EFA4  F005         	goto	l2093
  2304   000B66  EFB5  F005         	goto	l2101
  2305   000B6A                     l2101:
  2306                           
  2307                           ;main.c: 325:     delay_ms(20);
  2308   000B6A  0E00               	movlw	0
  2309   000B6C  6E05               	movwf	(delay_ms@ms+1)^0,c
  2310   000B6E  0E14               	movlw	20
  2311   000B70  6E04               	movwf	delay_ms@ms^0,c
  2312   000B72  EC04  F00A         	call	_delay_ms	;wreg free
  2313   000B76                     
  2314                           ;main.c: 326:     LATAbits.LATA0 = 0;
  2315   000B76  9089               	bcf	137,0,c	;volatile
  2316   000B78                     
  2317                           ;main.c: 327:     LATAbits.LATA1 = 0;
  2318   000B78  9289               	bcf	137,1,c	;volatile
  2319   000B7A                     
  2320                           ;main.c: 328:     LATAbits.LATA2 = 0;
  2321   000B7A  9489               	bcf	137,2,c	;volatile
  2322   000B7C                     
  2323                           ;main.c: 329:     LATAbits.LATA3 = 0;
  2324   000B7C  9689               	bcf	137,3,c	;volatile
  2325   000B7E                     
  2326                           ;main.c: 330:     LATEbits.LATE0 = 0;
  2327   000B7E  908D               	bcf	141,0,c	;volatile
  2328   000B80                     
  2329                           ;main.c: 331:     LATAbits.LATA5 = 1;
  2330   000B80  8A89               	bsf	137,5,c	;volatile
  2331                           
  2332                           ;main.c: 332:     retx = read_key_inputs();
  2333   000B82  EC4D  F009         	call	_read_key_inputs	;wreg free
  2334   000B86  6E4B               	movwf	scan_usr_key@retx^0,c
  2335   000B88                     
  2336                           ;main.c: 333:     if (retx == 6 || retx == 5)
  2337   000B88  0E06               	movlw	6
  2338   000B8A  184B               	xorwf	scan_usr_key@retx^0,w,c
  2339   000B8C  B4D8               	btfsc	status,2,c
  2340   000B8E  EFCB  F005         	goto	u1261
  2341   000B92  EFCD  F005         	goto	u1260
  2342   000B96                     u1261:
  2343   000B96  EFDE  F005         	goto	l2125
  2344   000B9A                     u1260:
  2345   000B9A  0E05               	movlw	5
  2346   000B9C  184B               	xorwf	scan_usr_key@retx^0,w,c
  2347   000B9E  A4D8               	btfss	status,2,c
  2348   000BA0  EFD4  F005         	goto	u1271
  2349   000BA4  EFD6  F005         	goto	u1270
  2350   000BA8                     u1271:
  2351   000BA8  EFE9  F005         	goto	l2127
  2352   000BAC                     u1270:
  2353   000BAC  EFDE  F005         	goto	l2125
  2354   000BB0                     l2119:
  2355                           
  2356                           ;main.c: 338:                 RED_KEY_BYTE |= (1 << 5);
  2357   000BB0  8A69               	bsf	_RED_KEY_BYTE^0,5,c
  2358                           
  2359                           ;main.c: 339:                 break;
  2360   000BB2  EFE9  F005         	goto	l2127
  2361   000BB6                     l2121:
  2362                           
  2363                           ;main.c: 341:                 GREEN_KEY_BYTE |= (1 << 5);
  2364   000BB6  8A68               	bsf	_GREEN_KEY_BYTE^0,5,c
  2365                           
  2366                           ;main.c: 342:                 break;
  2367   000BB8  EFE9  F005         	goto	l2127
  2368   000BBC                     l2125:
  2369   000BBC  504B               	movf	scan_usr_key@retx^0,w,c
  2370                           
  2371                           ; Switch size 1, requested type "simple"
  2372                           ; Number of cases is 2, Range of values is 5 to 6
  2373                           ; switch strategies available:
  2374                           ; Name         Instructions Cycles
  2375                           ; simple_byte            7     4 (average)
  2376                           ;	Chosen strategy is simple_byte
  2377   000BBE  0A05               	xorlw	5	; case 5
  2378   000BC0  B4D8               	btfsc	status,2,c
  2379   000BC2  EFDB  F005         	goto	l2121
  2380   000BC6  0A03               	xorlw	3	; case 6
  2381   000BC8  B4D8               	btfsc	status,2,c
  2382   000BCA  EFD8  F005         	goto	l2119
  2383   000BCE  EFE9  F005         	goto	l2127
  2384   000BD2                     l2127:
  2385                           
  2386                           ;main.c: 346:     char xbuffer[10];;main.c: 347:     sprintf(xbuffer, "RC:%04X\r\n", get
      +                          _key_value());
  2387   000BD2  0E41               	movlw	low scan_usr_key@xbuffer
  2388   000BD4  6E31               	movwf	sprintf@s^0,c
  2389   000BD6  0E29               	movlw	low STR_1
  2390   000BD8  6E32               	movwf	sprintf@fmt^0,c
  2391   000BDA  EC73  F00A         	call	_get_key_value	;wreg free
  2392   000BDE  C004  F033         	movff	?_get_key_value,?_sprintf+2
  2393   000BE2  C005  F034         	movff	?_get_key_value+1,?_sprintf+3
  2394   000BE6  ECEA  F009         	call	_sprintf	;wreg free
  2395   000BEA                     
  2396                           ;main.c: 348:     UART_SendString(xbuffer);
  2397   000BEA  0E41               	movlw	low scan_usr_key@xbuffer
  2398   000BEC  6E05               	movwf	UART_SendString@str^0,c
  2399   000BEE  6A06               	clrf	(UART_SendString@str+1)^0,c
  2400   000BF0  ECF0  F008         	call	_UART_SendString	;wreg free
  2401   000BF4  0012               	return		;funcret
  2402   000BF6                     __end_of_scan_usr_key:
  2403                           	callstack 0
  2404                           
  2405 ;; *************** function _sprintf *****************
  2406 ;; Defined at:
  2407 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  s               1   48[COMRAM] PTR unsigned char 
  2410 ;;		 -> main@xbuffer_606(10), main@xbuffer(10), scan_usr_key@xbuffer(10), 
  2411 ;;  fmt             1   49[COMRAM] PTR const unsigned char 
  2412 ;;		 -> STR_28(10), STR_25(10), STR_1(10), 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  f              11   53[COMRAM] struct _IO_FILE
  2415 ;;  ret             2    0        int 
  2416 ;;  ap              1   52[COMRAM] PTR void [1]
  2417 ;;		 -> ?_sprintf(2), 
  2418 ;; Return value:  Size  Location     Type
  2419 ;;                  2   48[COMRAM] int 
  2420 ;; Registers used:
  2421 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2422 ;; Tracked objects:
  2423 ;;		On entry : 0/0
  2424 ;;		On exit  : 0/0
  2425 ;;		Unchanged: 0/0
  2426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2427 ;;      Params:         4       0       0       0       0       0       0
  2428 ;;      Locals:        12       0       0       0       0       0       0
  2429 ;;      Temps:          0       0       0       0       0       0       0
  2430 ;;      Totals:        16       0       0       0       0       0       0
  2431 ;;Total ram usage:       16 bytes
  2432 ;; Hardware stack levels used: 1
  2433 ;; Hardware stack levels required when called: 8
  2434 ;; This function calls:
  2435 ;;		_vfprintf
  2436 ;; This function is called by:
  2437 ;;		_scan_usr_key
  2438 ;;		_main
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           	psect	text6
  2443   0013D4                     __ptext6:
  2444                           	callstack 0
  2445   0013D4                     _sprintf:
  2446                           	callstack 22
  2447   0013D4  0E33               	movlw	low (?_sprintf+2)
  2448   0013D6  6E35               	movwf	sprintf@ap^0,c
  2449   0013D8  C031  F036         	movff	sprintf@s,sprintf@f
  2450   0013DC  0E00               	movlw	0
  2451   0013DE  6E39               	movwf	(sprintf@f+3)^0,c
  2452   0013E0  0E00               	movlw	0
  2453   0013E2  6E38               	movwf	(sprintf@f+2)^0,c
  2454   0013E4  0E00               	movlw	0
  2455   0013E6  6E40               	movwf	(sprintf@f+10)^0,c
  2456   0013E8  0E00               	movlw	0
  2457   0013EA  6E3F               	movwf	(sprintf@f+9)^0,c
  2458   0013EC  0E36               	movlw	low sprintf@f
  2459   0013EE  6E2D               	movwf	vfprintf@fp^0,c
  2460   0013F0  C032  F02E         	movff	sprintf@fmt,vfprintf@fmt
  2461   0013F4  0E35               	movlw	low sprintf@ap
  2462   0013F6  6E2F               	movwf	vfprintf@ap^0,c
  2463   0013F8  EC76  F009         	call	_vfprintf	;wreg free
  2464   0013FC  5031               	movf	sprintf@s^0,w,c
  2465   0013FE  2438               	addwf	(sprintf@f+2)^0,w,c
  2466   001400  6ED9               	movwf	fsr2l,c
  2467   001402  6ADA               	clrf	fsr2h,c
  2468   001404  6ADF               	clrf	indf2,c
  2469   001406  0012               	return		;funcret
  2470   001408                     __end_of_sprintf:
  2471                           	callstack 0
  2472                           
  2473 ;; *************** function _vfprintf *****************
  2474 ;; Defined at:
  2475 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;  fp              1   44[COMRAM] PTR struct _IO_FILE
  2478 ;;		 -> sprintf@f(11), 
  2479 ;;  fmt             1   45[COMRAM] PTR const unsigned char 
  2480 ;;		 -> STR_28(10), STR_25(10), STR_1(10), 
  2481 ;;  ap              1   46[COMRAM] PTR PTR void 
  2482 ;;		 -> sprintf@ap(1), 
  2483 ;; Auto vars:     Size  Location     Type
  2484 ;;  cfmt            1   47[COMRAM] PTR unsigned char 
  2485 ;;		 -> STR_28(10), STR_25(10), STR_1(10), 
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  2   44[COMRAM] int 
  2488 ;; Registers used:
  2489 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2495 ;;      Params:         3       0       0       0       0       0       0
  2496 ;;      Locals:         1       0       0       0       0       0       0
  2497 ;;      Temps:          0       0       0       0       0       0       0
  2498 ;;      Totals:         4       0       0       0       0       0       0
  2499 ;;Total ram usage:        4 bytes
  2500 ;; Hardware stack levels used: 1
  2501 ;; Hardware stack levels required when called: 7
  2502 ;; This function calls:
  2503 ;;		_vfpfcnvrt
  2504 ;; This function is called by:
  2505 ;;		_sprintf
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text7
  2510   0012EC                     __ptext7:
  2511                           	callstack 0
  2512   0012EC                     _vfprintf:
  2513                           	callstack 22
  2514   0012EC                     
  2515                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2516   0012EC  C02E  F030         	movff	vfprintf@fmt,vfprintf@cfmt
  2517                           
  2518                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2519   0012F0  EF82  F009         	goto	l1839
  2520   0012F4                     l1837:
  2521                           
  2522                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2523   0012F4  C02D  F024         	movff	vfprintf@fp,vfpfcnvrt@fp
  2524   0012F8  0E30               	movlw	low vfprintf@cfmt
  2525   0012FA  6E25               	movwf	vfpfcnvrt@fmt^0,c
  2526   0012FC  C02F  F026         	movff	vfprintf@ap,vfpfcnvrt@ap
  2527   001300  ECFB  F005         	call	_vfpfcnvrt	;wreg free
  2528   001304                     l1839:
  2529                           
  2530                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2531   001304  C030  FFF6         	movff	vfprintf@cfmt,tblptrl
  2532   001308                     	if	1	;There is more than 1 active tblptr byte
  2533   001308  0E06               	movlw	high __smallconst
  2534   00130A  6EF7               	movwf	tblptrh,c
  2535   00130C                     	endif
  2536   00130C                     	if	0	;tblptru may be non-zero
  2537   00130C                     	endif
  2538   00130C                     	if	0	;tblptru may be non-zero
  2539   00130C                     	endif
  2540   00130C  0008               	tblrd		*
  2541   00130E  50F5               	movf	tablat,w,c
  2542   001310  0900               	iorlw	0
  2543   001312  A4D8               	btfss	status,2,c
  2544   001314  EF8E  F009         	goto	u1001
  2545   001318  EF90  F009         	goto	u1000
  2546   00131C                     u1001:
  2547   00131C  EF7A  F009         	goto	l1837
  2548   001320                     u1000:
  2549   001320                     
  2550                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2551   001320  0E00               	movlw	0
  2552   001322  6E2E               	movwf	(?_vfprintf+1)^0,c
  2553   001324  0E00               	movlw	0
  2554   001326  6E2D               	movwf	?_vfprintf^0,c
  2555   001328  0012               	return		;funcret
  2556   00132A                     __end_of_vfprintf:
  2557                           	callstack 0
  2558                           
  2559 ;; *************** function _vfpfcnvrt *****************
  2560 ;; Defined at:
  2561 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;  fp              1   35[COMRAM] PTR struct _IO_FILE
  2564 ;;		 -> sprintf@f(11), 
  2565 ;;  fmt             1   36[COMRAM] PTR PTR unsigned char 
  2566 ;;		 -> vfprintf@cfmt(1), 
  2567 ;;  ap              1   37[COMRAM] PTR PTR void 
  2568 ;;		 -> sprintf@ap(1), 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  convarg         4   38[COMRAM] struct .
  2571 ;;  cp              1   43[COMRAM] PTR unsigned char 
  2572 ;;		 -> STR_28(10), STR_25(10), STR_1(10), 
  2573 ;;  done            1   42[COMRAM] _Bool 
  2574 ;;  c               1    0        unsigned char 
  2575 ;; Return value:  Size  Location     Type
  2576 ;;                  1    wreg      void 
  2577 ;; Registers used:
  2578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2579 ;; Tracked objects:
  2580 ;;		On entry : 0/0
  2581 ;;		On exit  : 0/0
  2582 ;;		Unchanged: 0/0
  2583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2584 ;;      Params:         3       0       0       0       0       0       0
  2585 ;;      Locals:         6       0       0       0       0       0       0
  2586 ;;      Temps:          0       0       0       0       0       0       0
  2587 ;;      Totals:         9       0       0       0       0       0       0
  2588 ;;Total ram usage:        9 bytes
  2589 ;; Hardware stack levels used: 1
  2590 ;; Hardware stack levels required when called: 6
  2591 ;; This function calls:
  2592 ;;		_fputc
  2593 ;;		_read_prec_or_width
  2594 ;;		_xtoa
  2595 ;; This function is called by:
  2596 ;;		_vfprintf
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600                           	psect	text8
  2601   000BF6                     __ptext8:
  2602                           	callstack 0
  2603   000BF6                     _vfpfcnvrt:
  2604                           	callstack 22
  2605   000BF6                     
  2606                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2607   000BF6  5025               	movf	vfpfcnvrt@fmt^0,w,c
  2608   000BF8  6ED9               	movwf	fsr2l,c
  2609   000BFA  6ADA               	clrf	fsr2h,c
  2610   000BFC  CFDF FFF6          	movff	indf2,tblptrl
  2611   000C00                     	if	1	;There is more than 1 active tblptr byte
  2612   000C00  0E06               	movlw	high __smallconst
  2613   000C02  6EF7               	movwf	tblptrh,c
  2614   000C04                     	endif
  2615   000C04                     	if	0	;tblptru may be non-zero
  2616   000C04                     	endif
  2617   000C04                     	if	0	;tblptru may be non-zero
  2618   000C04                     	endif
  2619   000C04  0008               	tblrd		*
  2620   000C06  50F5               	movf	tablat,w,c
  2621   000C08  0A25               	xorlw	37
  2622   000C0A  A4D8               	btfss	status,2,c
  2623   000C0C  EF0A  F006         	goto	u951
  2624   000C10  EF0C  F006         	goto	u950
  2625   000C14                     u951:
  2626   000C14  EF95  F006         	goto	l1825
  2627   000C18                     u950:
  2628   000C18                     
  2629                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2630   000C18  5025               	movf	vfpfcnvrt@fmt^0,w,c
  2631   000C1A  6ED9               	movwf	fsr2l,c
  2632   000C1C  6ADA               	clrf	fsr2h,c
  2633   000C1E  2ADF               	incf	indf2,f,c
  2634   000C20                     
  2635                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2636   000C20  0E00               	movlw	0
  2637   000C22  6E64               	movwf	(_width+1)^0,c
  2638   000C24  0E00               	movlw	0
  2639   000C26  6E63               	movwf	_width^0,c
  2640   000C28  C063  F067         	movff	_width,_flags
  2641   000C2C                     
  2642                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2643   000C2C  6865               	setf	_prec^0,c
  2644   000C2E  6866               	setf	(_prec+1)^0,c
  2645   000C30                     
  2646                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  2647   000C30  6A2B               	clrf	vfpfcnvrt@done^0,c
  2648                           
  2649                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2650   000C32  EF35  F006         	goto	l1797
  2651   000C36                     l1787:
  2652                           
  2653                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  2654   000C36  8267               	bsf	_flags^0,1,c
  2655   000C38                     
  2656                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  2657   000C38  5025               	movf	vfpfcnvrt@fmt^0,w,c
  2658   000C3A  6ED9               	movwf	fsr2l,c
  2659   000C3C  6ADA               	clrf	fsr2h,c
  2660   000C3E  2ADF               	incf	indf2,f,c
  2661                           
  2662                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  2663   000C40  EF35  F006         	goto	l1797
  2664   000C44                     l1791:
  2665                           
  2666                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  2667   000C44  0E01               	movlw	1
  2668   000C46  6E2B               	movwf	vfpfcnvrt@done^0,c
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  2671   000C48  EF35  F006         	goto	l1797
  2672   000C4C                     l1795:
  2673   000C4C  5025               	movf	vfpfcnvrt@fmt^0,w,c
  2674   000C4E  6ED9               	movwf	fsr2l,c
  2675   000C50  6ADA               	clrf	fsr2h,c
  2676   000C52  CFDF FFF6          	movff	indf2,tblptrl
  2677   000C56                     	if	1	;There is more than 1 active tblptr byte
  2678   000C56  0E06               	movlw	high __smallconst
  2679   000C58  6EF7               	movwf	tblptrh,c
  2680   000C5A                     	endif
  2681   000C5A                     	if	0	;tblptru may be non-zero
  2682   000C5A                     	endif
  2683   000C5A                     	if	0	;tblptru may be non-zero
  2684   000C5A                     	endif
  2685   000C5A  0008               	tblrd		*
  2686   000C5C  50F5               	movf	tablat,w,c
  2687                           
  2688                           ; Switch size 1, requested type "simple"
  2689                           ; Number of cases is 1, Range of values is 48 to 48
  2690                           ; switch strategies available:
  2691                           ; Name         Instructions Cycles
  2692                           ; simple_byte            4     3 (average)
  2693                           ;	Chosen strategy is simple_byte
  2694   000C5E  0A30               	xorlw	48	; case 48
  2695   000C60  B4D8               	btfsc	status,2,c
  2696   000C62  EF1B  F006         	goto	l1787
  2697   000C66  EF22  F006         	goto	l1791
  2698   000C6A                     l1797:
  2699                           
  2700                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2701   000C6A  502B               	movf	vfpfcnvrt@done^0,w,c
  2702   000C6C  B4D8               	btfsc	status,2,c
  2703   000C6E  EF3B  F006         	goto	u961
  2704   000C72  EF3D  F006         	goto	u960
  2705   000C76                     u961:
  2706   000C76  EF26  F006         	goto	l1795
  2707   000C7A                     u960:
  2708   000C7A                     
  2709                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2710   000C7A  C025  F004         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2711   000C7E  C026  F005         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2712   000C82  ECD5  F007         	call	_read_prec_or_width	;wreg free
  2713   000C86  C004  F063         	movff	?_read_prec_or_width,_width
  2714   000C8A  C005  F064         	movff	?_read_prec_or_width+1,_width+1
  2715   000C8E                     
  2716                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  2717   000C8E  BE64               	btfsc	(_width+1)^0,7,c
  2718   000C90  EF4E  F006         	goto	u970
  2719   000C94  EF4C  F006         	goto	u971
  2720   000C98                     u971:
  2721   000C98  EF53  F006         	goto	l1805
  2722   000C9C                     u970:
  2723   000C9C                     
  2724                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  2725   000C9C  8067               	bsf	_flags^0,0,c
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  2728   000C9E  6C63               	negf	_width^0,c
  2729   000CA0  1E64               	comf	(_width+1)^0,f,c
  2730   000CA2  B0D8               	btfsc	status,0,c
  2731   000CA4  2A64               	incf	(_width+1)^0,f,c
  2732   000CA6                     l1805:
  2733                           
  2734                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1439:   if (0
  2735   000CA6  5025               	movf	vfpfcnvrt@fmt^0,w,c
  2736   000CA8  6ED9               	movwf	fsr2l,c
  2737   000CAA  6ADA               	clrf	fsr2h,c
  2738   000CAC  50DF               	movf	indf2,w,c
  2739   000CAE  6E2C               	movwf	vfpfcnvrt@cp^0,c
  2740   000CB0  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2741   000CB4                     	if	1	;There is more than 1 active tblptr byte
  2742   000CB4  0E06               	movlw	high __smallconst
  2743   000CB6  6EF7               	movwf	tblptrh,c
  2744   000CB8                     	endif
  2745   000CB8                     	if	0	;tblptru may be non-zero
  2746   000CB8                     	endif
  2747   000CB8                     	if	0	;tblptru may be non-zero
  2748   000CB8                     	endif
  2749   000CB8  0008               	tblrd		*
  2750   000CBA  50F5               	movf	tablat,w,c
  2751   000CBC  0A58               	xorlw	88
  2752   000CBE  A4D8               	btfss	status,2,c
  2753   000CC0  EF64  F006         	goto	u981
  2754   000CC4  EF66  F006         	goto	u980
  2755   000CC8                     u981:
  2756   000CC8  EF8F  F006         	goto	l1821
  2757   000CCC                     u980:
  2758   000CCC                     
  2759                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2760   000CCC  5026               	movf	vfpfcnvrt@ap^0,w,c
  2761   000CCE  6ED9               	movwf	fsr2l,c
  2762   000CD0  6ADA               	clrf	fsr2h,c
  2763   000CD2  0E02               	movlw	2
  2764   000CD4  26DF               	addwf	indf2,f,c
  2765   000CD6  5CDF               	subwf	indf2,w,c
  2766   000CD8  6ED9               	movwf	fsr2l,c
  2767   000CDA  6ADA               	clrf	fsr2h,c
  2768   000CDC  CFDE F027          	movff	postinc2,vfpfcnvrt@convarg
  2769   000CE0  CFDE F028          	movff	postinc2,vfpfcnvrt@convarg+1
  2770   000CE4                     
  2771                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2772   000CE4  5025               	movf	vfpfcnvrt@fmt^0,w,c
  2773   000CE6  6ED9               	movwf	fsr2l,c
  2774   000CE8  6ADA               	clrf	fsr2h,c
  2775   000CEA  282C               	incf	vfpfcnvrt@cp^0,w,c
  2776   000CEC  6EDF               	movwf	indf2,c
  2777                           
  2778                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  2779   000CEE  EF83  F006         	goto	l1819
  2780   000CF2                     l1813:
  2781                           
  2782                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1586:      return
      +                           (void) xtoa(fp,convarg.uint);;	Return value of _vfpfcnvrt is never used
  2783   000CF2  C024  F018         	movff	vfpfcnvrt@fp,xtoa@fp
  2784   000CF6  C027  F019         	movff	vfpfcnvrt@convarg,xtoa@d
  2785   000CFA  C028  F01A         	movff	vfpfcnvrt@convarg+1,xtoa@d+1
  2786   000CFE  ECA7  F006         	call	_xtoa	;wreg free
  2787   000D02  EFA6  F006         	goto	l982
  2788   000D06                     l1819:
  2789   000D06  C02C  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2790   000D0A                     	if	1	;There is more than 1 active tblptr byte
  2791   000D0A  0E06               	movlw	high __smallconst
  2792   000D0C  6EF7               	movwf	tblptrh,c
  2793   000D0E                     	endif
  2794   000D0E                     	if	0	;tblptru may be non-zero
  2795   000D0E                     	endif
  2796   000D0E                     	if	0	;tblptru may be non-zero
  2797   000D0E                     	endif
  2798   000D0E  0008               	tblrd		*
  2799   000D10  50F5               	movf	tablat,w,c
  2800                           
  2801                           ; Switch size 1, requested type "simple"
  2802                           ; Number of cases is 1, Range of values is 88 to 88
  2803                           ; switch strategies available:
  2804                           ; Name         Instructions Cycles
  2805                           ; simple_byte            4     3 (average)
  2806                           ;	Chosen strategy is simple_byte
  2807   000D12  0A58               	xorlw	88	; case 88
  2808   000D14  B4D8               	btfsc	status,2,c
  2809   000D16  EF79  F006         	goto	l1813
  2810   000D1A  EF8F  F006         	goto	l1821
  2811   000D1E                     l1821:
  2812                           
  2813                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2814   000D1E  5025               	movf	vfpfcnvrt@fmt^0,w,c
  2815   000D20  6ED9               	movwf	fsr2l,c
  2816   000D22  6ADA               	clrf	fsr2h,c
  2817   000D24  2ADF               	incf	indf2,f,c
  2818   000D26  EFA6  F006         	goto	l982
  2819   000D2A                     l1825:
  2820                           
  2821                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2822   000D2A  5025               	movf	vfpfcnvrt@fmt^0,w,c
  2823   000D2C  6ED9               	movwf	fsr2l,c
  2824   000D2E  6ADA               	clrf	fsr2h,c
  2825   000D30  CFDF FFF6          	movff	indf2,tblptrl
  2826   000D34                     	if	1	;There is more than 1 active tblptr byte
  2827   000D34  0E06               	movlw	high __smallconst
  2828   000D36  6EF7               	movwf	tblptrh,c
  2829   000D38                     	endif
  2830   000D38                     	if	0	;tblptru may be non-zero
  2831   000D38                     	endif
  2832   000D38                     	if	0	;tblptru may be non-zero
  2833   000D38                     	endif
  2834   000D38  0008               	tblrd		*
  2835   000D3A  50F5               	movf	tablat,w,c
  2836   000D3C  6E04               	movwf	fputc@c^0,c
  2837   000D3E  6A05               	clrf	(fputc@c+1)^0,c
  2838   000D40  C024  F006         	movff	vfpfcnvrt@fp,fputc@fp
  2839   000D44  EC80  F007         	call	_fputc	;wreg free
  2840   000D48  EF8F  F006         	goto	l1821
  2841   000D4C                     l982:
  2842   000D4C  0012               	return		;funcret
  2843   000D4E                     __end_of_vfpfcnvrt:
  2844                           	callstack 0
  2845                           
  2846 ;; *************** function _xtoa *****************
  2847 ;; Defined at:
  2848 ;;		line 1055 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  2851 ;;		 -> sprintf@f(11), 
  2852 ;;  d               2   24[COMRAM] unsigned int 
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  i               2   33[COMRAM] int 
  2855 ;;  w               2   30[COMRAM] int 
  2856 ;;  c               1   32[COMRAM] unsigned char 
  2857 ;;  p               1   29[COMRAM] _Bool 
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2867 ;;      Params:         3       0       0       0       0       0       0
  2868 ;;      Locals:         6       0       0       0       0       0       0
  2869 ;;      Temps:          3       0       0       0       0       0       0
  2870 ;;      Totals:        12       0       0       0       0       0       0
  2871 ;;Total ram usage:       12 bytes
  2872 ;; Hardware stack levels used: 1
  2873 ;; Hardware stack levels required when called: 5
  2874 ;; This function calls:
  2875 ;;		_pad
  2876 ;; This function is called by:
  2877 ;;		_vfpfcnvrt
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text9
  2882   000D4E                     __ptext9:
  2883                           	callstack 0
  2884   000D4E                     _xtoa:
  2885                           	callstack 22
  2886   000D4E                     
  2887                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1055: static void
      +                           xtoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1058: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 1059:  char c;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 
      +                          1063:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c
      +                          : 1067:  _Bool p = 1;
  2888   000D4E  0E01               	movlw	1
  2889   000D50  6E1E               	movwf	xtoa@p^0,c
  2890   000D52                     
  2891                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1082:     w = wid
      +                          th;
  2892   000D52  C063  F01F         	movff	_width,xtoa@w
  2893   000D56  C064  F020         	movff	_width+1,xtoa@w+1
  2894                           
  2895                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1095:     i = siz
      +                          eof(dbuf) - 1;
  2896   000D5A  0E00               	movlw	0
  2897   000D5C  6E23               	movwf	(xtoa@i+1)^0,c
  2898   000D5E  0E1F               	movlw	31
  2899   000D60  6E22               	movwf	xtoa@i^0,c
  2900   000D62                     
  2901                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1096:     dbuf[i]
      +                           = '\0';
  2902   000D62  0100               	movlb	0	; () banked
  2903   000D64  6BC5               	clrf	(_dbuf+31)& (0+255),b
  2904                           
  2905                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  2906   000D66  EFE3  F006         	goto	l1749
  2907   000D6A                     l1731:
  2908                           
  2909                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1106:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1107:         --i;
  2910   000D6A  0622               	decf	xtoa@i^0,f,c
  2911   000D6C  A0D8               	btfss	status,0,c
  2912   000D6E  0623               	decf	(xtoa@i+1)^0,f,c
  2913   000D70                     
  2914                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1108:         c =
      +                           d & 0x0f;
  2915   000D70  5019               	movf	xtoa@d^0,w,c
  2916   000D72  0B0F               	andlw	15
  2917   000D74  6E21               	movwf	xtoa@c^0,c
  2918   000D76                     
  2919                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1109:   if (c < 1
      +                          0) {
  2920   000D76  0E0A               	movlw	10
  2921   000D78  6021               	cpfslt	xtoa@c^0,c
  2922   000D7A  EFC1  F006         	goto	u861
  2923   000D7E  EFC3  F006         	goto	u860
  2924   000D82                     u861:
  2925   000D82  EFC7  F006         	goto	l1739
  2926   000D86                     u860:
  2927   000D86                     
  2928                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1110:    c += '0'
      +                          ;
  2929   000D86  0E30               	movlw	48
  2930   000D88  2621               	addwf	xtoa@c^0,f,c
  2931                           
  2932                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1111:   }
  2933   000D8A  EFC9  F006         	goto	l1741
  2934   000D8E                     l1739:
  2935                           
  2936                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1118:    c += 'A'
      +                           - 10;
  2937   000D8E  0E37               	movlw	55
  2938   000D90  2621               	addwf	xtoa@c^0,f,c
  2939   000D92                     l1741:
  2940                           
  2941                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1121:   dbuf[i] =
      +                           c;
  2942   000D92  5022               	movf	xtoa@i^0,w,c
  2943   000D94  0FA6               	addlw	low _dbuf
  2944   000D96  6ED9               	movwf	fsr2l,c
  2945   000D98  6ADA               	clrf	fsr2h,c
  2946   000D9A  C021  FFDF         	movff	xtoa@c,indf2
  2947   000D9E                     
  2948                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1125:   p = 0;
  2949   000D9E  6A1E               	clrf	xtoa@p^0,c
  2950   000DA0                     
  2951                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1127:         --w
      +                          ;
  2952   000DA0  061F               	decf	xtoa@w^0,f,c
  2953   000DA2  A0D8               	btfss	status,0,c
  2954   000DA4  0620               	decf	(xtoa@w+1)^0,f,c
  2955   000DA6                     
  2956                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1128:         d =
      +                           d >> 4;
  2957   000DA6  C019  F01B         	movff	xtoa@d,??_xtoa
  2958   000DAA  C01A  F01C         	movff	xtoa@d+1,??_xtoa+1
  2959   000DAE  0E04               	movlw	4
  2960   000DB0  6E1D               	movwf	(??_xtoa+2)^0,c
  2961   000DB2                     u875:
  2962   000DB2  90D8               	bcf	status,0,c
  2963   000DB4  321C               	rrcf	(??_xtoa+1)^0,f,c
  2964   000DB6  321B               	rrcf	??_xtoa^0,f,c
  2965   000DB8  2E1D               	decfsz	(??_xtoa+2)^0,f,c
  2966   000DBA  EFD9  F006         	goto	u875
  2967   000DBE  C01B  F019         	movff	??_xtoa,xtoa@d
  2968   000DC2  C01C  F01A         	movff	??_xtoa+1,xtoa@d+1
  2969   000DC6                     l1749:
  2970                           
  2971                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1097:     while (
      +                          !(i < 2) && (d != 0
  2972   000DC6  BE23               	btfsc	(xtoa@i+1)^0,7,c
  2973   000DC8  EFEF  F006         	goto	u881
  2974   000DCC  5023               	movf	(xtoa@i+1)^0,w,c
  2975   000DCE  E109               	bnz	u880
  2976   000DD0  0E02               	movlw	2
  2977   000DD2  5C22               	subwf	xtoa@i^0,w,c
  2978   000DD4  A0D8               	btfss	status,0,c
  2979   000DD6  EFEF  F006         	goto	u881
  2980   000DDA  EFF1  F006         	goto	u880
  2981   000DDE                     u881:
  2982   000DDE  EF16  F007         	goto	l1759
  2983   000DE2                     u880:
  2984   000DE2  5019               	movf	xtoa@d^0,w,c
  2985   000DE4  101A               	iorwf	(xtoa@d+1)^0,w,c
  2986   000DE6  A4D8               	btfss	status,2,c
  2987   000DE8  EFF8  F006         	goto	u891
  2988   000DEC  EFFA  F006         	goto	u890
  2989   000DF0                     u891:
  2990   000DF0  EFB5  F006         	goto	l1731
  2991   000DF4                     u890:
  2992   000DF4  501E               	movf	xtoa@p^0,w,c
  2993   000DF6  A4D8               	btfss	status,2,c
  2994   000DF8  EF00  F007         	goto	u901
  2995   000DFC  EF02  F007         	goto	u900
  2996   000E00                     u901:
  2997   000E00  EFB5  F006         	goto	l1731
  2998   000E04                     u900:
  2999   000E04  BE20               	btfsc	(xtoa@w+1)^0,7,c
  3000   000E06  EF0D  F007         	goto	u911
  3001   000E0A  5020               	movf	(xtoa@w+1)^0,w,c
  3002   000E0C  E108               	bnz	u910
  3003   000E0E  041F               	decf	xtoa@w^0,w,c
  3004   000E10  A0D8               	btfss	status,0,c
  3005   000E12  EF0D  F007         	goto	u911
  3006   000E16  EF0F  F007         	goto	u910
  3007   000E1A                     u911:
  3008   000E1A  EF16  F007         	goto	l1759
  3009   000E1E                     u910:
  3010   000E1E  B267               	btfsc	_flags^0,1,c
  3011   000E20  EF14  F007         	goto	u921
  3012   000E24  EF16  F007         	goto	u920
  3013   000E28                     u921:
  3014   000E28  EFB5  F006         	goto	l1731
  3015   000E2C                     u920:
  3016   000E2C                     l1759:
  3017                           
  3018                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1152:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  3019   000E2C  C018  F011         	movff	xtoa@fp,pad@fp
  3020   000E30  5022               	movf	xtoa@i^0,w,c
  3021   000E32  0FA6               	addlw	low _dbuf
  3022   000E34  6E12               	movwf	pad@buf^0,c
  3023   000E36  C01F  F013         	movff	xtoa@w,pad@p
  3024   000E3A  C020  F014         	movff	xtoa@w+1,pad@p+1
  3025   000E3E  EC71  F008         	call	_pad	;wreg free
  3026   000E42  0012               	return		;funcret
  3027   000E44                     __end_of_xtoa:
  3028                           	callstack 0
  3029                           
  3030 ;; *************** function _pad *****************
  3031 ;; Defined at:
  3032 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;  fp              1   16[COMRAM] PTR struct _IO_FILE
  3035 ;;		 -> sprintf@f(11), 
  3036 ;;  buf             1   17[COMRAM] PTR unsigned char 
  3037 ;;		 -> dbuf(32), 
  3038 ;;  p               2   18[COMRAM] int 
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  i               2   21[COMRAM] int 
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3050 ;;      Params:         4       0       0       0       0       0       0
  3051 ;;      Locals:         2       0       0       0       0       0       0
  3052 ;;      Temps:          1       0       0       0       0       0       0
  3053 ;;      Totals:         7       0       0       0       0       0       0
  3054 ;;Total ram usage:        7 bytes
  3055 ;; Hardware stack levels used: 1
  3056 ;; Hardware stack levels required when called: 4
  3057 ;; This function calls:
  3058 ;;		_fputc
  3059 ;;		_fputs
  3060 ;; This function is called by:
  3061 ;;		_xtoa
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           	psect	text10
  3066   0010E2                     __ptext10:
  3067                           	callstack 0
  3068   0010E2                     _pad:
  3069                           	callstack 22
  3070   0010E2                     
  3071                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  3072   0010E2  A067               	btfss	_flags^0,0,c
  3073   0010E4  EF76  F008         	goto	u821
  3074   0010E8  EF78  F008         	goto	u820
  3075   0010EC                     u821:
  3076   0010EC  EF7E  F008         	goto	l1713
  3077   0010F0                     u820:
  3078   0010F0                     
  3079                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  3080   0010F0  C012  F00C         	movff	pad@buf,fputs@s
  3081   0010F4  C011  F00D         	movff	pad@fp,fputs@fp
  3082   0010F8  EC95  F009         	call	_fputs	;wreg free
  3083   0010FC                     l1713:
  3084                           
  3085                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  3086   0010FC  BE14               	btfsc	(pad@p+1)^0,7,c
  3087   0010FE  EF85  F008         	goto	u830
  3088   001102  EF83  F008         	goto	u831
  3089   001106                     u831:
  3090   001106  EF89  F008         	goto	l940
  3091   00110A                     u830:
  3092   00110A                     
  3093                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3094   00110A  0E00               	movlw	0
  3095   00110C  6E14               	movwf	(pad@p+1)^0,c
  3096   00110E  0E00               	movlw	0
  3097   001110  6E13               	movwf	pad@p^0,c
  3098   001112                     l940:
  3099                           
  3100                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3101   001112  0E00               	movlw	0
  3102   001114  6E17               	movwf	(pad@i+1)^0,c
  3103   001116  0E00               	movlw	0
  3104   001118  6E16               	movwf	pad@i^0,c
  3105                           
  3106                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3107   00111A  EF99  F008         	goto	l1721
  3108   00111E                     l1717:
  3109                           
  3110                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3111   00111E  0E00               	movlw	0
  3112   001120  6E05               	movwf	(fputc@c+1)^0,c
  3113   001122  0E20               	movlw	32
  3114   001124  6E04               	movwf	fputc@c^0,c
  3115   001126  C011  F006         	movff	pad@fp,fputc@fp
  3116   00112A  EC80  F007         	call	_fputc	;wreg free
  3117   00112E                     
  3118                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3119   00112E  4A16               	infsnz	pad@i^0,f,c
  3120   001130  2A17               	incf	(pad@i+1)^0,f,c
  3121   001132                     l1721:
  3122                           
  3123                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3124   001132  5013               	movf	pad@p^0,w,c
  3125   001134  5C16               	subwf	pad@i^0,w,c
  3126   001136  5017               	movf	(pad@i+1)^0,w,c
  3127   001138  0A80               	xorlw	128
  3128   00113A  6E15               	movwf	??_pad^0,c
  3129   00113C  5014               	movf	(pad@p+1)^0,w,c
  3130   00113E  0A80               	xorlw	128
  3131   001140  5815               	subwfb	??_pad^0,w,c
  3132   001142  A0D8               	btfss	status,0,c
  3133   001144  EFA6  F008         	goto	u841
  3134   001148  EFA8  F008         	goto	u840
  3135   00114C                     u841:
  3136   00114C  EF8F  F008         	goto	l1717
  3137   001150                     u840:
  3138   001150                     
  3139                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  3140   001150  B067               	btfsc	_flags^0,0,c
  3141   001152  EFAD  F008         	goto	u851
  3142   001156  EFAF  F008         	goto	u850
  3143   00115A                     u851:
  3144   00115A  EFB5  F008         	goto	l945
  3145   00115E                     u850:
  3146   00115E                     
  3147                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3148   00115E  C012  F00C         	movff	pad@buf,fputs@s
  3149   001162  C011  F00D         	movff	pad@fp,fputs@fp
  3150   001166  EC95  F009         	call	_fputs	;wreg free
  3151   00116A                     l945:
  3152   00116A  0012               	return		;funcret
  3153   00116C                     __end_of_pad:
  3154                           	callstack 0
  3155                           
  3156 ;; *************** function _fputs *****************
  3157 ;; Defined at:
  3158 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  s               1   11[COMRAM] PTR const unsigned char 
  3161 ;;		 -> dbuf(32), 
  3162 ;;  fp              1   12[COMRAM] PTR struct _IO_FILE
  3163 ;;		 -> sprintf@f(11), 
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;  i               2   14[COMRAM] int 
  3166 ;;  c               1   13[COMRAM] unsigned char 
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  2   11[COMRAM] int 
  3169 ;; Registers used:
  3170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3176 ;;      Params:         2       0       0       0       0       0       0
  3177 ;;      Locals:         3       0       0       0       0       0       0
  3178 ;;      Temps:          0       0       0       0       0       0       0
  3179 ;;      Totals:         5       0       0       0       0       0       0
  3180 ;;Total ram usage:        5 bytes
  3181 ;; Hardware stack levels used: 1
  3182 ;; Hardware stack levels required when called: 3
  3183 ;; This function calls:
  3184 ;;		_fputc
  3185 ;; This function is called by:
  3186 ;;		_pad
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text11
  3191   00132A                     __ptext11:
  3192                           	callstack 0
  3193   00132A                     _fputs:
  3194                           	callstack 22
  3195   00132A  0E00               	movlw	0
  3196   00132C  6E10               	movwf	(fputs@i+1)^0,c
  3197   00132E  0E00               	movlw	0
  3198   001330  6E0F               	movwf	fputs@i^0,c
  3199   001332  EFA4  F009         	goto	l1707
  3200   001336                     l1703:
  3201   001336  C00E  F004         	movff	fputs@c,fputc@c
  3202   00133A  6A05               	clrf	(fputc@c+1)^0,c
  3203   00133C  C00D  F006         	movff	fputs@fp,fputc@fp
  3204   001340  EC80  F007         	call	_fputc	;wreg free
  3205   001344  4A0F               	infsnz	fputs@i^0,f,c
  3206   001346  2A10               	incf	(fputs@i+1)^0,f,c
  3207   001348                     l1707:
  3208   001348  500C               	movf	fputs@s^0,w,c
  3209   00134A  240F               	addwf	fputs@i^0,w,c
  3210   00134C  6ED9               	movwf	fsr2l,c
  3211   00134E  6ADA               	clrf	fsr2h,c
  3212   001350  50DF               	movf	indf2,w,c
  3213   001352  6E0E               	movwf	fputs@c^0,c
  3214   001354  500E               	movf	fputs@c^0,w,c
  3215   001356  A4D8               	btfss	status,2,c
  3216   001358  EFB0  F009         	goto	u811
  3217   00135C  EFB2  F009         	goto	u810
  3218   001360                     u811:
  3219   001360  EF9B  F009         	goto	l1703
  3220   001364                     u810:
  3221   001364  0012               	return		;funcret
  3222   001366                     __end_of_fputs:
  3223                           	callstack 0
  3224                           
  3225 ;; *************** function _fputc *****************
  3226 ;; Defined at:
  3227 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  3228 ;; Parameters:    Size  Location     Type
  3229 ;;  c               2    3[COMRAM] int 
  3230 ;;  fp              1    5[COMRAM] PTR struct _IO_FILE
  3231 ;;		 -> sprintf@f(11), 
  3232 ;; Auto vars:     Size  Location     Type
  3233 ;;		None
  3234 ;; Return value:  Size  Location     Type
  3235 ;;                  2    3[COMRAM] int 
  3236 ;; Registers used:
  3237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3238 ;; Tracked objects:
  3239 ;;		On entry : 0/0
  3240 ;;		On exit  : 0/0
  3241 ;;		Unchanged: 0/0
  3242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3243 ;;      Params:         3       0       0       0       0       0       0
  3244 ;;      Locals:         0       0       0       0       0       0       0
  3245 ;;      Temps:          5       0       0       0       0       0       0
  3246 ;;      Totals:         8       0       0       0       0       0       0
  3247 ;;Total ram usage:        8 bytes
  3248 ;; Hardware stack levels used: 1
  3249 ;; Hardware stack levels required when called: 2
  3250 ;; This function calls:
  3251 ;;		_putch
  3252 ;; This function is called by:
  3253 ;;		_pad
  3254 ;;		_vfpfcnvrt
  3255 ;;		_fputs
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           	psect	text12
  3260   000F00                     __ptext12:
  3261                           	callstack 0
  3262   000F00                     _fputc:
  3263                           	callstack 22
  3264   000F00  5006               	movf	fputc@fp^0,w,c
  3265   000F02  B4D8               	btfsc	status,2,c
  3266   000F04  EF86  F007         	goto	u771
  3267   000F08  EF88  F007         	goto	u770
  3268   000F0C                     u771:
  3269   000F0C  EF90  F007         	goto	l1691
  3270   000F10                     u770:
  3271   000F10  5006               	movf	fputc@fp^0,w,c
  3272   000F12  A4D8               	btfss	status,2,c
  3273   000F14  EF8E  F007         	goto	u781
  3274   000F18  EF90  F007         	goto	u780
  3275   000F1C                     u781:
  3276   000F1C  EF95  F007         	goto	l1693
  3277   000F20                     u780:
  3278   000F20                     l1691:
  3279   000F20  5004               	movf	fputc@c^0,w,c
  3280   000F22  EC93  F00A         	call	_putch
  3281   000F26  EFD4  F007         	goto	l1001
  3282   000F2A                     l1693:
  3283   000F2A  5006               	movf	fputc@fp^0,w,c
  3284   000F2C  6ED9               	movwf	fsr2l,c
  3285   000F2E  6ADA               	clrf	fsr2h,c
  3286   000F30  0E09               	movlw	9
  3287   000F32  26D9               	addwf	fsr2l,f,c
  3288   000F34  50DE               	movf	postinc2,w,c
  3289   000F36  10DE               	iorwf	postinc2,w,c
  3290   000F38  B4D8               	btfsc	status,2,c
  3291   000F3A  EFA1  F007         	goto	u791
  3292   000F3E  EFA3  F007         	goto	u790
  3293   000F42                     u791:
  3294   000F42  EFBC  F007         	goto	l1697
  3295   000F46                     u790:
  3296   000F46  5006               	movf	fputc@fp^0,w,c
  3297   000F48  6ED9               	movwf	fsr2l,c
  3298   000F4A  6ADA               	clrf	fsr2h,c
  3299   000F4C  0E09               	movlw	9
  3300   000F4E  26D9               	addwf	fsr2l,f,c
  3301   000F50  5006               	movf	fputc@fp^0,w,c
  3302   000F52  6EE1               	movwf	fsr1l,c
  3303   000F54  6AE2               	clrf	fsr1h,c
  3304   000F56  0E02               	movlw	2
  3305   000F58  26E1               	addwf	fsr1l,f,c
  3306   000F5A  50DE               	movf	postinc2,w,c
  3307   000F5C  5CE6               	subwf	postinc1,w,c
  3308   000F5E  50E6               	movf	postinc1,w,c
  3309   000F60  0A80               	xorlw	128
  3310   000F62  6E0B               	movwf	(??_fputc+4)^0,c
  3311   000F64  50DE               	movf	postinc2,w,c
  3312   000F66  0A80               	xorlw	128
  3313   000F68  580B               	subwfb	(??_fputc+4)^0,w,c
  3314   000F6A  B0D8               	btfsc	status,0,c
  3315   000F6C  EFBA  F007         	goto	u801
  3316   000F70  EFBC  F007         	goto	u800
  3317   000F74                     u801:
  3318   000F74  EFD4  F007         	goto	l1001
  3319   000F78                     u800:
  3320   000F78                     l1697:
  3321   000F78  5006               	movf	fputc@fp^0,w,c
  3322   000F7A  6ED9               	movwf	fsr2l,c
  3323   000F7C  6ADA               	clrf	fsr2h,c
  3324   000F7E  0E02               	movlw	2
  3325   000F80  26D9               	addwf	fsr2l,f,c
  3326   000F82  50DF               	movf	indf2,w,c
  3327   000F84  6E07               	movwf	??_fputc^0,c
  3328   000F86  5006               	movf	fputc@fp^0,w,c
  3329   000F88  6ED9               	movwf	fsr2l,c
  3330   000F8A  6ADA               	clrf	fsr2h,c
  3331   000F8C  50DF               	movf	indf2,w,c
  3332   000F8E  2407               	addwf	??_fputc^0,w,c
  3333   000F90  6ED9               	movwf	fsr2l,c
  3334   000F92  6ADA               	clrf	fsr2h,c
  3335   000F94  C004  FFDF         	movff	fputc@c,indf2
  3336   000F98  5006               	movf	fputc@fp^0,w,c
  3337   000F9A  6ED9               	movwf	fsr2l,c
  3338   000F9C  6ADA               	clrf	fsr2h,c
  3339   000F9E  0E02               	movlw	2
  3340   000FA0  26D9               	addwf	fsr2l,f,c
  3341   000FA2  2ADE               	incf	postinc2,f,c
  3342   000FA4  0E00               	movlw	0
  3343   000FA6  22DD               	addwfc	postdec2,f,c
  3344   000FA8                     l1001:
  3345   000FA8  0012               	return		;funcret
  3346   000FAA                     __end_of_fputc:
  3347                           	callstack 0
  3348                           
  3349 ;; *************** function _putch *****************
  3350 ;; Defined at:
  3351 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  c               1    wreg     unsigned char 
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;  c               1    0[COMRAM] unsigned char 
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      void 
  3358 ;; Registers used:
  3359 ;;		wreg
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3365 ;;      Params:         0       0       0       0       0       0       0
  3366 ;;      Locals:         0       0       0       0       0       0       0
  3367 ;;      Temps:          0       0       0       0       0       0       0
  3368 ;;      Totals:         0       0       0       0       0       0       0
  3369 ;;Total ram usage:        0 bytes
  3370 ;; Hardware stack levels used: 1
  3371 ;; Hardware stack levels required when called: 1
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_fputc
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text13
  3380   001526                     __ptext13:
  3381                           	callstack 0
  3382   001526                     _putch:
  3383                           	callstack 22
  3384   001526  0012               	return		;funcret
  3385   001528                     __end_of_putch:
  3386                           	callstack 0
  3387                           
  3388 ;; *************** function _read_prec_or_width *****************
  3389 ;; Defined at:
  3390 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  fmt             1    3[COMRAM] PTR PTR const unsigned c
  3393 ;;		 -> vfprintf@cfmt(1), 
  3394 ;;  ap              1    4[COMRAM] PTR PTR void [1]
  3395 ;;		 -> sprintf@ap(1), 
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;  c               1    7[COMRAM] unsigned char 
  3398 ;;  n               2    8[COMRAM] int 
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  2    3[COMRAM] int 
  3401 ;; Registers used:
  3402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3408 ;;      Params:         2       0       0       0       0       0       0
  3409 ;;      Locals:         3       0       0       0       0       0       0
  3410 ;;      Temps:          2       0       0       0       0       0       0
  3411 ;;      Totals:         7       0       0       0       0       0       0
  3412 ;;Total ram usage:        7 bytes
  3413 ;; Hardware stack levels used: 1
  3414 ;; Hardware stack levels required when called: 1
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_vfpfcnvrt
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           	psect	text14
  3423   000FAA                     __ptext14:
  3424                           	callstack 0
  3425   000FAA                     _read_prec_or_width:
  3426                           	callstack 26
  3427   000FAA                     
  3428                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3429   000FAA  0E00               	movlw	0
  3430   000FAC  6E0A               	movwf	(read_prec_or_width@n+1)^0,c
  3431   000FAE  0E00               	movlw	0
  3432   000FB0  6E09               	movwf	read_prec_or_width@n^0,c
  3433   000FB2                     
  3434                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3435   000FB2  5004               	movf	read_prec_or_width@fmt^0,w,c
  3436   000FB4  6ED9               	movwf	fsr2l,c
  3437   000FB6  6ADA               	clrf	fsr2h,c
  3438   000FB8  CFDF FFF6          	movff	indf2,tblptrl
  3439   000FBC                     	if	1	;There is more than 1 active tblptr byte
  3440   000FBC  0E06               	movlw	high __smallconst
  3441   000FBE  6EF7               	movwf	tblptrh,c
  3442   000FC0                     	endif
  3443   000FC0                     	if	0	;tblptru may be non-zero
  3444   000FC0                     	endif
  3445   000FC0                     	if	0	;tblptru may be non-zero
  3446   000FC0                     	endif
  3447   000FC0  0008               	tblrd		*
  3448   000FC2  50F5               	movf	tablat,w,c
  3449   000FC4  0A2A               	xorlw	42
  3450   000FC6  A4D8               	btfss	status,2,c
  3451   000FC8  EFE8  F007         	goto	u931
  3452   000FCC  EFEA  F007         	goto	u930
  3453   000FD0                     u931:
  3454   000FD0  EF0F  F008         	goto	l1775
  3455   000FD4                     u930:
  3456   000FD4                     
  3457                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  3458   000FD4  5004               	movf	read_prec_or_width@fmt^0,w,c
  3459   000FD6  6ED9               	movwf	fsr2l,c
  3460   000FD8  6ADA               	clrf	fsr2h,c
  3461   000FDA  2ADF               	incf	indf2,f,c
  3462   000FDC                     
  3463                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3464   000FDC  5005               	movf	read_prec_or_width@ap^0,w,c
  3465   000FDE  6ED9               	movwf	fsr2l,c
  3466   000FE0  6ADA               	clrf	fsr2h,c
  3467   000FE2  0E02               	movlw	2
  3468   000FE4  26DF               	addwf	indf2,f,c
  3469   000FE6  5CDF               	subwf	indf2,w,c
  3470   000FE8  6ED9               	movwf	fsr2l,c
  3471   000FEA  6ADA               	clrf	fsr2h,c
  3472   000FEC  CFDE F009          	movff	postinc2,read_prec_or_width@n
  3473   000FF0  CFDE F00A          	movff	postinc2,read_prec_or_width@n+1
  3474                           
  3475                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  3476   000FF4  EF22  F008         	goto	l961
  3477   000FF8                     l1771:
  3478                           
  3479                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  3480   000FF8  0E0A               	movlw	10
  3481   000FFA  0209               	mulwf	read_prec_or_width@n^0,c
  3482   000FFC  CFF3 F006          	movff	prodl,??_read_prec_or_width
  3483   001000  CFF4 F007          	movff	prodh,??_read_prec_or_width+1
  3484   001004  020A               	mulwf	(read_prec_or_width@n+1)^0,c
  3485   001006  50F3               	movf	prodl,w,c
  3486   001008  2607               	addwf	(??_read_prec_or_width+1)^0,f,c
  3487   00100A  5008               	movf	read_prec_or_width@c^0,w,c
  3488   00100C  2406               	addwf	??_read_prec_or_width^0,w,c
  3489   00100E  6E09               	movwf	read_prec_or_width@n^0,c
  3490   001010  0E00               	movlw	0
  3491   001012  2007               	addwfc	(??_read_prec_or_width+1)^0,w,c
  3492   001014  6E0A               	movwf	(read_prec_or_width@n+1)^0,c
  3493   001016                     
  3494                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  3495   001016  5004               	movf	read_prec_or_width@fmt^0,w,c
  3496   001018  6ED9               	movwf	fsr2l,c
  3497   00101A  6ADA               	clrf	fsr2h,c
  3498   00101C  2ADF               	incf	indf2,f,c
  3499   00101E                     l1775:
  3500                           
  3501                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3502   00101E  5004               	movf	read_prec_or_width@fmt^0,w,c
  3503   001020  6ED9               	movwf	fsr2l,c
  3504   001022  6ADA               	clrf	fsr2h,c
  3505   001024  CFDF FFF6          	movff	indf2,tblptrl
  3506   001028                     	if	1	;There is more than 1 active tblptr byte
  3507   001028  0E06               	movlw	high __smallconst
  3508   00102A  6EF7               	movwf	tblptrh,c
  3509   00102C                     	endif
  3510   00102C                     	if	0	;tblptru may be non-zero
  3511   00102C                     	endif
  3512   00102C                     	if	0	;tblptru may be non-zero
  3513   00102C                     	endif
  3514   00102C  0008               	tblrd		*
  3515   00102E  50F5               	movf	tablat,w,c
  3516   001030  0FD0               	addlw	208
  3517   001032  6E08               	movwf	read_prec_or_width@c^0,c
  3518   001034  0E09               	movlw	9
  3519   001036  6408               	cpfsgt	read_prec_or_width@c^0,c
  3520   001038  EF20  F008         	goto	u941
  3521   00103C  EF22  F008         	goto	u940
  3522   001040                     u941:
  3523   001040  EFFC  F007         	goto	l1771
  3524   001044                     u940:
  3525   001044                     l961:
  3526                           
  3527                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  3528   001044  C009  F004         	movff	read_prec_or_width@n,?_read_prec_or_width
  3529   001048  C00A  F005         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  3530   00104C  0012               	return		;funcret
  3531   00104E                     __end_of_read_prec_or_width:
  3532                           	callstack 0
  3533                           
  3534 ;; *************** function _read_key_inputs *****************
  3535 ;; Defined at:
  3536 ;;		line 97 in file "main.c"
  3537 ;; Parameters:    Size  Location     Type
  3538 ;;		None
  3539 ;; Auto vars:     Size  Location     Type
  3540 ;;  result          1    4[COMRAM] unsigned char 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  1    wreg      unsigned char 
  3543 ;; Registers used:
  3544 ;;		wreg, status,2, status,0
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3550 ;;      Params:         0       0       0       0       0       0       0
  3551 ;;      Locals:         1       0       0       0       0       0       0
  3552 ;;      Temps:          1       0       0       0       0       0       0
  3553 ;;      Totals:         2       0       0       0       0       0       0
  3554 ;;Total ram usage:        2 bytes
  3555 ;; Hardware stack levels used: 1
  3556 ;; Hardware stack levels required when called: 1
  3557 ;; This function calls:
  3558 ;;		Nothing
  3559 ;; This function is called by:
  3560 ;;		_scan_usr_key
  3561 ;; This function uses a non-reentrant model
  3562 ;;
  3563                           
  3564                           	psect	text15
  3565   00129A                     __ptext15:
  3566                           	callstack 0
  3567   00129A                     _read_key_inputs:
  3568                           	callstack 28
  3569   00129A                     
  3570                           ;main.c: 99:     uint8_t result = 0;
  3571   00129A  6A05               	clrf	read_key_inputs@result^0,c
  3572   00129C                     
  3573                           ;main.c: 101:     result |= (PORTCbits.RC0 << 0);
  3574   00129C  B082               	btfsc	130,0,c	;volatile
  3575   00129E  EF53  F009         	goto	u1021
  3576   0012A2  EF56  F009         	goto	u1020
  3577   0012A6                     u1021:
  3578   0012A6  0E01               	movlw	1
  3579   0012A8  EF57  F009         	goto	u1026
  3580   0012AC                     u1020:
  3581   0012AC  0E00               	movlw	0
  3582   0012AE                     u1026:
  3583   0012AE  1205               	iorwf	read_key_inputs@result^0,f,c
  3584                           
  3585                           ;main.c: 102:     result |= (PORTCbits.RC1 << 1);
  3586   0012B0  B282               	btfsc	130,1,c	;volatile
  3587   0012B2  EF5D  F009         	goto	u1031
  3588   0012B6  EF61  F009         	goto	u1030
  3589   0012BA                     u1031:
  3590   0012BA  6A04               	clrf	??_read_key_inputs^0,c
  3591   0012BC  2A04               	incf	??_read_key_inputs^0,f,c
  3592   0012BE  EF62  F009         	goto	u1038
  3593   0012C2                     u1030:
  3594   0012C2  6A04               	clrf	??_read_key_inputs^0,c
  3595   0012C4                     u1038:
  3596   0012C4  90D8               	bcf	status,0,c
  3597   0012C6  3404               	rlcf	??_read_key_inputs^0,w,c
  3598   0012C8  1205               	iorwf	read_key_inputs@result^0,f,c
  3599                           
  3600                           ;main.c: 103:     result |= (PORTCbits.RC2 << 2);
  3601   0012CA  B482               	btfsc	130,2,c	;volatile
  3602   0012CC  EF6A  F009         	goto	u1041
  3603   0012D0  EF6E  F009         	goto	u1040
  3604   0012D4                     u1041:
  3605   0012D4  6A04               	clrf	??_read_key_inputs^0,c
  3606   0012D6  2A04               	incf	??_read_key_inputs^0,f,c
  3607   0012D8  EF6F  F009         	goto	u1048
  3608   0012DC                     u1040:
  3609   0012DC  6A04               	clrf	??_read_key_inputs^0,c
  3610   0012DE                     u1048:
  3611   0012DE  90D8               	bcf	status,0,c
  3612   0012E0  3604               	rlcf	??_read_key_inputs^0,f,c
  3613   0012E2  90D8               	bcf	status,0,c
  3614   0012E4  3404               	rlcf	??_read_key_inputs^0,w,c
  3615   0012E6  1205               	iorwf	read_key_inputs@result^0,f,c
  3616   0012E8                     
  3617                           ;main.c: 104:     return result;
  3618   0012E8  5005               	movf	read_key_inputs@result^0,w,c
  3619   0012EA  0012               	return		;funcret
  3620   0012EC                     __end_of_read_key_inputs:
  3621                           	callstack 0
  3622                           
  3623 ;; *************** function _get_key_value *****************
  3624 ;; Defined at:
  3625 ;;		line 209 in file "main.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;		None
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;		None
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  2    3[COMRAM] unsigned short 
  3632 ;; Registers used:
  3633 ;;		wreg, status,2, status,0
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3639 ;;      Params:         2       0       0       0       0       0       0
  3640 ;;      Locals:         0       0       0       0       0       0       0
  3641 ;;      Temps:          2       0       0       0       0       0       0
  3642 ;;      Totals:         4       0       0       0       0       0       0
  3643 ;;Total ram usage:        4 bytes
  3644 ;; Hardware stack levels used: 1
  3645 ;; Hardware stack levels required when called: 1
  3646 ;; This function calls:
  3647 ;;		Nothing
  3648 ;; This function is called by:
  3649 ;;		_scan_usr_key
  3650 ;; This function uses a non-reentrant model
  3651 ;;
  3652                           
  3653                           	psect	text16
  3654   0014E6                     __ptext16:
  3655                           	callstack 0
  3656   0014E6                     _get_key_value:
  3657                           	callstack 28
  3658   0014E6                     
  3659                           ;main.c: 211:     return (uint16_t)((RED_KEY_BYTE << 8) | GREEN_KEY_BYTE);
  3660   0014E6  5068               	movf	_GREEN_KEY_BYTE^0,w,c
  3661   0014E8  C069  F006         	movff	_RED_KEY_BYTE,??_get_key_value
  3662   0014EC  6A07               	clrf	(??_get_key_value+1)^0,c
  3663   0014EE  C006  F007         	movff	??_get_key_value,??_get_key_value+1
  3664   0014F2  6A06               	clrf	??_get_key_value^0,c
  3665   0014F4  1006               	iorwf	??_get_key_value^0,w,c
  3666   0014F6  6E04               	movwf	?_get_key_value^0,c
  3667   0014F8  5007               	movf	(??_get_key_value+1)^0,w,c
  3668   0014FA  6E05               	movwf	(?_get_key_value+1)^0,c
  3669   0014FC  0012               	return		;funcret
  3670   0014FE                     __end_of_get_key_value:
  3671                           	callstack 0
  3672                           
  3673 ;; *************** function _delay_ms *****************
  3674 ;; Defined at:
  3675 ;;		line 37 in file "main.c"
  3676 ;; Parameters:    Size  Location     Type
  3677 ;;  ms              2    3[COMRAM] unsigned int 
  3678 ;; Auto vars:     Size  Location     Type
  3679 ;;		None
  3680 ;; Return value:  Size  Location     Type
  3681 ;;                  1    wreg      void 
  3682 ;; Registers used:
  3683 ;;		wreg, status,2, status,0
  3684 ;; Tracked objects:
  3685 ;;		On entry : 0/0
  3686 ;;		On exit  : 0/0
  3687 ;;		Unchanged: 0/0
  3688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3689 ;;      Params:         2       0       0       0       0       0       0
  3690 ;;      Locals:         0       0       0       0       0       0       0
  3691 ;;      Temps:          1       0       0       0       0       0       0
  3692 ;;      Totals:         3       0       0       0       0       0       0
  3693 ;;Total ram usage:        3 bytes
  3694 ;; Hardware stack levels used: 1
  3695 ;; Hardware stack levels required when called: 1
  3696 ;; This function calls:
  3697 ;;		Nothing
  3698 ;; This function is called by:
  3699 ;;		_scan_usr_key
  3700 ;;		_main
  3701 ;; This function uses a non-reentrant model
  3702 ;;
  3703                           
  3704                           	psect	text17
  3705   001408                     __ptext17:
  3706                           	callstack 0
  3707   001408                     _delay_ms:
  3708                           	callstack 28
  3709   001408  EF0D  F00A         	goto	l1849
  3710   00140C                     l1847:
  3711   00140C  0E04               	movlw	4
  3712   00140E  6E06               	movwf	??_delay_ms^0,c
  3713   001410  0E3E               	movlw	62
  3714   001412                     u1507:
  3715   001412  2EE8               	decfsz	wreg,f,c
  3716   001414  D7FE               	bra	u1507
  3717   001416  2E06               	decfsz	??_delay_ms^0,f,c
  3718   001418  D7FC               	bra	u1507
  3719   00141A                     l1849:
  3720   00141A  0604               	decf	delay_ms@ms^0,f,c
  3721   00141C  A0D8               	btfss	status,0,c
  3722   00141E  0605               	decf	(delay_ms@ms+1)^0,f,c
  3723   001420  2804               	incf	delay_ms@ms^0,w,c
  3724   001422  E106               	bnz	u1011
  3725   001424  2805               	incf	(delay_ms@ms+1)^0,w,c
  3726   001426  A4D8               	btfss	status,2,c
  3727   001428  EF18  F00A         	goto	u1011
  3728   00142C  EF1A  F00A         	goto	u1010
  3729   001430                     u1011:
  3730   001430  EF06  F00A         	goto	l1847
  3731   001434                     u1010:
  3732   001434  0012               	return		;funcret
  3733   001436                     __end_of_delay_ms:
  3734                           	callstack 0
  3735                           
  3736 ;; *************** function _UART_SendString *****************
  3737 ;; Defined at:
  3738 ;;		line 44 in file "u_uart.c"
  3739 ;; Parameters:    Size  Location     Type
  3740 ;;  str             2    4[COMRAM] PTR const unsigned char 
  3741 ;;		 -> STR_30(3), STR_29(19), main@xbuffer_606(10), main@xbuffer(10), 
  3742 ;;		 -> STR_4(11), scan_usr_key@xbuffer(10), 
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;		None
  3745 ;; Return value:  Size  Location     Type
  3746 ;;                  1    wreg      void 
  3747 ;; Registers used:
  3748 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3754 ;;      Params:         2       0       0       0       0       0       0
  3755 ;;      Locals:         0       0       0       0       0       0       0
  3756 ;;      Temps:          0       0       0       0       0       0       0
  3757 ;;      Totals:         2       0       0       0       0       0       0
  3758 ;;Total ram usage:        2 bytes
  3759 ;; Hardware stack levels used: 1
  3760 ;; Hardware stack levels required when called: 2
  3761 ;; This function calls:
  3762 ;;		_UART_SendChar
  3763 ;; This function is called by:
  3764 ;;		_scan_usr_key
  3765 ;;		_main
  3766 ;; This function uses a non-reentrant model
  3767 ;;
  3768                           
  3769                           	psect	text18
  3770   0011E0                     __ptext18:
  3771                           	callstack 0
  3772   0011E0                     _UART_SendString:
  3773                           	callstack 27
  3774   0011E0                     
  3775                           ;u_uart.c: 44: void UART_SendString(const char* str);u_uart.c: 45: {;u_uart.c: 46:     w
      +                          hile (*str)
  3776   0011E0  EF06  F009         	goto	l1895
  3777   0011E4                     l1891:
  3778                           
  3779                           ;u_uart.c: 47:         UART_SendChar(*str++);
  3780   0011E4  C005  FFF6         	movff	UART_SendString@str,tblptrl
  3781   0011E8  C006  FFF7         	movff	UART_SendString@str+1,tblptrh
  3782   0011EC  6AF8               	clrf	tblptru,c
  3783   0011EE  0E05               	movlw	(high __ramtop+-1)
  3784   0011F0  64F7               	cpfsgt	tblptrh,c
  3785   0011F2  D003               	bra	u1057
  3786   0011F4  0008               	tblrd		*
  3787   0011F6  50F5               	movf	tablat,w,c
  3788   0011F8  D005               	bra	u1050
  3789   0011FA                     u1057:
  3790   0011FA  CFF6 FFE1          	movff	tblptrl,fsr1l
  3791   0011FE  CFF7 FFE2          	movff	tblptrh,fsr1h
  3792   001202  50E7               	movf	indf1,w,c
  3793   001204                     u1050:
  3794   001204  EC7F  F00A         	call	_UART_SendChar
  3795   001208  4A05               	infsnz	UART_SendString@str^0,f,c
  3796   00120A  2A06               	incf	(UART_SendString@str+1)^0,f,c
  3797   00120C                     l1895:
  3798                           
  3799                           ;u_uart.c: 46:     while (*str)
  3800   00120C  C005  FFF6         	movff	UART_SendString@str,tblptrl
  3801   001210  C006  FFF7         	movff	UART_SendString@str+1,tblptrh
  3802   001214  6AF8               	clrf	tblptru,c
  3803   001216  0E05               	movlw	(high __ramtop+-1)
  3804   001218  64F7               	cpfsgt	tblptrh,c
  3805   00121A  D003               	bra	u1067
  3806   00121C  0008               	tblrd		*
  3807   00121E  50F5               	movf	tablat,w,c
  3808   001220  D005               	bra	u1060
  3809   001222                     u1067:
  3810   001222  CFF6 FFE1          	movff	tblptrl,fsr1l
  3811   001226  CFF7 FFE2          	movff	tblptrh,fsr1h
  3812   00122A  50E7               	movf	indf1,w,c
  3813   00122C                     u1060:
  3814   00122C  0900               	iorlw	0
  3815   00122E  A4D8               	btfss	status,2,c
  3816   001230  EF1C  F009         	goto	u1071
  3817   001234  EF1E  F009         	goto	u1070
  3818   001238                     u1071:
  3819   001238  EFF2  F008         	goto	l1891
  3820   00123C                     u1070:
  3821   00123C  0012               	return		;funcret
  3822   00123E                     __end_of_UART_SendString:
  3823                           	callstack 0
  3824                           
  3825 ;; *************** function _UART_SendChar *****************
  3826 ;; Defined at:
  3827 ;;		line 37 in file "u_uart.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;  ch              1    wreg     unsigned char 
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;  ch              1    3[COMRAM] unsigned char 
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1    wreg      void 
  3834 ;; Registers used:
  3835 ;;		wreg
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3841 ;;      Params:         0       0       0       0       0       0       0
  3842 ;;      Locals:         1       0       0       0       0       0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0
  3844 ;;      Totals:         1       0       0       0       0       0       0
  3845 ;;Total ram usage:        1 bytes
  3846 ;; Hardware stack levels used: 1
  3847 ;; Hardware stack levels required when called: 1
  3848 ;; This function calls:
  3849 ;;		Nothing
  3850 ;; This function is called by:
  3851 ;;		_main
  3852 ;;		_UART_SendString
  3853 ;; This function uses a non-reentrant model
  3854 ;;
  3855                           
  3856                           	psect	text19
  3857   0014FE                     __ptext19:
  3858                           	callstack 0
  3859   0014FE                     _UART_SendChar:
  3860                           	callstack 27
  3861                           
  3862                           ;incstack = 0
  3863                           ;UART_SendChar@ch stored from wreg
  3864   0014FE  6E04               	movwf	UART_SendChar@ch^0,c
  3865   001500                     l224:
  3866                           
  3867                           ;u_uart.c: 39:     while (!TXIF)
  3868   001500  A89E               	btfss	3998,4,c	;volatile
  3869   001502  EF85  F00A         	goto	u991
  3870   001506  EF87  F00A         	goto	u990
  3871   00150A                     u991:
  3872   00150A  EF80  F00A         	goto	l224
  3873   00150E                     u990:
  3874   00150E                     
  3875                           ;u_uart.c: 41:     TXREG = ch;
  3876   00150E  C004  FFAD         	movff	UART_SendChar@ch,4013	;volatile
  3877   001512  0012               	return		;funcret
  3878   001514                     __end_of_UART_SendChar:
  3879                           	callstack 0
  3880                           
  3881 ;; *************** function _reset_usr_key_value *****************
  3882 ;; Defined at:
  3883 ;;		line 203 in file "main.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;		None
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;		None
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  1    wreg      void 
  3890 ;; Registers used:
  3891 ;;		None
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3897 ;;      Params:         0       0       0       0       0       0       0
  3898 ;;      Locals:         0       0       0       0       0       0       0
  3899 ;;      Temps:          0       0       0       0       0       0       0
  3900 ;;      Totals:         0       0       0       0       0       0       0
  3901 ;;Total ram usage:        0 bytes
  3902 ;; Hardware stack levels used: 1
  3903 ;; Hardware stack levels required when called: 1
  3904 ;; This function calls:
  3905 ;;		Nothing
  3906 ;; This function is called by:
  3907 ;;		_main
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           	psect	text20
  3912   001520                     __ptext20:
  3913                           	callstack 0
  3914   001520                     _reset_usr_key_value:
  3915                           	callstack 29
  3916   001520                     
  3917                           ;main.c: 205:     RED_KEY_BYTE = 0;
  3918   001520  6A69               	clrf	_RED_KEY_BYTE^0,c
  3919                           
  3920                           ;main.c: 206:     GREEN_KEY_BYTE = 0;
  3921   001522  6A68               	clrf	_GREEN_KEY_BYTE^0,c
  3922   001524  0012               	return		;funcret
  3923   001526                     __end_of_reset_usr_key_value:
  3924                           	callstack 0
  3925                           
  3926 ;; *************** function _read_spi_inputs *****************
  3927 ;; Defined at:
  3928 ;;		line 67 in file "main.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;		None
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;  result          1    5[COMRAM] unsigned char 
  3933 ;;  rc4             1    4[COMRAM] unsigned char 
  3934 ;;  rc3             1    3[COMRAM] unsigned char 
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  1    wreg      unsigned char 
  3937 ;; Registers used:
  3938 ;;		wreg, status,2, status,0
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3944 ;;      Params:         0       0       0       0       0       0       0
  3945 ;;      Locals:         3       0       0       0       0       0       0
  3946 ;;      Temps:          0       0       0       0       0       0       0
  3947 ;;      Totals:         3       0       0       0       0       0       0
  3948 ;;Total ram usage:        3 bytes
  3949 ;; Hardware stack levels used: 1
  3950 ;; Hardware stack levels required when called: 1
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_main
  3955 ;; This function uses a non-reentrant model
  3956 ;;
  3957                           
  3958                           	psect	text21
  3959   00148A                     __ptext21:
  3960                           	callstack 0
  3961   00148A                     _read_spi_inputs:
  3962                           	callstack 29
  3963   00148A  6A06               	clrf	read_spi_inputs@result^0,c
  3964   00148C  0E00               	movlw	0
  3965   00148E  B682               	btfsc	130,3,c	;volatile
  3966   001490  0E01               	movlw	1
  3967   001492  6E04               	movwf	read_spi_inputs@rc3^0,c
  3968   001494  0E00               	movlw	0
  3969   001496  B882               	btfsc	130,4,c	;volatile
  3970   001498  0E01               	movlw	1
  3971   00149A  6E05               	movwf	read_spi_inputs@rc4^0,c
  3972   00149C                     
  3973                           ;main.c: 92:     result |= (rc3 << 0);
  3974   00149C  5004               	movf	read_spi_inputs@rc3^0,w,c
  3975   00149E  1206               	iorwf	read_spi_inputs@result^0,f,c
  3976   0014A0                     
  3977                           ;main.c: 93:     result |= (rc4 << 1);
  3978   0014A0  5005               	movf	read_spi_inputs@rc4^0,w,c
  3979   0014A2  2405               	addwf	read_spi_inputs@rc4^0,w,c
  3980   0014A4  1206               	iorwf	read_spi_inputs@result^0,f,c
  3981   0014A6                     
  3982                           ;main.c: 94:     return result;
  3983   0014A6  5006               	movf	read_spi_inputs@result^0,w,c
  3984   0014A8  0012               	return		;funcret
  3985   0014AA                     __end_of_read_spi_inputs:
  3986                           	callstack 0
  3987                           
  3988 ;; *************** function _init_ports *****************
  3989 ;; Defined at:
  3990 ;;		line 107 in file "main.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;		None
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;		None
  3995 ;; Return value:  Size  Location     Type
  3996 ;;                  1    wreg      void 
  3997 ;; Registers used:
  3998 ;;		cstack
  3999 ;; Tracked objects:
  4000 ;;		On entry : 0/0
  4001 ;;		On exit  : 0/0
  4002 ;;		Unchanged: 0/0
  4003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4004 ;;      Params:         0       0       0       0       0       0       0
  4005 ;;      Locals:         0       0       0       0       0       0       0
  4006 ;;      Temps:          0       0       0       0       0       0       0
  4007 ;;      Totals:         0       0       0       0       0       0       0
  4008 ;;Total ram usage:        0 bytes
  4009 ;; Hardware stack levels used: 1
  4010 ;; Hardware stack levels required when called: 2
  4011 ;; This function calls:
  4012 ;;		_init_inputs_RC0_to_RC4
  4013 ;; This function is called by:
  4014 ;;		_main
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text22
  4019   001436                     __ptext22:
  4020                           	callstack 0
  4021   001436                     _init_ports:
  4022                           	callstack 28
  4023   001436                     
  4024                           ;main.c: 111:     TRISBbits.TRISB1 = 0;
  4025   001436  9293               	bcf	147,1,c	;volatile
  4026                           
  4027                           ;main.c: 115:     TRISAbits.TRISA0 = 0;
  4028   001438  9092               	bcf	146,0,c	;volatile
  4029                           
  4030                           ;main.c: 116:     TRISAbits.TRISA1 = 0;
  4031   00143A  9292               	bcf	146,1,c	;volatile
  4032                           
  4033                           ;main.c: 117:     TRISAbits.TRISA2 = 0;
  4034   00143C  9492               	bcf	146,2,c	;volatile
  4035                           
  4036                           ;main.c: 118:     TRISAbits.TRISA3 = 0;
  4037   00143E  9692               	bcf	146,3,c	;volatile
  4038                           
  4039                           ;main.c: 119:     TRISAbits.TRISA5 = 0;
  4040   001440  9A92               	bcf	146,5,c	;volatile
  4041                           
  4042                           ;main.c: 120:     TRISEbits.TRISE0 = 0;
  4043   001442  9096               	bcf	150,0,c	;volatile
  4044                           
  4045                           ;main.c: 122:     LATBbits.LATB1 = 0;
  4046   001444  928A               	bcf	138,1,c	;volatile
  4047                           
  4048                           ;main.c: 124:     TRISCbits.TRISC5 = 0;
  4049   001446  9A94               	bcf	148,5,c	;volatile
  4050                           
  4051                           ;main.c: 126:     LATCbits.LATC5 = 0;
  4052   001448  9A8B               	bcf	139,5,c	;volatile
  4053                           
  4054                           ;main.c: 129:     TRISBbits.TRISB0 = 0;
  4055   00144A  9093               	bcf	147,0,c	;volatile
  4056                           
  4057                           ;main.c: 131:     LATBbits.LATB0 = 1;
  4058   00144C  808A               	bsf	138,0,c	;volatile
  4059                           
  4060                           ;main.c: 133:     TRISDbits.TRISD0 = 0;
  4061   00144E  9095               	bcf	149,0,c	;volatile
  4062                           
  4063                           ;main.c: 134:     TRISDbits.TRISD1 = 0;
  4064   001450  9295               	bcf	149,1,c	;volatile
  4065                           
  4066                           ;main.c: 135:     TRISDbits.TRISD2 = 0;
  4067   001452  9495               	bcf	149,2,c	;volatile
  4068                           
  4069                           ;main.c: 136:     TRISDbits.TRISD3 = 0;
  4070   001454  9695               	bcf	149,3,c	;volatile
  4071                           
  4072                           ;main.c: 137:     TRISDbits.TRISD4 = 0;
  4073   001456  9895               	bcf	149,4,c	;volatile
  4074                           
  4075                           ;main.c: 138:     TRISDbits.TRISD5 = 0;
  4076   001458  9A95               	bcf	149,5,c	;volatile
  4077                           
  4078                           ;main.c: 139:     TRISDbits.TRISD6 = 0;
  4079   00145A  9C95               	bcf	149,6,c	;volatile
  4080                           
  4081                           ;main.c: 140:     TRISDbits.TRISD7 = 0;
  4082   00145C  9E95               	bcf	149,7,c	;volatile
  4083   00145E                     
  4084                           ;main.c: 142:     init_inputs_RC0_to_RC4();
  4085   00145E  EC8A  F00A         	call	_init_inputs_RC0_to_RC4	;wreg free
  4086   001462  0012               	return		;funcret
  4087   001464                     __end_of_init_ports:
  4088                           	callstack 0
  4089                           
  4090 ;; *************** function _init_inputs_RC0_to_RC4 *****************
  4091 ;; Defined at:
  4092 ;;		line 58 in file "main.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;		None
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;		None
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      void 
  4099 ;; Registers used:
  4100 ;;		None
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4106 ;;      Params:         0       0       0       0       0       0       0
  4107 ;;      Locals:         0       0       0       0       0       0       0
  4108 ;;      Temps:          0       0       0       0       0       0       0
  4109 ;;      Totals:         0       0       0       0       0       0       0
  4110 ;;Total ram usage:        0 bytes
  4111 ;; Hardware stack levels used: 1
  4112 ;; Hardware stack levels required when called: 1
  4113 ;; This function calls:
  4114 ;;		Nothing
  4115 ;; This function is called by:
  4116 ;;		_init_ports
  4117 ;; This function uses a non-reentrant model
  4118 ;;
  4119                           
  4120                           	psect	text23
  4121   001514                     __ptext23:
  4122                           	callstack 0
  4123   001514                     _init_inputs_RC0_to_RC4:
  4124                           	callstack 28
  4125   001514  8094               	bsf	148,0,c	;volatile
  4126   001516  8294               	bsf	148,1,c	;volatile
  4127   001518  8494               	bsf	148,2,c	;volatile
  4128   00151A  8694               	bsf	148,3,c	;volatile
  4129   00151C  8894               	bsf	148,4,c	;volatile
  4130   00151E  0012               	return		;funcret
  4131   001520                     __end_of_init_inputs_RC0_to_RC4:
  4132                           	callstack 0
  4133                           
  4134 ;; *************** function _UART_Init *****************
  4135 ;; Defined at:
  4136 ;;		line 17 in file "u_uart.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;		None
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;		None
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  1    wreg      void 
  4143 ;; Registers used:
  4144 ;;		wreg, status,2
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4150 ;;      Params:         0       0       0       0       0       0       0
  4151 ;;      Locals:         0       0       0       0       0       0       0
  4152 ;;      Temps:          0       0       0       0       0       0       0
  4153 ;;      Totals:         0       0       0       0       0       0       0
  4154 ;;Total ram usage:        0 bytes
  4155 ;; Hardware stack levels used: 1
  4156 ;; Hardware stack levels required when called: 1
  4157 ;; This function calls:
  4158 ;;		Nothing
  4159 ;; This function is called by:
  4160 ;;		_main
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           	psect	text24
  4165   0014AA                     __ptext24:
  4166                           	callstack 0
  4167   0014AA                     _UART_Init:
  4168                           	callstack 29
  4169   0014AA                     
  4170                           ;u_uart.c: 19:     TRISC6 = 0;
  4171   0014AA  9C94               	bcf	3988,6,c	;volatile
  4172                           
  4173                           ;u_uart.c: 20:     TRISC7 = 1;
  4174   0014AC  8E94               	bsf	3988,7,c	;volatile
  4175   0014AE                     
  4176                           ;u_uart.c: 22:     SPBRG = 15;
  4177   0014AE  0E0F               	movlw	15
  4178   0014B0  6EAF               	movwf	175,c	;volatile
  4179   0014B2                     
  4180                           ;u_uart.c: 23:     BRGH = 0;
  4181   0014B2  94AC               	bcf	4012,2,c	;volatile
  4182   0014B4                     
  4183                           ;u_uart.c: 24:     BRG16 = 0;
  4184   0014B4  96B8               	bcf	4024,3,c	;volatile
  4185   0014B6                     
  4186                           ;u_uart.c: 26:     SYNC = 0;
  4187   0014B6  98AC               	bcf	4012,4,c	;volatile
  4188   0014B8                     
  4189                           ;u_uart.c: 27:     SPEN = 1;
  4190   0014B8  8EAB               	bsf	4011,7,c	;volatile
  4191   0014BA                     
  4192                           ;u_uart.c: 28:     TXEN = 1;
  4193   0014BA  8AAC               	bsf	4012,5,c	;volatile
  4194   0014BC                     
  4195                           ;u_uart.c: 29:     CREN = 1;
  4196   0014BC  88AB               	bsf	4011,4,c	;volatile
  4197   0014BE                     
  4198                           ;u_uart.c: 31:     RCIF = 0;
  4199   0014BE  9A9E               	bcf	3998,5,c	;volatile
  4200   0014C0                     
  4201                           ;u_uart.c: 32:     RCIE = 1;
  4202   0014C0  8A9D               	bsf	3997,5,c	;volatile
  4203   0014C2                     
  4204                           ;u_uart.c: 33:     PEIE = 1;
  4205   0014C2  8CF2               	bsf	4082,6,c	;volatile
  4206   0014C4                     
  4207                           ;u_uart.c: 34:     GIE = 1;
  4208   0014C4  8EF2               	bsf	4082,7,c	;volatile
  4209   0014C6  0012               	return		;funcret
  4210   0014C8                     __end_of_UART_Init:
  4211                           	callstack 0
  4212                           
  4213 ;; *************** function _SelectIO *****************
  4214 ;; Defined at:
  4215 ;;		line 146 in file "main.c"
  4216 ;; Parameters:    Size  Location     Type
  4217 ;;  index           1    wreg     unsigned char 
  4218 ;; Auto vars:     Size  Location     Type
  4219 ;;  index           1    4[COMRAM] unsigned char 
  4220 ;; Return value:  Size  Location     Type
  4221 ;;                  1    wreg      void 
  4222 ;; Registers used:
  4223 ;;		wreg, status,2, status,0, cstack
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4229 ;;      Params:         0       0       0       0       0       0       0
  4230 ;;      Locals:         1       0       0       0       0       0       0
  4231 ;;      Temps:          0       0       0       0       0       0       0
  4232 ;;      Totals:         1       0       0       0       0       0       0
  4233 ;;Total ram usage:        1 bytes
  4234 ;; Hardware stack levels used: 1
  4235 ;; Hardware stack levels required when called: 2
  4236 ;; This function calls:
  4237 ;;		_latch_data
  4238 ;; This function is called by:
  4239 ;;		_main
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text25
  4244   00116C                     __ptext25:
  4245                           	callstack 0
  4246   00116C                     _SelectIO:
  4247                           	callstack 28
  4248                           
  4249                           ;incstack = 0
  4250                           ;SelectIO@index stored from wreg
  4251   00116C  6E05               	movwf	SelectIO@index^0,c
  4252   00116E                     
  4253                           ;main.c: 146: void SelectIO(uint8_t index);main.c: 147: {;main.c: 149:     LATAbits.LATA
      +                          0 = 0;
  4254   00116E  9089               	bcf	137,0,c	;volatile
  4255                           
  4256                           ;main.c: 150:     LATAbits.LATA1 = 0;
  4257   001170  9289               	bcf	137,1,c	;volatile
  4258                           
  4259                           ;main.c: 151:     LATAbits.LATA2 = 0;
  4260   001172  9489               	bcf	137,2,c	;volatile
  4261                           
  4262                           ;main.c: 152:     LATAbits.LATA3 = 0;
  4263   001174  9689               	bcf	137,3,c	;volatile
  4264                           
  4265                           ;main.c: 153:     LATAbits.LATA5 = 0;
  4266   001176  9A89               	bcf	137,5,c	;volatile
  4267                           
  4268                           ;main.c: 154:     LATEbits.LATE0 = 0;
  4269   001178  908D               	bcf	141,0,c	;volatile
  4270   00117A                     
  4271                           ;main.c: 156:     latch_data(0xff);
  4272   00117A  0EFF               	movlw	255
  4273   00117C  EC64  F00A         	call	_latch_data
  4274                           
  4275                           ;main.c: 159:     switch (index)
  4276   001180  EFD4  F008         	goto	l1961
  4277   001184                     l65:
  4278                           
  4279                           ;main.c: 162:             LATAbits.LATA0 = 1;
  4280   001184  8089               	bsf	137,0,c	;volatile
  4281                           
  4282                           ;main.c: 163:             break;
  4283   001186  EFEF  F008         	goto	l73
  4284   00118A                     l67:
  4285                           
  4286                           ;main.c: 165:             LATAbits.LATA1 = 1;
  4287   00118A  8289               	bsf	137,1,c	;volatile
  4288                           
  4289                           ;main.c: 166:             break;
  4290   00118C  EFEF  F008         	goto	l73
  4291   001190                     l68:
  4292                           
  4293                           ;main.c: 168:             LATAbits.LATA2 = 1;
  4294   001190  8489               	bsf	137,2,c	;volatile
  4295                           
  4296                           ;main.c: 169:             break;
  4297   001192  EFEF  F008         	goto	l73
  4298   001196                     l69:
  4299                           
  4300                           ;main.c: 171:             LATAbits.LATA3 = 1;
  4301   001196  8689               	bsf	137,3,c	;volatile
  4302                           
  4303                           ;main.c: 172:             break;
  4304   001198  EFEF  F008         	goto	l73
  4305   00119C                     l70:
  4306                           
  4307                           ;main.c: 175:             LATEbits.LATE0 = 1;
  4308   00119C  808D               	bsf	141,0,c	;volatile
  4309                           
  4310                           ;main.c: 176:             break;
  4311   00119E  EFEF  F008         	goto	l73
  4312   0011A2                     l71:
  4313                           
  4314                           ;main.c: 179:             LATAbits.LATA5 = 1;
  4315   0011A2  8A89               	bsf	137,5,c	;volatile
  4316                           
  4317                           ;main.c: 180:             break;
  4318   0011A4  EFEF  F008         	goto	l73
  4319   0011A8                     l1961:
  4320   0011A8  5005               	movf	SelectIO@index^0,w,c
  4321                           
  4322                           ; Switch size 1, requested type "simple"
  4323                           ; Number of cases is 6, Range of values is 1 to 6
  4324                           ; switch strategies available:
  4325                           ; Name         Instructions Cycles
  4326                           ; simple_byte           19    10 (average)
  4327                           ;	Chosen strategy is simple_byte
  4328   0011AA  0A01               	xorlw	1	; case 1
  4329   0011AC  B4D8               	btfsc	status,2,c
  4330   0011AE  EFD1  F008         	goto	l71
  4331   0011B2  0A03               	xorlw	3	; case 2
  4332   0011B4  B4D8               	btfsc	status,2,c
  4333   0011B6  EFCE  F008         	goto	l70
  4334   0011BA  0A01               	xorlw	1	; case 3
  4335   0011BC  B4D8               	btfsc	status,2,c
  4336   0011BE  EFCB  F008         	goto	l69
  4337   0011C2  0A07               	xorlw	7	; case 4
  4338   0011C4  B4D8               	btfsc	status,2,c
  4339   0011C6  EFC8  F008         	goto	l68
  4340   0011CA  0A01               	xorlw	1	; case 5
  4341   0011CC  B4D8               	btfsc	status,2,c
  4342   0011CE  EFC5  F008         	goto	l67
  4343   0011D2  0A03               	xorlw	3	; case 6
  4344   0011D4  B4D8               	btfsc	status,2,c
  4345   0011D6  EFC2  F008         	goto	l65
  4346   0011DA  EFEF  F008         	goto	l73
  4347   0011DE                     l73:
  4348   0011DE  0012               	return		;funcret
  4349   0011E0                     __end_of_SelectIO:
  4350                           	callstack 0
  4351                           
  4352 ;; *************** function _latch_data *****************
  4353 ;; Defined at:
  4354 ;;		line 45 in file "main.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;  seg_data        1    wreg     unsigned char 
  4357 ;; Auto vars:     Size  Location     Type
  4358 ;;  seg_data        1    3[COMRAM] unsigned char 
  4359 ;; Return value:  Size  Location     Type
  4360 ;;                  1    wreg      void 
  4361 ;; Registers used:
  4362 ;;		wreg
  4363 ;; Tracked objects:
  4364 ;;		On entry : 0/0
  4365 ;;		On exit  : 0/0
  4366 ;;		Unchanged: 0/0
  4367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4368 ;;      Params:         0       0       0       0       0       0       0
  4369 ;;      Locals:         1       0       0       0       0       0       0
  4370 ;;      Temps:          0       0       0       0       0       0       0
  4371 ;;      Totals:         1       0       0       0       0       0       0
  4372 ;;Total ram usage:        1 bytes
  4373 ;; Hardware stack levels used: 1
  4374 ;; Hardware stack levels required when called: 1
  4375 ;; This function calls:
  4376 ;;		Nothing
  4377 ;; This function is called by:
  4378 ;;		_SelectIO
  4379 ;;		_scan_usr_key
  4380 ;;		_main
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           	psect	text26
  4385   0014C8                     __ptext26:
  4386                           	callstack 0
  4387   0014C8                     _latch_data:
  4388                           	callstack 28
  4389                           
  4390                           ;incstack = 0
  4391                           ;latch_data@seg_data stored from wreg
  4392   0014C8  6E04               	movwf	latch_data@seg_data^0,c
  4393   0014CA  C004  FF8C         	movff	latch_data@seg_data,3980	;volatile
  4394   0014CE  928A               	bcf	138,1,c	;volatile
  4395   0014D0  0E08               	movlw	8
  4396   0014D2                     u1517:
  4397   0014D2  2EE8               	decfsz	wreg,f,c
  4398   0014D4  D7FE               	bra	u1517
  4399   0014D6  0000               	nop	
  4400   0014D8  828A               	bsf	138,1,c	;volatile
  4401   0014DA  0E08               	movlw	8
  4402   0014DC                     u1527:
  4403   0014DC  2EE8               	decfsz	wreg,f,c
  4404   0014DE  D7FE               	bra	u1527
  4405   0014E0  0000               	nop	
  4406   0014E2  928A               	bcf	138,1,c	;volatile
  4407   0014E4  0012               	return		;funcret
  4408   0014E6                     __end_of_latch_data:
  4409                           	callstack 0
  4410                           
  4411 ;; *************** function _ISR *****************
  4412 ;; Defined at:
  4413 ;;		line 51 in file "u_uart.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;		None
  4416 ;; Auto vars:     Size  Location     Type
  4417 ;;  received        1    2[COMRAM] unsigned char 
  4418 ;; Return value:  Size  Location     Type
  4419 ;;                  1    wreg      void 
  4420 ;; Registers used:
  4421 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4422 ;; Tracked objects:
  4423 ;;		On entry : 0/0
  4424 ;;		On exit  : 0/0
  4425 ;;		Unchanged: 0/0
  4426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4427 ;;      Params:         0       0       0       0       0       0       0
  4428 ;;      Locals:         1       0       0       0       0       0       0
  4429 ;;      Temps:          2       0       0       0       0       0       0
  4430 ;;      Totals:         3       0       0       0       0       0       0
  4431 ;;Total ram usage:        3 bytes
  4432 ;; Hardware stack levels used: 1
  4433 ;; This function calls:
  4434 ;;		Nothing
  4435 ;; This function is called by:
  4436 ;;		Interrupt level 2
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           	psect	intcode
  4441   000008                     __pintcode:
  4442                           	callstack 0
  4443   000008                     _ISR:
  4444                           	callstack 21
  4445                           
  4446                           ;incstack = 0
  4447   000008  8276               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4448   00000A  ED1F  F009         	call	int_func,f	;refresh shadow registers
  4449                           
  4450                           	psect	intcode_body
  4451   00123E                     __pintcode_body:
  4452                           	callstack 21
  4453   00123E                     int_func:
  4454                           	callstack 21
  4455   00123E  0006               	pop		; remove dummy address from shadow register refresh
  4456   001240  CFD9 F001          	movff	fsr2l,??_ISR
  4457   001244  CFDA F002          	movff	fsr2h,??_ISR+1
  4458   001248                     
  4459                           ;u_uart.c: 53:     if (RCIF)
  4460   001248  AA9E               	btfss	3998,5,c	;volatile
  4461   00124A  EF29  F009         	goto	i2u147_41
  4462   00124E  EF2B  F009         	goto	i2u147_40
  4463   001252                     i2u147_41:
  4464   001252  EF47  F009         	goto	i2l241
  4465   001256                     i2u147_40:
  4466   001256                     
  4467                           ;u_uart.c: 54:     {;u_uart.c: 55:         uint8_t received = RCREG;
  4468   001256  CFAE F003          	movff	4014,ISR@received	;volatile
  4469   00125A                     
  4470                           ;u_uart.c: 57:         if (uart_frame_ready == 0)
  4471   00125A  506B               	movf	_uart_frame_ready^0,w,c	;volatile
  4472   00125C  A4D8               	btfss	status,2,c
  4473   00125E  EF33  F009         	goto	i2u148_41
  4474   001262  EF35  F009         	goto	i2u148_40
  4475   001266                     i2u148_41:
  4476   001266  EF47  F009         	goto	i2l241
  4477   00126A                     i2u148_40:
  4478   00126A                     
  4479                           ;u_uart.c: 58:         {;u_uart.c: 59:             uart_rx_buffer[uart_rx_index++] = rec
      +                          eived;
  4480   00126A  506A               	movf	_uart_rx_index^0,w,c
  4481   00126C  0F6C               	addlw	low _uart_rx_buffer
  4482   00126E  6ED9               	movwf	fsr2l,c
  4483   001270  6ADA               	clrf	fsr2h,c
  4484   001272  C003  FFDF         	movff	ISR@received,indf2
  4485   001276  2A6A               	incf	_uart_rx_index^0,f,c	;volatile
  4486   001278                     
  4487                           ;u_uart.c: 60:             if (uart_rx_index >= 10)
  4488   001278  0E09               	movlw	9
  4489   00127A  646A               	cpfsgt	_uart_rx_index^0,c	;volatile
  4490   00127C  EF42  F009         	goto	i2u149_41
  4491   001280  EF44  F009         	goto	i2u149_40
  4492   001284                     i2u149_41:
  4493   001284  EF47  F009         	goto	i2l241
  4494   001288                     i2u149_40:
  4495   001288                     
  4496                           ;u_uart.c: 61:             {;u_uart.c: 62:                 uart_frame_ready = 1;
  4497   001288  0E01               	movlw	1
  4498   00128A  6E6B               	movwf	_uart_frame_ready^0,c	;volatile
  4499   00128C                     
  4500                           ;u_uart.c: 63:                 uart_rx_index = 0;
  4501   00128C  6A6A               	clrf	_uart_rx_index^0,c	;volatile
  4502   00128E                     i2l241:
  4503   00128E  C002  FFDA         	movff	??_ISR+1,fsr2h
  4504   001292  C001  FFD9         	movff	??_ISR,fsr2l
  4505   001296  9276               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4506   001298  0011               	retfie		f
  4507   00129A                     __end_of_ISR:
  4508                           	callstack 0
  4509                           
  4510                           	psect	rparam
  4511   000001                     ___rparam_used  equ	1
  4512   000000                     ___param_bank   equ	0
  4513   000000                     __Lparam        equ	__Lrparam
  4514   000000                     __Hparam        equ	__Hrparam
  4515                           
  4516                           	psect	temp
  4517   000076                     btemp:
  4518                           	callstack 0
  4519   000076                     	ds	1
  4520   000076                     int$flags       set	btemp
  4521   000077                     wtemp8          set	btemp+1
  4522   000077                     ttemp5          set	btemp+1
  4523   00007A                     ttemp6          set	btemp+4
  4524   00007E                     ttemp7          set	btemp+8
  4525                           
  4526                           	psect	config
  4527                           
  4528                           ; Padding undefined space
  4529   300000                     	org	3145728
  4530   300000  FF                 	db	255
  4531                           
  4532                           ;Config register CONFIG1H @ 0x300001
  4533                           ;	Oscillator Selection bits
  4534                           ;	OSC = HS, HS oscillator
  4535                           ;	Fail-Safe Clock Monitor Enable bit
  4536                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4537                           ;	Internal/External Oscillator Switchover bit
  4538                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4539   300001                     	org	3145729
  4540   300001  02                 	db	2
  4541                           
  4542                           ;Config register CONFIG2L @ 0x300002
  4543                           ;	Power-up Timer Enable bit
  4544                           ;	PWRT = OFF, PWRT disabled
  4545                           ;	Brown-out Reset Enable bits
  4546                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  4547                           ;	Brown Out Reset Voltage bits
  4548                           ;	BORV = 3, Minimum setting
  4549   300002                     	org	3145730
  4550   300002  19                 	db	25
  4551                           
  4552                           ;Config register CONFIG2H @ 0x300003
  4553                           ;	Watchdog Timer Enable bit
  4554                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4555                           ;	Watchdog Timer Postscale Select bits
  4556                           ;	WDTPS = 32768, 1:32768
  4557   300003                     	org	3145731
  4558   300003  1E                 	db	30
  4559                           
  4560                           ; Padding undefined space
  4561   300004                     	org	3145732
  4562   300004  FF                 	db	255
  4563                           
  4564                           ;Config register CONFIG3H @ 0x300005
  4565                           ;	CCP2 MUX bit
  4566                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4567                           ;	PORTB A/D Enable bit
  4568                           ;	PBADEN = 0x1, unprogrammed default
  4569                           ;	Low-Power Timer1 Oscillator Enable bit
  4570                           ;	LPT1OSC = 0x0, unprogrammed default
  4571                           ;	MCLR Pin Enable bit
  4572                           ;	MCLRE = 0x1, unprogrammed default
  4573   300005                     	org	3145733
  4574   300005  83                 	db	131
  4575                           
  4576                           ;Config register CONFIG4L @ 0x300006
  4577                           ;	Stack Full/Underflow Reset Enable bit
  4578                           ;	STVREN = 0x1, unprogrammed default
  4579                           ;	Single-Supply ICSP Enable bit
  4580                           ;	LVP = OFF, Single-Supply ICSP disabled
  4581                           ;	Extended Instruction Set Enable bit
  4582                           ;	XINST = 0x0, unprogrammed default
  4583                           ;	Background Debugger Enable bit
  4584                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  4585   300006                     	org	3145734
  4586   300006  81                 	db	129
  4587                           
  4588                           ; Padding undefined space
  4589   300007                     	org	3145735
  4590   300007  FF                 	db	255
  4591                           tosu	equ	0xFFF
  4592                           tosh	equ	0xFFE
  4593                           tosl	equ	0xFFD
  4594                           stkptr	equ	0xFFC
  4595                           pclatu	equ	0xFFB
  4596                           pclath	equ	0xFFA
  4597                           pcl	equ	0xFF9
  4598                           tblptru	equ	0xFF8
  4599                           tblptrh	equ	0xFF7
  4600                           tblptrl	equ	0xFF6
  4601                           tablat	equ	0xFF5
  4602                           prodh	equ	0xFF4
  4603                           prodl	equ	0xFF3
  4604                           indf0	equ	0xFEF
  4605                           postinc0	equ	0xFEE
  4606                           postdec0	equ	0xFED
  4607                           preinc0	equ	0xFEC
  4608                           plusw0	equ	0xFEB
  4609                           fsr0h	equ	0xFEA
  4610                           fsr0l	equ	0xFE9
  4611                           wreg	equ	0xFE8
  4612                           indf1	equ	0xFE7
  4613                           postinc1	equ	0xFE6
  4614                           postdec1	equ	0xFE5
  4615                           preinc1	equ	0xFE4
  4616                           plusw1	equ	0xFE3
  4617                           fsr1h	equ	0xFE2
  4618                           fsr1l	equ	0xFE1
  4619                           bsr	equ	0xFE0
  4620                           indf2	equ	0xFDF
  4621                           postinc2	equ	0xFDE
  4622                           postdec2	equ	0xFDD
  4623                           preinc2	equ	0xFDC
  4624                           plusw2	equ	0xFDB
  4625                           fsr2h	equ	0xFDA
  4626                           fsr2l	equ	0xFD9
  4627                           status	equ	0xFD8

Data Sizes:
    Strings     158
    Constant    0
    Data        0
    BSS         89
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     98     117
    BANK0           128      0      70
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> main@xbuffer(COMRAM[10]), main@xbuffer_606(COMRAM[10]), scan_usr_key@xbuffer(COMRAM[10]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> main@xbuffer(COMRAM[10]), main@xbuffer_606(COMRAM[10]), scan_usr_key@xbuffer(COMRAM[10]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1091$buffer	PTR unsigned char  size(1) Largest target is 10
		 -> main@xbuffer(COMRAM[10]), main@xbuffer_606(COMRAM[10]), scan_usr_key@xbuffer(COMRAM[10]), 

    S1091$source	PTR const unsigned char  size(2) Largest target is 0

    sp__strchr	PTR unsigned char  size(1) Largest target is 10
		 -> uart_rx_buffer(COMRAM[10]), NULL(NULL[0]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 10
		 -> uart_rx_buffer(COMRAM[10]), NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), STR_25(CODE[10]), STR_28(CODE[10]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 10
		 -> main@xbuffer(COMRAM[10]), main@xbuffer_606(COMRAM[10]), scan_usr_key@xbuffer(COMRAM[10]), 

    strchr@s	PTR const unsigned char  size(1) Largest target is 10
		 -> uart_rx_buffer(COMRAM[10]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_10(CODE[9]), STR_12(CODE[9]), STR_14(CODE[9]), STR_16(CODE[9]), 
		 -> STR_18(CODE[9]), STR_20(CODE[9]), STR_22(CODE[9]), STR_24(CODE[9]), 
		 -> STR_27(CODE[9]), STR_3(CODE[9]), STR_6(CODE[9]), STR_8(CODE[9]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_10(CODE[9]), STR_12(CODE[9]), STR_14(CODE[9]), STR_16(CODE[9]), 
		 -> STR_18(CODE[9]), STR_20(CODE[9]), STR_22(CODE[9]), STR_24(CODE[9]), 
		 -> STR_27(CODE[9]), STR_3(CODE[9]), STR_6(CODE[9]), STR_8(CODE[9]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 10
		 -> uart_rx_buffer(COMRAM[10]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_10(CODE[9]), STR_12(CODE[9]), STR_14(CODE[9]), STR_16(CODE[9]), 
		 -> STR_18(CODE[9]), STR_20(CODE[9]), STR_22(CODE[9]), STR_24(CODE[9]), 
		 -> STR_27(CODE[9]), STR_3(CODE[9]), STR_6(CODE[9]), STR_8(CODE[9]), 

    strstr@h	PTR const unsigned char  size(1) Largest target is 10
		 -> uart_rx_buffer(COMRAM[10]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_10(CODE[9]), STR_12(CODE[9]), STR_14(CODE[9]), STR_16(CODE[9]), 
		 -> STR_18(CODE[9]), STR_20(CODE[9]), STR_22(CODE[9]), STR_24(CODE[9]), 
		 -> STR_27(CODE[9]), STR_3(CODE[9]), STR_6(CODE[9]), STR_8(CODE[9]), 

    UART_SendString@str	PTR const unsigned char  size(2) Largest target is 19
		 -> main@xbuffer(COMRAM[10]), main@xbuffer_606(COMRAM[10]), scan_usr_key@xbuffer(COMRAM[10]), STR_29(CODE[19]), 
		 -> STR_30(CODE[3]), STR_4(CODE[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), STR_25(CODE[10]), STR_28(CODE[10]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), STR_25(CODE[10]), STR_28(CODE[10]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_1(CODE[10]), STR_25(CODE[10]), STR_28(CODE[10]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    xtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_scan_usr_key
    _strstr->_strncmp
    _scan_usr_key->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_xtoa
    _xtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _UART_SendString->_UART_SendChar
    _SelectIO->_latch_data

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0    6166
                                             75 COMRAM    23    23      0
                           _SelectIO
                          _UART_Init
                      _UART_SendChar
                    _UART_SendString
                           _delay_ms
                         _init_ports
                         _latch_data
                    _read_spi_inputs
                _reset_usr_key_value
                       _scan_usr_key
                            _sprintf
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _strstr                                               4     2      2     609
                                              8 COMRAM     4     2      2
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              5     1      4     182
                                              3 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      91
                                              3 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _strchr                                               4     1      3      90
                                              3 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _scan_usr_key                                        11    11      0    2842
                                             64 COMRAM    11    11      0
                    _UART_SendString
                           _delay_ms
                      _get_key_value
                         _latch_data
                    _read_key_inputs
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    14      4    2225
                                             48 COMRAM    16    12      4
                      _get_key_value (ARG)
                    _read_spi_inputs (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    2018
                                             44 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           10     7      3    1884
                                             35 COMRAM     9     6      3
                              _fputc
                 _read_prec_or_width
                               _xtoa
 ---------------------------------------------------------------------------------
 (4) _xtoa                                                12     9      3    1045
                                             23 COMRAM    12     9      3
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     3      4     747
                                             16 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                5     3      2     333
                                             11 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     232
                                              3 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     182
                                              3 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _read_key_inputs                                      2     2      0      26
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _get_key_value                                        4     2      2       0
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             3     1      2      29
                                              3 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _UART_SendString                                      2     0      2      80
                                              4 COMRAM     2     0      2
                      _UART_SendChar
 ---------------------------------------------------------------------------------
 (3) _UART_SendChar                                        1     1      0      29
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _reset_usr_key_value                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_spi_inputs                                      3     3      0      71
                                              3 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _init_ports                                           0     0      0       0
             _init_inputs_RC0_to_RC4
 ---------------------------------------------------------------------------------
 (2) _init_inputs_RC0_to_RC4                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SelectIO                                             1     1      0      58
                                              4 COMRAM     1     1      0
                         _latch_data
 ---------------------------------------------------------------------------------
 (2) _latch_data                                           1     1      0      29
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _ISR                                                 3     3      0      23
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SelectIO
     _latch_data
   _UART_Init
   _UART_SendChar
   _UART_SendString
     _UART_SendChar
   _delay_ms
   _init_ports
     _init_inputs_RC0_to_RC4
   _latch_data
   _read_spi_inputs
   _reset_usr_key_value
   _scan_usr_key
     _UART_SendString
     _delay_ms
     _get_key_value
     _latch_data
     _read_key_inputs
     _sprintf
       _get_key_value (ARG)
       _read_spi_inputs (ARG)
       _vfprintf (ARG)
         _vfpfcnvrt
           _fputc
             _putch
           _read_prec_or_width
           _xtoa
             _pad
               _fputc
               _fputs
                 _fputc
   _sprintf
   _strstr
     _strchr
     _strlen
     _strncmp

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1535      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0      70     54.7%
BITCOMRAM          126      0       0      0.0%
COMRAM             126     98     117     92.9%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         35      0       0      0.0%
BITBIGSFRllh         6      0       0      0.0%
BITBIGSFRlll         2      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     189      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun Jun 08 15:57:39 2025

                            l52 151E                              l61 1462                              l70 119C  
                            l46 1434                              l71 11A2                              l55 14A8  
                            l49 14E4                              l73 11DE                              l65 1184  
                            l58 12EA                              l67 118A                              l68 1190  
                            l69 1196                              l95 1524                              l98 14FC  
                           l221 14C6                             l143 0BF4                             l224 1500  
                           l233 123C                             l227 1512                             l922 1406  
                           l940 1112                             l943 1150                             l961 1044  
                           l945 116A                             l965 104C                             l957 0E42  
                           l982 0D4C                             _GIE 7F97                             l989 1328  
                           _ISR 0008                             u800 0F78                             u801 0F74  
                           u810 1364                             u811 1360                             u820 10F0  
                           u900 0E04                             u821 10EC                             u901 0E00  
                           u830 110A                             u910 0E1E                             u831 1106  
                           u911 0E1A                             u840 1150                             u920 0E2C  
                           u841 114C                             u921 0E28                             u930 0FD4  
                           u770 0F10                             u850 115E                             u931 0FD0  
                           u771 0F0C                             u851 115A                             u940 1044  
                           u780 0F20                             u860 0D86                             u941 1040  
                           u781 0F1C                             u861 0D82                             u790 0F46  
                           u950 0C18                             u791 0F42                             u951 0C14  
                           u880 0DE2                             u960 0C7A                             u881 0DDE  
                           u961 0C76                             u890 0DF4                             u970 0C9C  
                           u891 0DF0                             u875 0DB2                             u971 0C98  
                           u980 0CCC                             u981 0CC8                             u990 150E  
                           u991 150A                             _pad 10E2                             wreg 0FE8  
                          ?_ISR 0001                            l1001 0FA8                            l1012 1526  
                          l1031 1366                            l1040 13D2                            l1009 1364  
                          l2001 09D8                            l1033 139E                            l1025 10E0  
                          l2011 09E8                            l2003 09DA                            l1044 0EFE  
                          l2101 0B6A                            l2013 09FA                            l2021 0A1C  
                          l2005 09DC                            l2111 0B7E                            l2103 0B76  
                          l2031 0A44                            l2015 0A10                            l2023 0A32  
                          l2007 09DE                            l2121 0BB6                            l2113 0B80  
                          l2105 0B78                            l2041 0A78                            l2033 0A46  
                          l2025 0A3E                            l2017 0A16                            l2009 09E0  
                          l2201 0724                            l2131 14AA                            l2115 0B88  
                          l2107 0B7A                            l2051 0AA6                            l2043 0A7E  
                          l2035 0A48                            l2027 0A40                            l2211 077A  
                          l2203 072E                            l2141 14B8                            l2133 14AE  
                          l2117 0B9A                            l2125 0BBC                            l2109 0B7C  
                          l2061 0AB0                            l2053 0AA8                            l2037 0A50  
                          l2029 0A42                            l2221 07E2                            l2213 0796  
                          l2205 074A                            l2151 14C2                            l2143 14BA  
                          l2135 14B2                            l2119 0BB0                            l2127 0BD2  
                          l2063 0AB8                            l2055 0AAA                            l2039 0A62  
                          l2047 0A84                            l2231 0836                            l2223 07EC  
                          l2215 07A0                            l2207 0754                            l2153 14C4  
                          l2145 14BC                            l2137 14B4                            l2129 0BEA  
                          l2081 0B12                            l2065 0ACA                            l2073 0AEC  
                          l2057 0AAC                            l2049 0A9A                            l2161 1098  
                          l2241 085C                            l2233 0852                            l2225 0808  
                          l2217 07BC                            l2209 0770                            l2147 14BE  
                          l2139 14B6                            l2091 0B32                            l2083 0B14  
                          l2067 0AE0                            l2075 0B02                            l2059 0AAE  
                          l2171 10DE                            l2155 104E                            l2251 0884  
                          l2243 085E                            l2235 0856                            l2227 0812  
                          l2219 07C6                            l2149 14C0                            l1701 132A  
                          l2093 0B48                            l2085 0B16                            l2077 0B0E  
                          l2069 0AE6                            l2165 109E                            l2157 105E  
                          l2261 08CE                            l2253 0888                            l2245 0860  
                          l2237 0858                            l2229 082E                            l2181 06B4  
                          l1703 1336                            l1711 10F0                            l2095 0B4E  
                          l2087 0B18                            l2079 0B10                            l2159 1072  
                          l2167 10B8                            l2263 08E6                            l2255 08A0  
                          l2247 0862                            l2239 085A                            l2191 06C6  
                          l2183 06BA                            l2175 06A0                            l1705 1344  
                          l1721 1132                            l1713 10FC                            l1801 0C8E  
                          l2089 0B20                            l2169 10C8                            l2273 0906  
                          l2265 08F4                            l2257 08AE                            l2249 0868  
                          l2281 0936                            l2193 06D6                            l2185 06C0  
                          l2177 06AC                            l1707 1348                            l1723 115E  
                          l1715 110A                            l1731 0D6A                            l1811 0CE4  
                          l1803 0C9C                            l2099 0B54                            l2275 0914  
                          l2267 0904                            l2259 08CA                            l2195 06D8  
                          l2283 0938                            l2187 06C4                            l2179 06B0  
                          l1717 111E                            l1709 10E2                            l1741 0D92  
                          l1733 0D70                            l1725 0D4E                            l1813 0CF2  
                          l1821 0D1E                            l1805 0CA6                            l1901 13AA  
                          l2285 0948                            l2277 0916                            l2197 06F4  
                          l2189 06C6                            l1831 1500                            l1719 112E  
                          l1751 0DE2                            l1743 0D9E                            l1735 0D76  
                          l1727 0D52                            l1807 0CB0                            l1903 13C6  
                          l2287 0950                            l2279 0926                            l2199 0708  
                          l1833 150E                            l1753 0DF4                            l1745 0DA0  
                          l1737 0D86                            l1729 0D62                            l1809 0CCC  
                          l1825 0D2A                            l1841 1320                            l1921 0EB8  
                          l1913 0E6A                            l1851 14CA                            l1771 0FF8  
                          l1763 0FAA                            l1691 0F20                            l1755 0E04  
                          l1747 0DA6                            l1739 0D8E                            l1819 0D06  
                          l1835 12EC                            l1923 0EDE                            l1915 0E74  
                          l1907 0E44                            l1861 14E2                            l1853 14CE  
                          l1941 148C                            l1845 1408                            l1773 1016  
                          l1765 0FB2                            l1693 0F2A                            l1757 0E1E  
                          l1749 0DC6                            l1781 0C20                            l1837 12F4  
                          l1933 1384                            l1917 0E8A                            l1909 0E5E  
                          l1855 14D0                            l1863 1514                            l1951 1436  
                          l1943 149C                            l1847 140C                            l1767 0FD4  
                          l1775 101E                            l1695 0F46                            l1687 0F00  
                          l1759 0E2C                            l1791 0C44                            l1783 0C2C  
                          l1839 1304                            l1935 139C                            l1927 1366  
                          l1919 0EA6                            l1857 14D8                            l1961 11A8  
                          l1953 145E                            l1945 14A0                            l1849 141A  
                          l1873 14E6                            l1865 129A                            l1769 0FDC  
                          l1697 0F78                            l1689 0F10                            l1785 0C30  
                          l1777 0BF6                            l1881 13E4                            l1929 137E  
                          l1859 14DA                            l1955 116E                            l1947 14A6  
                          l1939 148A                            l1963 1520                            l1891 11E4  
                          l1867 129C                            l1795 0C4C                            l1787 0C36  
                          l1779 0C18                            l1883 13EC                            l1971 096E  
                          l1957 117A                            l1893 1208                            l1869 12E8  
                          l1789 0C38                            l1797 0C6A                            l1885 13FC  
                          l1877 13D4                            l1981 0978                            l1973 0970  
                          l1965 095C                            ?_pad 0011                            l1895 120C  
                          l1799 0C7A                            l1879 13DC                            l1991 09AE  
                          l1983 097A                            l1975 0972                            l1967 095C  
                          l1889 11E0                            l1985 0980                            l1977 0974  
                          l1969 0962                            l1897 13A0                            l1987 0992  
                          l1995 09B4                            l1979 0976                            l1899 13A8  
                          l1989 09A8                            l1997 09CA                            l1999 09D6  
                          STR_1 0629                            STR_2 0696                            STR_3 0696  
                          STR_4 0614                            STR_5 063C                            STR_6 063C  
                          STR_7 0645                            STR_8 0645                            STR_9 064E  
                          _BRGH 7D62                            u1000 1320                            _CREN 7D5C  
                          u1001 131C                            u1010 1434                            u1011 1430  
                          u1020 12AC                            u1100 0E8A                            u1021 12A6  
                          u1101 0E86                            u1030 12C2                            u1110 0EA6  
                          u1031 12BA                            u1111 0EA2                            u1040 12DC  
                          u1200 0A62                            u1120 0EB8                            u1041 12D4  
                          u1201 0A5E                            u1121 0EB4                            u1050 1204  
                          u1026 12AE                            u1210 0A74                            u1130 0EDE  
                          u1211 0A70                            u1131 0EDA                            u1060 122C  
                          u1220 0ACA                            u1140 137E                            u1300 10C8  
                          u1221 0AC6                            u1141 137A                            u1301 10C4  
                          u1070 123C                            u1038 12C4                            u1230 0ADC  
                          u1150 139C                            u1310 10DE                            u1071 1238  
                          u1231 0AD8                            u1151 1398                            u1311 10DA  
                          u1048 12DE                            u1240 0B32                            u1160 0992  
                          u1080 13C6                            u1400 0808                            u1320 06D6  
                          u1057 11FA                            u1241 0B2E                            u1161 098E  
                          u1081 13C2                            u1401 0804                            u1321 06D2  
                          u1250 0B44                            u1170 09A4                            u1090 0E5E  
                          u1410 082E                            u1330 06F4                            u1067 1222  
                          u1251 0B40                            u1171 09A0                            u1091 0E5A  
                          u1411 082A                            u1331 06F0                            u1260 0B9A  
                          u1180 09FA                            u1420 0852                            u1340 0724  
                          u1261 0B96                            u1181 09F6                            u1421 084E  
                          u1341 0720                            u1270 0BAC                            u1190 0A0C  
                          u1430 0884                            u1350 074A                            u1271 0BA8  
                          u1191 0A08                            u1431 0880                            u1351 0746  
                          u1280 105E                            u1440 08CA                            u1360 0770  
                          _LATD 0F8C                            u1281 105A                            u1441 08C6  
                          u1361 076C                            u1290 1098                            u1450 0926  
                          u1370 0796                            u1507 1412                            u1291 1094  
                          u1451 0922                            u1371 0792                            u1460 0948  
                          u1380 07BC                            u1517 14D2                            u1461 0944  
                          u1381 07B8                            u1390 07E2                            u1527 14DC  
                          u1391 07DE                            _PEIE 7F96                            _RCIE 7CED  
                          _RCIF 7CF5                            _SPEN 7D5F                            _TXEN 7D65  
                          _TXIF 7CF4                            _SYNC 7D64                            _dbuf 00A6  
                          _main 06A0                            _prec 0065                            pad@i 0016  
                          pad@p 0013                            fsr1h 0FE2                            fsr2h 0FDA  
                          indf1 0FE7                            indf2 0FDF                            fsr1l 0FE1  
                          fsr2l 0FD9                            btemp 0076                            _xtoa 0D4E  
                   main@xbuffer 004D                            prodh 0FF4                            prodl 0FF3  
                          start 000E                    ___param_bank 0000                           ??_ISR 0001  
                         ??_pad 0015              latch_data@seg_data 0004                           ?_main 0001  
                         STR_10 064E                           STR_11 0657                           STR_12 0657  
                         STR_20 0684                           STR_21 068D                           STR_13 0660  
                         STR_30 061C                           STR_14 0660                           STR_22 068D  
                         STR_15 067B                           STR_23 0672                           STR_24 0672  
                         STR_16 067B                           _BRG16 7DC3                           STR_17 0633  
                         STR_25 061F                           STR_18 0633                           STR_26 0669  
                         STR_27 0669                           STR_19 0684                           STR_28 061F  
                         STR_29 0601                           ?_xtoa 0018                           i2l241 128E  
                         _RCREG 0FAE                    vfpfcnvrt@fmt 0025                           _SPBRG 0FAF  
                         _TXREG 0FAD                   SelectIO@index 0005                           _flags 0067  
           read_prec_or_width@c 0008             read_prec_or_width@n 0009                           _fputc 0F00  
                         _fputs 132A                           pad@fp 0011                           _width 0063  
                         _putch 1526                           main@i 0062                ?_UART_SendString 0005  
                         tablat 0FF5                 ??_get_key_value 0006                           ttemp5 0077  
                         ttemp6 007A                           ttemp7 007E                           status 0FD8  
                         wtemp8 0077                 __end_of_sprintf 1408                           xtoa@c 0021  
                         xtoa@d 0019                           xtoa@i 0022                           xtoa@p 001E  
                         xtoa@w 001F                 __end_of_strncmp 0F00                 __initialization 1464  
             ??_read_key_inputs 0004                    __end_of_main 095C                    __end_of_xtoa 0E44  
                        ??_main 004C                __end_of_SelectIO 11E0                          ??_xtoa 001B  
                 __activetblptr 0002      __end_of_read_prec_or_width 104E        ??_init_inputs_RC0_to_RC4 0004  
                        ?_fputc 0004                          ?_fputs 000C                          ?_putch 0001  
                        i2l2301 1288                          i2l2303 128C                          i2l2291 1256  
                        i2l2293 125A                          i2l2295 126A                          i2l2297 1276  
                        i2l2289 1248                          i2l2299 1278                   vfpfcnvrt@done 002B  
                        _TRISC6 7CA6                          _TRISC7 7CA7                __end_of_delay_ms 1436  
                  vfprintf@cfmt 0030               __end_of_UART_Init 14C8                          _buffer 0080  
          read_prec_or_width@ap 0005                          clear_0 146A                          clear_1 1476  
             ??_read_spi_inputs 0004                          isa$std 0001                          pad@buf 0012  
                        _strchr 1366                          _strlen 13A0                          _strstr 104E  
                        fputc@c 0004                          fputs@c 000E                          fputs@i 000F  
                        fputs@s 000C                    __mediumconst 0600                          tblptrh 0FF7  
                        tblptrl 0FF6                          tblptru 0FF8                          putch@c 0001  
              __end_of_vfprintf 132A                       ??_sprintf 0035           __end_of_UART_SendChar 1514  
                        xtoa@fp 0018                       ??_strncmp 0008             _reset_usr_key_value 1520  
                    __accesstop 0080         __end_of__initialization 147C                   ___rparam_used 0001  
           scan_usr_key@xbuffer 0041                   ?_scan_usr_key 0001                  __pcstackCOMRAM 0001  
          ?_reset_usr_key_value 0001                   __end_of_fputc 0FAA                   __end_of_fputs 1366  
                 __end_of_putch 1528                     ISR@received 0003                         ??_fputc 0007  
                       ??_fputs 000E                         ??_putch 0004                      __pbssBANK0 0080  
                ??_scan_usr_key 0041                       ?_SelectIO 0001           ??_reset_usr_key_value 0004  
                       ?_strchr 0004                         ?_strlen 0004                         ?_strstr 0009  
                     ?_delay_ms 0004                 _read_key_inputs 129A                      _latch_data 14C8  
                    ??_SelectIO 0005                         __Hparam 0000                         __Lparam 0000  
            UART_SendString@str 0005          _init_inputs_RC0_to_RC4 1514                       ?_vfprintf 002D  
                  __psmallconst 0600                         __pcinit 1464                      _init_ports 1436  
                       __ramtop 0600                         __ptext0 06A0                         __ptext1 104E  
                       __ptext2 0E44                         __ptext3 13A0                         __ptext4 1366  
                       __ptext5 095C                         __ptext6 13D4                         __ptext7 12EC  
                       __ptext8 0BF6                         __ptext9 0D4E           read_prec_or_width@fmt 0004  
                       _red_str 009D                      ??_delay_ms 0006                         _sprintf 13D4  
                       _strncmp 0E44                  __pintcode_body 123E                      delay_ms@ms 0004  
          end_of_initialization 147C                         fputc@fp 0006                   __Lmediumconst 0000  
                       int_func 123E                         fputs@fp 000D              _read_prec_or_width 0FAA  
         __end_of_get_key_value 14FE                 _read_spi_inputs 148A               __end_of_vfpfcnvrt 0D4E  
                       postdec2 0FDD             ?_read_prec_or_width 0004                         postinc0 0FEE  
                       postinc1 0FE6                         postinc2 0FDE                vfpfcnvrt@convarg 0027  
                    ??_vfprintf 0030                         strchr@c 0005                         strchr@s 0004  
                       strlen@a 0006                         strlen@s 0004                       _UART_Init 14AA  
                       strstr@h 0009                         strstr@n 000A                       _PORTCbits 0F82  
          __end_of_scan_usr_key 0BF6         __end_of_read_key_inputs 12EC                       _TRISAbits 0F92  
                     _TRISBbits 0F93                       _TRISCbits 0F94                       _TRISDbits 0F95  
                     _TRISEbits 0F96            ??_read_prec_or_width 0006                     ?_latch_data 0001  
              scan_usr_key@retx 004B                main@read_pin_cmd 0061                     vfpfcnvrt@ap 0026  
                   vfpfcnvrt@cp 002C                     vfpfcnvrt@fp 0024                      ?_UART_Init 0001  
                   ?_init_ports 0001                  __end_of_strchr 13A0                  __end_of_strlen 13D4  
                __end_of_strstr 10E2             start_initialization 1464                     __end_of_ISR 129A  
                   __end_of_pad 116C         __end_of_read_spi_inputs 14AA                     vfprintf@fmt 002E  
         read_key_inputs@result 0005               ??_UART_SendString 0007                        ??_strchr 0007  
                      ??_strlen 0006                        ??_strstr 000B                _uart_frame_ready 006B  
                   __pbssCOMRAM 0063                ?_read_key_inputs 0001         ?_init_inputs_RC0_to_RC4 0001  
   __end_of_reset_usr_key_value 1526                       __pintcode 0008                    _RED_KEY_BYTE 0069  
                   ??_UART_Init 0004                     __smallconst 0600                       _green_str 0094  
                      ?_sprintf 0031                        ?_strncmp 0004                ?_read_spi_inputs 0001  
                 _UART_SendChar 14FE                  _uart_rx_buffer 006C  __end_of_init_inputs_RC0_to_RC4 1520  
                      _LATAbits 0F89                        _LATBbits 0F8A                        _LATCbits 0F8B  
                      _LATEbits 0F8D                    _scan_usr_key 095C                        i2u147_40 1256  
                      i2u147_41 1252                        i2u148_40 126A                        i2u148_41 1266  
                      i2u149_40 1288                        i2u149_41 1284                       _vfpfcnvrt 0BF6  
               UART_SendChar@ch 0004                  ?_UART_SendChar 0001                  _GREEN_KEY_BYTE 0068  
                  ??_latch_data 0004                        _SelectIO 116C                        __Hrparam 0000  
                    vfprintf@ap 002F                        __Lrparam 0000                      vfprintf@fp 002D  
                    ?_vfpfcnvrt 0024                    ??_init_ports 0004                      sprintf@fmt 0032  
            __end_of_latch_data 14E6                        _delay_ms 1408                        __ptext10 10E2  
                      __ptext11 132A                        __ptext20 1520                        __ptext12 0F00  
                      __ptext21 148A                        __ptext13 1526                        __ptext22 1436  
                      __ptext14 0FAA                        __ptext23 1514                        __ptext15 129A  
                      __ptext24 14AA                        __ptext16 14E6                        __ptext25 116C  
                      __ptext17 1408                        __ptext26 14C8                        __ptext18 11E0  
                      __ptext19 14FE              __end_of_init_ports 1464                   _uart_rx_index 006A  
               _UART_SendString 11E0                        isa$xinst 0000                        int$flags 0076  
                      _vfprintf 12EC                 ??_UART_SendChar 0004           read_spi_inputs@result 0006  
                      intlevel2 0000                       sprintf@ap 0035                   _get_key_value 14E6  
               main@xbuffer_606 0057                     ??_vfpfcnvrt 0027                        sprintf@f 0036  
                      sprintf@s 0031                        strncmp@l 0004                        strncmp@n 0006  
                      strncmp@r 0005                        strstr@nl 000B         __end_of_UART_SendString 123E  
            read_spi_inputs@rc3 0004              read_spi_inputs@rc4 0005                  ?_get_key_value 0004  
