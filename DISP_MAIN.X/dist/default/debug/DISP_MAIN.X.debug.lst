

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon May 05 14:06:19 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20   000000                     
    21                           ; Generated 17/10/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4520 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55   000FE0                     bsr             equ	4064
    56   000FE9                     fsr0            equ	4073
    57   000FEA                     fsr0h           equ	4074
    58   000FE9                     fsr0l           equ	4073
    59   000FE1                     fsr1            equ	4065
    60   000FE2                     fsr1h           equ	4066
    61   000FE1                     fsr1l           equ	4065
    62   000FD9                     fsr2            equ	4057
    63   000FDA                     fsr2h           equ	4058
    64   000FD9                     fsr2l           equ	4057
    65   000FEF                     indf0           equ	4079
    66   000FE7                     indf1           equ	4071
    67   000FDF                     indf2           equ	4063
    68   000FF2                     intcon          equ	4082
    69   000000                     nvmcon          equ	0
    70   000FF9                     pcl             equ	4089
    71   000FFA                     pclath          equ	4090
    72   000FFB                     pclatu          equ	4091
    73   000FEB                     plusw0          equ	4075
    74   000FE3                     plusw1          equ	4067
    75   000FDB                     plusw2          equ	4059
    76   000FED                     postdec0        equ	4077
    77   000FE5                     postdec1        equ	4069
    78   000FDD                     postdec2        equ	4061
    79   000FEE                     postinc0        equ	4078
    80   000FE6                     postinc1        equ	4070
    81   000FDE                     postinc2        equ	4062
    82   000FEC                     preinc0         equ	4076
    83   000FE4                     preinc1         equ	4068
    84   000FDC                     preinc2         equ	4060
    85   000FF3                     prod            equ	4083
    86   000FF4                     prodh           equ	4084
    87   000FF3                     prodl           equ	4083
    88   000FD8                     status          equ	4056
    89   000FF5                     tablat          equ	4085
    90   000FF6                     tblptr          equ	4086
    91   000FF7                     tblptrh         equ	4087
    92   000FF6                     tblptrl         equ	4086
    93   000FF8                     tblptru         equ	4088
    94   000FFD                     tosl            equ	4093
    95   000FE8                     wreg            equ	4072
    96   000F80                     PORTA           equ	3968	;# 
    97   000F81                     PORTB           equ	3969	;# 
    98   000F82                     PORTC           equ	3970	;# 
    99   000F83                     PORTD           equ	3971	;# 
   100   000F84                     PORTE           equ	3972	;# 
   101   000F89                     LATA            equ	3977	;# 
   102   000F8A                     LATB            equ	3978	;# 
   103   000F8B                     LATC            equ	3979	;# 
   104   000F8C                     LATD            equ	3980	;# 
   105   000F8D                     LATE            equ	3981	;# 
   106   000F92                     TRISA           equ	3986	;# 
   107   000F92                     DDRA            equ	3986	;# 
   108   000F93                     TRISB           equ	3987	;# 
   109   000F93                     DDRB            equ	3987	;# 
   110   000F94                     TRISC           equ	3988	;# 
   111   000F94                     DDRC            equ	3988	;# 
   112   000F95                     TRISD           equ	3989	;# 
   113   000F95                     DDRD            equ	3989	;# 
   114   000F96                     TRISE           equ	3990	;# 
   115   000F96                     DDRE            equ	3990	;# 
   116   000F9B                     OSCTUNE         equ	3995	;# 
   117   000F9D                     PIE1            equ	3997	;# 
   118   000F9E                     PIR1            equ	3998	;# 
   119   000F9F                     IPR1            equ	3999	;# 
   120   000FA0                     PIE2            equ	4000	;# 
   121   000FA1                     PIR2            equ	4001	;# 
   122   000FA2                     IPR2            equ	4002	;# 
   123   000FA6                     EECON1          equ	4006	;# 
   124   000FA7                     EECON2          equ	4007	;# 
   125   000FA8                     EEDATA          equ	4008	;# 
   126   000FA9                     EEADR           equ	4009	;# 
   127   000FAB                     RCSTA           equ	4011	;# 
   128   000FAB                     RCSTA1          equ	4011	;# 
   129   000FAC                     TXSTA           equ	4012	;# 
   130   000FAC                     TXSTA1          equ	4012	;# 
   131   000FAD                     TXREG           equ	4013	;# 
   132   000FAD                     TXREG1          equ	4013	;# 
   133   000FAE                     RCREG           equ	4014	;# 
   134   000FAE                     RCREG1          equ	4014	;# 
   135   000FAF                     SPBRG           equ	4015	;# 
   136   000FAF                     SPBRG1          equ	4015	;# 
   137   000FB0                     SPBRGH          equ	4016	;# 
   138   000FB1                     T3CON           equ	4017	;# 
   139   000FB2                     TMR3            equ	4018	;# 
   140   000FB2                     TMR3L           equ	4018	;# 
   141   000FB3                     TMR3H           equ	4019	;# 
   142   000FB4                     CMCON           equ	4020	;# 
   143   000FB5                     CVRCON          equ	4021	;# 
   144   000FB6                     ECCP1AS         equ	4022	;# 
   145   000FB6                     ECCPAS          equ	4022	;# 
   146   000FB7                     PWM1CON         equ	4023	;# 
   147   000FB7                     ECCP1DEL        equ	4023	;# 
   148   000FB8                     BAUDCON         equ	4024	;# 
   149   000FB8                     BAUDCTL         equ	4024	;# 
   150   000FBA                     CCP2CON         equ	4026	;# 
   151   000FBB                     CCPR2           equ	4027	;# 
   152   000FBB                     CCPR2L          equ	4027	;# 
   153   000FBC                     CCPR2H          equ	4028	;# 
   154   000FBD                     CCP1CON         equ	4029	;# 
   155   000FBE                     CCPR1           equ	4030	;# 
   156   000FBE                     CCPR1L          equ	4030	;# 
   157   000FBF                     CCPR1H          equ	4031	;# 
   158   000FC0                     ADCON2          equ	4032	;# 
   159   000FC1                     ADCON1          equ	4033	;# 
   160   000FC2                     ADCON0          equ	4034	;# 
   161   000FC3                     ADRES           equ	4035	;# 
   162   000FC3                     ADRESL          equ	4035	;# 
   163   000FC4                     ADRESH          equ	4036	;# 
   164   000FC5                     SSPCON2         equ	4037	;# 
   165   000FC6                     SSPCON1         equ	4038	;# 
   166   000FC7                     SSPSTAT         equ	4039	;# 
   167   000FC8                     SSPADD          equ	4040	;# 
   168   000FC9                     SSPBUF          equ	4041	;# 
   169   000FCA                     T2CON           equ	4042	;# 
   170   000FCB                     PR2             equ	4043	;# 
   171   000FCB                     MEMCON          equ	4043	;# 
   172   000FCC                     TMR2            equ	4044	;# 
   173   000FCD                     T1CON           equ	4045	;# 
   174   000FCE                     TMR1            equ	4046	;# 
   175   000FCE                     TMR1L           equ	4046	;# 
   176   000FCF                     TMR1H           equ	4047	;# 
   177   000FD0                     RCON            equ	4048	;# 
   178   000FD1                     WDTCON          equ	4049	;# 
   179   000FD2                     HLVDCON         equ	4050	;# 
   180   000FD2                     LVDCON          equ	4050	;# 
   181   000FD3                     OSCCON          equ	4051	;# 
   182   000FD5                     T0CON           equ	4053	;# 
   183   000FD6                     TMR0            equ	4054	;# 
   184   000FD6                     TMR0L           equ	4054	;# 
   185   000FD7                     TMR0H           equ	4055	;# 
   186   000FD8                     STATUS          equ	4056	;# 
   187   000FD9                     FSR2            equ	4057	;# 
   188   000FD9                     FSR2L           equ	4057	;# 
   189   000FDA                     FSR2H           equ	4058	;# 
   190   000FDB                     PLUSW2          equ	4059	;# 
   191   000FDC                     PREINC2         equ	4060	;# 
   192   000FDD                     POSTDEC2        equ	4061	;# 
   193   000FDE                     POSTINC2        equ	4062	;# 
   194   000FDF                     INDF2           equ	4063	;# 
   195   000FE0                     BSR             equ	4064	;# 
   196   000FE1                     FSR1            equ	4065	;# 
   197   000FE1                     FSR1L           equ	4065	;# 
   198   000FE2                     FSR1H           equ	4066	;# 
   199   000FE3                     PLUSW1          equ	4067	;# 
   200   000FE4                     PREINC1         equ	4068	;# 
   201   000FE5                     POSTDEC1        equ	4069	;# 
   202   000FE6                     POSTINC1        equ	4070	;# 
   203   000FE7                     INDF1           equ	4071	;# 
   204   000FE8                     WREG            equ	4072	;# 
   205   000FE9                     FSR0            equ	4073	;# 
   206   000FE9                     FSR0L           equ	4073	;# 
   207   000FEA                     FSR0H           equ	4074	;# 
   208   000FEB                     PLUSW0          equ	4075	;# 
   209   000FEC                     PREINC0         equ	4076	;# 
   210   000FED                     POSTDEC0        equ	4077	;# 
   211   000FEE                     POSTINC0        equ	4078	;# 
   212   000FEF                     INDF0           equ	4079	;# 
   213   000FF0                     INTCON3         equ	4080	;# 
   214   000FF1                     INTCON2         equ	4081	;# 
   215   000FF2                     INTCON          equ	4082	;# 
   216   000FF3                     PROD            equ	4083	;# 
   217   000FF3                     PRODL           equ	4083	;# 
   218   000FF4                     PRODH           equ	4084	;# 
   219   000FF5                     TABLAT          equ	4085	;# 
   220   000FF6                     TBLPTR          equ	4086	;# 
   221   000FF6                     TBLPTRL         equ	4086	;# 
   222   000FF7                     TBLPTRH         equ	4087	;# 
   223   000FF8                     TBLPTRU         equ	4088	;# 
   224   000FF9                     PCLAT           equ	4089	;# 
   225   000FF9                     PC              equ	4089	;# 
   226   000FF9                     PCL             equ	4089	;# 
   227   000FFA                     PCLATH          equ	4090	;# 
   228   000FFB                     PCLATU          equ	4091	;# 
   229   000FFC                     STKPTR          equ	4092	;# 
   230   000FFD                     TOS             equ	4093	;# 
   231   000FFD                     TOSL            equ	4093	;# 
   232   000FFE                     TOSH            equ	4094	;# 
   233   000FFF                     TOSU            equ	4095	;# 
   234   000F80                     PORTA           equ	3968	;# 
   235   000F81                     PORTB           equ	3969	;# 
   236   000F82                     PORTC           equ	3970	;# 
   237   000F83                     PORTD           equ	3971	;# 
   238   000F84                     PORTE           equ	3972	;# 
   239   000F89                     LATA            equ	3977	;# 
   240   000F8A                     LATB            equ	3978	;# 
   241   000F8B                     LATC            equ	3979	;# 
   242   000F8C                     LATD            equ	3980	;# 
   243   000F8D                     LATE            equ	3981	;# 
   244   000F92                     TRISA           equ	3986	;# 
   245   000F92                     DDRA            equ	3986	;# 
   246   000F93                     TRISB           equ	3987	;# 
   247   000F93                     DDRB            equ	3987	;# 
   248   000F94                     TRISC           equ	3988	;# 
   249   000F94                     DDRC            equ	3988	;# 
   250   000F95                     TRISD           equ	3989	;# 
   251   000F95                     DDRD            equ	3989	;# 
   252   000F96                     TRISE           equ	3990	;# 
   253   000F96                     DDRE            equ	3990	;# 
   254   000F9B                     OSCTUNE         equ	3995	;# 
   255   000F9D                     PIE1            equ	3997	;# 
   256   000F9E                     PIR1            equ	3998	;# 
   257   000F9F                     IPR1            equ	3999	;# 
   258   000FA0                     PIE2            equ	4000	;# 
   259   000FA1                     PIR2            equ	4001	;# 
   260   000FA2                     IPR2            equ	4002	;# 
   261   000FA6                     EECON1          equ	4006	;# 
   262   000FA7                     EECON2          equ	4007	;# 
   263   000FA8                     EEDATA          equ	4008	;# 
   264   000FA9                     EEADR           equ	4009	;# 
   265   000FAB                     RCSTA           equ	4011	;# 
   266   000FAB                     RCSTA1          equ	4011	;# 
   267   000FAC                     TXSTA           equ	4012	;# 
   268   000FAC                     TXSTA1          equ	4012	;# 
   269   000FAD                     TXREG           equ	4013	;# 
   270   000FAD                     TXREG1          equ	4013	;# 
   271   000FAE                     RCREG           equ	4014	;# 
   272   000FAE                     RCREG1          equ	4014	;# 
   273   000FAF                     SPBRG           equ	4015	;# 
   274   000FAF                     SPBRG1          equ	4015	;# 
   275   000FB0                     SPBRGH          equ	4016	;# 
   276   000FB1                     T3CON           equ	4017	;# 
   277   000FB2                     TMR3            equ	4018	;# 
   278   000FB2                     TMR3L           equ	4018	;# 
   279   000FB3                     TMR3H           equ	4019	;# 
   280   000FB4                     CMCON           equ	4020	;# 
   281   000FB5                     CVRCON          equ	4021	;# 
   282   000FB6                     ECCP1AS         equ	4022	;# 
   283   000FB6                     ECCPAS          equ	4022	;# 
   284   000FB7                     PWM1CON         equ	4023	;# 
   285   000FB7                     ECCP1DEL        equ	4023	;# 
   286   000FB8                     BAUDCON         equ	4024	;# 
   287   000FB8                     BAUDCTL         equ	4024	;# 
   288   000FBA                     CCP2CON         equ	4026	;# 
   289   000FBB                     CCPR2           equ	4027	;# 
   290   000FBB                     CCPR2L          equ	4027	;# 
   291   000FBC                     CCPR2H          equ	4028	;# 
   292   000FBD                     CCP1CON         equ	4029	;# 
   293   000FBE                     CCPR1           equ	4030	;# 
   294   000FBE                     CCPR1L          equ	4030	;# 
   295   000FBF                     CCPR1H          equ	4031	;# 
   296   000FC0                     ADCON2          equ	4032	;# 
   297   000FC1                     ADCON1          equ	4033	;# 
   298   000FC2                     ADCON0          equ	4034	;# 
   299   000FC3                     ADRES           equ	4035	;# 
   300   000FC3                     ADRESL          equ	4035	;# 
   301   000FC4                     ADRESH          equ	4036	;# 
   302   000FC5                     SSPCON2         equ	4037	;# 
   303   000FC6                     SSPCON1         equ	4038	;# 
   304   000FC7                     SSPSTAT         equ	4039	;# 
   305   000FC8                     SSPADD          equ	4040	;# 
   306   000FC9                     SSPBUF          equ	4041	;# 
   307   000FCA                     T2CON           equ	4042	;# 
   308   000FCB                     PR2             equ	4043	;# 
   309   000FCB                     MEMCON          equ	4043	;# 
   310   000FCC                     TMR2            equ	4044	;# 
   311   000FCD                     T1CON           equ	4045	;# 
   312   000FCE                     TMR1            equ	4046	;# 
   313   000FCE                     TMR1L           equ	4046	;# 
   314   000FCF                     TMR1H           equ	4047	;# 
   315   000FD0                     RCON            equ	4048	;# 
   316   000FD1                     WDTCON          equ	4049	;# 
   317   000FD2                     HLVDCON         equ	4050	;# 
   318   000FD2                     LVDCON          equ	4050	;# 
   319   000FD3                     OSCCON          equ	4051	;# 
   320   000FD5                     T0CON           equ	4053	;# 
   321   000FD6                     TMR0            equ	4054	;# 
   322   000FD6                     TMR0L           equ	4054	;# 
   323   000FD7                     TMR0H           equ	4055	;# 
   324   000FD8                     STATUS          equ	4056	;# 
   325   000FD9                     FSR2            equ	4057	;# 
   326   000FD9                     FSR2L           equ	4057	;# 
   327   000FDA                     FSR2H           equ	4058	;# 
   328   000FDB                     PLUSW2          equ	4059	;# 
   329   000FDC                     PREINC2         equ	4060	;# 
   330   000FDD                     POSTDEC2        equ	4061	;# 
   331   000FDE                     POSTINC2        equ	4062	;# 
   332   000FDF                     INDF2           equ	4063	;# 
   333   000FE0                     BSR             equ	4064	;# 
   334   000FE1                     FSR1            equ	4065	;# 
   335   000FE1                     FSR1L           equ	4065	;# 
   336   000FE2                     FSR1H           equ	4066	;# 
   337   000FE3                     PLUSW1          equ	4067	;# 
   338   000FE4                     PREINC1         equ	4068	;# 
   339   000FE5                     POSTDEC1        equ	4069	;# 
   340   000FE6                     POSTINC1        equ	4070	;# 
   341   000FE7                     INDF1           equ	4071	;# 
   342   000FE8                     WREG            equ	4072	;# 
   343   000FE9                     FSR0            equ	4073	;# 
   344   000FE9                     FSR0L           equ	4073	;# 
   345   000FEA                     FSR0H           equ	4074	;# 
   346   000FEB                     PLUSW0          equ	4075	;# 
   347   000FEC                     PREINC0         equ	4076	;# 
   348   000FED                     POSTDEC0        equ	4077	;# 
   349   000FEE                     POSTINC0        equ	4078	;# 
   350   000FEF                     INDF0           equ	4079	;# 
   351   000FF0                     INTCON3         equ	4080	;# 
   352   000FF1                     INTCON2         equ	4081	;# 
   353   000FF2                     INTCON          equ	4082	;# 
   354   000FF3                     PROD            equ	4083	;# 
   355   000FF3                     PRODL           equ	4083	;# 
   356   000FF4                     PRODH           equ	4084	;# 
   357   000FF5                     TABLAT          equ	4085	;# 
   358   000FF6                     TBLPTR          equ	4086	;# 
   359   000FF6                     TBLPTRL         equ	4086	;# 
   360   000FF7                     TBLPTRH         equ	4087	;# 
   361   000FF8                     TBLPTRU         equ	4088	;# 
   362   000FF9                     PCLAT           equ	4089	;# 
   363   000FF9                     PC              equ	4089	;# 
   364   000FF9                     PCL             equ	4089	;# 
   365   000FFA                     PCLATH          equ	4090	;# 
   366   000FFB                     PCLATU          equ	4091	;# 
   367   000FFC                     STKPTR          equ	4092	;# 
   368   000FFD                     TOS             equ	4093	;# 
   369   000FFD                     TOSL            equ	4093	;# 
   370   000FFE                     TOSH            equ	4094	;# 
   371   000FFF                     TOSU            equ	4095	;# 
   372   007CA7                     _TRISC7         set	31911
   373   007CA6                     _TRISC6         set	31910
   374   007CF4                     _TXIF           set	31988
   375   007CED                     _RCIE           set	31981
   376   007CF5                     _RCIF           set	31989
   377   007D5C                     _CREN           set	32092
   378   007D65                     _TXEN           set	32101
   379   007D5F                     _SPEN           set	32095
   380   007D64                     _SYNC           set	32100
   381   007DC3                     _BRG16          set	32195
   382   007D62                     _BRGH           set	32098
   383   007F97                     _GIE            set	32663
   384   007F96                     _PEIE           set	32662
   385   000FAE                     _RCREG          set	4014
   386   000FAD                     _TXREG          set	4013
   387   000FAF                     _SPBRG          set	4015
   388                           
   389                           	psect	smallconst
   390   000600                     __psmallconst:
   391                           	callstack 0
   392   000600  00                 	db	0
   393   000601                     STR_1:
   394   000601  55                 	db	85	;'U'
   395   000602  41                 	db	65	;'A'
   396   000603  52                 	db	82	;'R'
   397   000604  54                 	db	84	;'T'
   398   000605  20                 	db	32
   399   000606  49                 	db	73	;'I'
   400   000607  6E                 	db	110	;'n'
   401   000608  69                 	db	105	;'i'
   402   000609  74                 	db	116	;'t'
   403   00060A  20                 	db	32
   404   00060B  4F                 	db	79	;'O'
   405   00060C  4B                 	db	75	;'K'
   406   00060D  0D                 	db	13
   407   00060E  0A                 	db	10
   408   00060F  00                 	db	0
   409   000610                     STR_2:
   410   000610  52                 	db	82	;'R'
   411   000611  65                 	db	101	;'e'
   412   000612  63                 	db	99	;'c'
   413   000613  65                 	db	101	;'e'
   414   000614  69                 	db	105	;'i'
   415   000615  76                 	db	118	;'v'
   416   000616  65                 	db	101	;'e'
   417   000617  64                 	db	100	;'d'
   418   000618  3A                 	db	58	;':'
   419   000619  20                 	db	32
   420   00061A  00                 	db	0
   421   00060D                     STR_3           equ	STR_1+12
   422   00061B  00                 	db	0	; dummy byte at the end
   423   000600                     __smallconst    set	__psmallconst
   424   000600                     __mediumconst   set	__psmallconst
   425   000001                     __activetblptr  equ	1
   426                           
   427                           ; #config settings
   428                           
   429                           	psect	cinit
   430   00073E                     __pcinit:
   431                           	callstack 0
   432   00073E                     start_initialization:
   433                           	callstack 0
   434   00073E                     __initialization:
   435                           	callstack 0
   436                           
   437                           ; Clear objects allocated to COMRAM (18 bytes)
   438   00073E  EE00  F001         	lfsr	0,__pbssCOMRAM
   439   000742  0E12               	movlw	18
   440   000744                     clear_0:
   441   000744  6AEE               	clrf	postinc0,c
   442   000746  06E8               	decf	wreg,f,c
   443   000748  E1FD               	bnz	clear_0
   444   00074A                     end_of_initialization:
   445                           	callstack 0
   446   00074A                     __end_of__initialization:
   447                           	callstack 0
   448   00074A  901A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   449   00074C  921A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   450   00074E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   451   000750  6EF8               	movwf	tblptru,c
   452   000752  0E06               	movlw	high __Lsmallconst
   453   000754  6EF7               	movwf	tblptrh,c
   454   000756  0100               	movlb	0
   455   000758  EF0E  F003         	goto	_main	;jump to C main() function
   456                           
   457                           	psect	bssCOMRAM
   458   000001                     __pbssCOMRAM:
   459                           	callstack 0
   460   000001                     _uart_rx_buffer:
   461                           	callstack 0
   462   000001                     	ds	16
   463   000011                     _uart_rx_index:
   464                           	callstack 0
   465   000011                     	ds	1
   466   000012                     _uart_frame_ready:
   467                           	callstack 0
   468   000012                     	ds	1
   469                           
   470                           	psect	cstackCOMRAM
   471   000013                     __pcstackCOMRAM:
   472                           	callstack 0
   473   000013                     ??_ISR:
   474                           
   475                           ; 1 bytes @ 0x0
   476   000013                     	ds	2
   477   000015                     ISR@received:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0x2
   481   000015                     	ds	1
   482   000016                     UART_SendChar@ch:
   483                           	callstack 0
   484   000016                     delay_ms@ms:
   485                           	callstack 0
   486   000016                     
   487                           ; 1 bytes @ 0x3
   488   000016                     	ds	1
   489   000017                     UART_SendString@str:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x4
   493   000017                     	ds	1
   494   000018                     ??_delay_ms:
   495                           
   496                           ; 1 bytes @ 0x5
   497   000018                     	ds	1
   498   000019                     main@i:
   499                           	callstack 0
   500   000019                     
   501                           ; 1 bytes @ 0x6
   502   000019                     	ds	1
   503                           
   504 ;;
   505 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   506 ;;
   507 ;; *************** function _main *****************
   508 ;; Defined at:
   509 ;;		line 42 in file "main.c"
   510 ;; Parameters:    Size  Location     Type
   511 ;;		None
   512 ;; Auto vars:     Size  Location     Type
   513 ;;  i               1    6[COMRAM] unsigned char 
   514 ;; Return value:  Size  Location     Type
   515 ;;                  1    wreg      void 
   516 ;; Registers used:
   517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   518 ;; Tracked objects:
   519 ;;		On entry : 0/0
   520 ;;		On exit  : 0/0
   521 ;;		Unchanged: 0/0
   522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   523 ;;      Params:         0       0       0       0       0       0       0
   524 ;;      Locals:         1       0       0       0       0       0       0
   525 ;;      Temps:          0       0       0       0       0       0       0
   526 ;;      Totals:         1       0       0       0       0       0       0
   527 ;;Total ram usage:        1 bytes
   528 ;; Hardware stack levels required when called: 3
   529 ;; This function calls:
   530 ;;		_UART_Init
   531 ;;		_UART_SendChar
   532 ;;		_UART_SendString
   533 ;;		_delay_ms
   534 ;; This function is called by:
   535 ;;		Startup code after reset
   536 ;; This function uses a non-reentrant model
   537 ;;
   538                           
   539                           	psect	text0
   540   00061C                     __ptext0:
   541                           	callstack 0
   542   00061C                     _main:
   543                           	callstack 28
   544   00061C  0E03               	movlw	3
   545   00061E  6E17               	movwf	(delay_ms@ms+1)^0,c
   546   000620  0EE8               	movlw	232
   547   000622  6E16               	movwf	delay_ms@ms^0,c
   548   000624  EC72  F003         	call	_delay_ms	;wreg free
   549   000628  ECAE  F003         	call	_UART_Init	;wreg free
   550   00062C  0E01               	movlw	low STR_1
   551   00062E  6E17               	movwf	UART_SendString@str^0,c
   552   000630  EC89  F003         	call	_UART_SendString	;wreg free
   553   000634                     l897:
   554   000634  5012               	movf	_uart_frame_ready^0,w,c	;volatile
   555   000636  B4D8               	btfsc	status,2,c
   556   000638  EF20  F003         	goto	u121
   557   00063C  EF22  F003         	goto	u120
   558   000640                     u121:
   559   000640  EF1A  F003         	goto	l897
   560   000644                     u120:
   561   000644  6A12               	clrf	_uart_frame_ready^0,c	;volatile
   562   000646  0E10               	movlw	low STR_2
   563   000648  6E17               	movwf	UART_SendString@str^0,c
   564   00064A  EC89  F003         	call	_UART_SendString	;wreg free
   565   00064E  6A19               	clrf	main@i^0,c
   566   000650  EF32  F003         	goto	l909
   567   000654                     l905:
   568   000654  5019               	movf	main@i^0,w,c
   569   000656  0F01               	addlw	low _uart_rx_buffer
   570   000658  6ED9               	movwf	fsr2l,c
   571   00065A  6ADA               	clrf	fsr2h,c
   572   00065C  50DF               	movf	indf2,w,c
   573   00065E  ECBD  F003         	call	_UART_SendChar
   574   000662  2A19               	incf	main@i^0,f,c
   575   000664                     l909:
   576   000664  5011               	movf	_uart_rx_index^0,w,c	;volatile
   577   000666  5C19               	subwf	main@i^0,w,c
   578   000668  A0D8               	btfss	status,0,c
   579   00066A  EF39  F003         	goto	u131
   580   00066E  EF3B  F003         	goto	u130
   581   000672                     u131:
   582   000672  EF2A  F003         	goto	l905
   583   000676                     u130:
   584   000676  0E0D               	movlw	low (STR_1+12)
   585   000678  6E17               	movwf	UART_SendString@str^0,c
   586   00067A  EC89  F003         	call	_UART_SendString	;wreg free
   587   00067E  6A11               	clrf	_uart_rx_index^0,c	;volatile
   588   000680  EF1A  F003         	goto	l897
   589   000684  EF07  F000         	goto	start
   590   000688                     __end_of_main:
   591                           	callstack 0
   592                           
   593 ;; *************** function _delay_ms *****************
   594 ;; Defined at:
   595 ;;		line 34 in file "main.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;  ms              2    3[COMRAM] unsigned int 
   598 ;; Auto vars:     Size  Location     Type
   599 ;;		None
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      void 
   602 ;; Registers used:
   603 ;;		wreg, status,2, status,0
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   609 ;;      Params:         2       0       0       0       0       0       0
   610 ;;      Locals:         0       0       0       0       0       0       0
   611 ;;      Temps:          1       0       0       0       0       0       0
   612 ;;      Totals:         3       0       0       0       0       0       0
   613 ;;Total ram usage:        3 bytes
   614 ;; Hardware stack levels used: 1
   615 ;; Hardware stack levels required when called: 1
   616 ;; This function calls:
   617 ;;		Nothing
   618 ;; This function is called by:
   619 ;;		_main
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623                           	psect	text1
   624   0006E4                     __ptext1:
   625                           	callstack 0
   626   0006E4                     _delay_ms:
   627                           	callstack 29
   628   0006E4  EF7B  F003         	goto	l857
   629   0006E8                     l855:
   630   0006E8  0E04               	movlw	4
   631   0006EA  6E18               	movwf	??_delay_ms^0,c
   632   0006EC  0E3E               	movlw	62
   633   0006EE                     u177:
   634   0006EE  2EE8               	decfsz	wreg,f,c
   635   0006F0  D7FE               	bra	u177
   636   0006F2  2E18               	decfsz	??_delay_ms^0,f,c
   637   0006F4  D7FC               	bra	u177
   638   0006F6                     l857:
   639   0006F6  0616               	decf	delay_ms@ms^0,f,c
   640   0006F8  A0D8               	btfss	status,0,c
   641   0006FA  0617               	decf	(delay_ms@ms+1)^0,f,c
   642   0006FC  2816               	incf	delay_ms@ms^0,w,c
   643   0006FE  E106               	bnz	u101
   644   000700  2817               	incf	(delay_ms@ms+1)^0,w,c
   645   000702  A4D8               	btfss	status,2,c
   646   000704  EF86  F003         	goto	u101
   647   000708  EF88  F003         	goto	u100
   648   00070C                     u101:
   649   00070C  EF74  F003         	goto	l855
   650   000710                     u100:
   651   000710  0012               	return		;funcret
   652   000712                     __end_of_delay_ms:
   653                           	callstack 0
   654                           
   655 ;; *************** function _UART_SendString *****************
   656 ;; Defined at:
   657 ;;		line 44 in file "u_uart.c"
   658 ;; Parameters:    Size  Location     Type
   659 ;;  str             1    4[COMRAM] PTR const unsigned char 
   660 ;;		 -> STR_3(3), STR_2(11), STR_1(15), 
   661 ;; Auto vars:     Size  Location     Type
   662 ;;		None
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   672 ;;      Params:         1       0       0       0       0       0       0
   673 ;;      Locals:         0       0       0       0       0       0       0
   674 ;;      Temps:          0       0       0       0       0       0       0
   675 ;;      Totals:         1       0       0       0       0       0       0
   676 ;;Total ram usage:        1 bytes
   677 ;; Hardware stack levels used: 1
   678 ;; Hardware stack levels required when called: 2
   679 ;; This function calls:
   680 ;;		_UART_SendChar
   681 ;; This function is called by:
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           	psect	text2
   687   000712                     __ptext2:
   688                           	callstack 0
   689   000712                     _UART_SendString:
   690                           	callstack 28
   691   000712                     
   692                           ;u_uart.c: 44: void UART_SendString(const char* str);u_uart.c: 45: {;u_uart.c: 46:     w
      +                          hile (*str)
   693   000712  EF92  F003         	goto	l889
   694   000716                     l885:
   695                           
   696                           ;u_uart.c: 47:         UART_SendChar(*str++);
   697   000716  C017  FFF6         	movff	UART_SendString@str,tblptrl
   698   00071A                     	if	0	;There is only one active tblptr byte
   699   00071A                     	endif
   700   00071A                     	if	0	;tblptru may be non-zero
   701   00071A                     	endif
   702   00071A                     	if	0	;tblptru may be non-zero
   703   00071A                     	endif
   704   00071A  0008               	tblrd		*
   705   00071C  50F5               	movf	tablat,w,c
   706   00071E  ECBD  F003         	call	_UART_SendChar
   707   000722  2A17               	incf	UART_SendString@str^0,f,c
   708   000724                     l889:
   709                           
   710                           ;u_uart.c: 46:     while (*str)
   711   000724  C017  FFF6         	movff	UART_SendString@str,tblptrl
   712   000728                     	if	0	;There is only one active tblptr byte
   713   000728                     	endif
   714   000728                     	if	0	;tblptru may be non-zero
   715   000728                     	endif
   716   000728                     	if	0	;tblptru may be non-zero
   717   000728                     	endif
   718   000728  0008               	tblrd		*
   719   00072A  50F5               	movf	tablat,w,c
   720   00072C  0900               	iorlw	0
   721   00072E  A4D8               	btfss	status,2,c
   722   000730  EF9C  F003         	goto	u111
   723   000734  EF9E  F003         	goto	u110
   724   000738                     u111:
   725   000738  EF8B  F003         	goto	l885
   726   00073C                     u110:
   727   00073C  0012               	return		;funcret
   728   00073E                     __end_of_UART_SendString:
   729                           	callstack 0
   730                           
   731 ;; *************** function _UART_SendChar *****************
   732 ;; Defined at:
   733 ;;		line 37 in file "u_uart.c"
   734 ;; Parameters:    Size  Location     Type
   735 ;;  ch              1    wreg     unsigned char 
   736 ;; Auto vars:     Size  Location     Type
   737 ;;  ch              1    3[COMRAM] unsigned char 
   738 ;; Return value:  Size  Location     Type
   739 ;;                  1    wreg      void 
   740 ;; Registers used:
   741 ;;		wreg
   742 ;; Tracked objects:
   743 ;;		On entry : 0/0
   744 ;;		On exit  : 0/0
   745 ;;		Unchanged: 0/0
   746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   747 ;;      Params:         0       0       0       0       0       0       0
   748 ;;      Locals:         1       0       0       0       0       0       0
   749 ;;      Temps:          0       0       0       0       0       0       0
   750 ;;      Totals:         1       0       0       0       0       0       0
   751 ;;Total ram usage:        1 bytes
   752 ;; Hardware stack levels used: 1
   753 ;; Hardware stack levels required when called: 1
   754 ;; This function calls:
   755 ;;		Nothing
   756 ;; This function is called by:
   757 ;;		_main
   758 ;;		_UART_SendString
   759 ;; This function uses a non-reentrant model
   760 ;;
   761                           
   762                           	psect	text3
   763   00077A                     __ptext3:
   764                           	callstack 0
   765   00077A                     _UART_SendChar:
   766                           	callstack 28
   767                           
   768                           ;incstack = 0
   769                           ;UART_SendChar@ch stored from wreg
   770   00077A  6E16               	movwf	UART_SendChar@ch^0,c
   771   00077C                     l76:
   772                           
   773                           ;u_uart.c: 39:     while (!TXIF)
   774   00077C  A89E               	btfss	3998,4,c	;volatile
   775   00077E  EFC3  F003         	goto	u91
   776   000782  EFC5  F003         	goto	u90
   777   000786                     u91:
   778   000786  EFBE  F003         	goto	l76
   779   00078A                     u90:
   780   00078A                     
   781                           ;u_uart.c: 41:     TXREG = ch;
   782   00078A  C016  FFAD         	movff	UART_SendChar@ch,4013	;volatile
   783   00078E  0012               	return		;funcret
   784   000790                     __end_of_UART_SendChar:
   785                           	callstack 0
   786                           
   787 ;; *************** function _UART_Init *****************
   788 ;; Defined at:
   789 ;;		line 17 in file "u_uart.c"
   790 ;; Parameters:    Size  Location     Type
   791 ;;		None
   792 ;; Auto vars:     Size  Location     Type
   793 ;;		None
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, status,2
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   803 ;;      Params:         0       0       0       0       0       0       0
   804 ;;      Locals:         0       0       0       0       0       0       0
   805 ;;      Temps:          0       0       0       0       0       0       0
   806 ;;      Totals:         0       0       0       0       0       0       0
   807 ;;Total ram usage:        0 bytes
   808 ;; Hardware stack levels used: 1
   809 ;; Hardware stack levels required when called: 1
   810 ;; This function calls:
   811 ;;		Nothing
   812 ;; This function is called by:
   813 ;;		_main
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           	psect	text4
   818   00075C                     __ptext4:
   819                           	callstack 0
   820   00075C                     _UART_Init:
   821                           	callstack 29
   822   00075C                     
   823                           ;u_uart.c: 19:     TRISC6 = 0;
   824   00075C  9C94               	bcf	3988,6,c	;volatile
   825                           
   826                           ;u_uart.c: 20:     TRISC7 = 1;
   827   00075E  8E94               	bsf	3988,7,c	;volatile
   828   000760                     
   829                           ;u_uart.c: 22:     SPBRG = 15;
   830   000760  0E0F               	movlw	15
   831   000762  6EAF               	movwf	175,c	;volatile
   832   000764                     
   833                           ;u_uart.c: 23:     BRGH = 0;
   834   000764  94AC               	bcf	4012,2,c	;volatile
   835   000766                     
   836                           ;u_uart.c: 24:     BRG16 = 0;
   837   000766  96B8               	bcf	4024,3,c	;volatile
   838   000768                     
   839                           ;u_uart.c: 26:     SYNC = 0;
   840   000768  98AC               	bcf	4012,4,c	;volatile
   841   00076A                     
   842                           ;u_uart.c: 27:     SPEN = 1;
   843   00076A  8EAB               	bsf	4011,7,c	;volatile
   844   00076C                     
   845                           ;u_uart.c: 28:     TXEN = 1;
   846   00076C  8AAC               	bsf	4012,5,c	;volatile
   847   00076E                     
   848                           ;u_uart.c: 29:     CREN = 1;
   849   00076E  88AB               	bsf	4011,4,c	;volatile
   850   000770                     
   851                           ;u_uart.c: 31:     RCIF = 0;
   852   000770  9A9E               	bcf	3998,5,c	;volatile
   853   000772                     
   854                           ;u_uart.c: 32:     RCIE = 1;
   855   000772  8A9D               	bsf	3997,5,c	;volatile
   856   000774                     
   857                           ;u_uart.c: 33:     PEIE = 1;
   858   000774  8CF2               	bsf	4082,6,c	;volatile
   859   000776                     
   860                           ;u_uart.c: 34:     GIE = 1;
   861   000776  8EF2               	bsf	4082,7,c	;volatile
   862   000778  0012               	return		;funcret
   863   00077A                     __end_of_UART_Init:
   864                           	callstack 0
   865                           
   866 ;; *************** function _ISR *****************
   867 ;; Defined at:
   868 ;;		line 51 in file "u_uart.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;  received        1    2[COMRAM] unsigned char 
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   882 ;;      Params:         0       0       0       0       0       0       0
   883 ;;      Locals:         1       0       0       0       0       0       0
   884 ;;      Temps:          2       0       0       0       0       0       0
   885 ;;      Totals:         3       0       0       0       0       0       0
   886 ;;Total ram usage:        3 bytes
   887 ;; Hardware stack levels used: 1
   888 ;; This function calls:
   889 ;;		Nothing
   890 ;; This function is called by:
   891 ;;		Interrupt level 2
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	intcode
   896   000008                     __pintcode:
   897                           	callstack 0
   898   000008                     _ISR:
   899                           	callstack 28
   900                           
   901                           ;incstack = 0
   902   000008  821A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   903   00000A  ED44  F003         	call	int_func,f	;refresh shadow registers
   904                           
   905                           	psect	intcode_body
   906   000688                     __pintcode_body:
   907                           	callstack 28
   908   000688                     int_func:
   909                           	callstack 28
   910   000688  0006               	pop		; remove dummy address from shadow register refresh
   911   00068A  CFD9 F013          	movff	fsr2l,??_ISR
   912   00068E  CFDA F014          	movff	fsr2h,??_ISR+1
   913   000692                     
   914                           ;u_uart.c: 53:     if (RCIF)
   915   000692  AA9E               	btfss	3998,5,c	;volatile
   916   000694  EF4E  F003         	goto	i2u14_41
   917   000698  EF50  F003         	goto	i2u14_40
   918   00069C                     i2u14_41:
   919   00069C  EF6C  F003         	goto	i2l93
   920   0006A0                     i2u14_40:
   921   0006A0                     
   922                           ;u_uart.c: 54:     {;u_uart.c: 55:         uint8_t received = RCREG;
   923   0006A0  CFAE F015          	movff	4014,ISR@received	;volatile
   924   0006A4                     
   925                           ;u_uart.c: 57:         if (uart_frame_ready == 0)
   926   0006A4  5012               	movf	_uart_frame_ready^0,w,c	;volatile
   927   0006A6  A4D8               	btfss	status,2,c
   928   0006A8  EF58  F003         	goto	i2u15_41
   929   0006AC  EF5A  F003         	goto	i2u15_40
   930   0006B0                     i2u15_41:
   931   0006B0  EF6C  F003         	goto	i2l93
   932   0006B4                     i2u15_40:
   933   0006B4                     
   934                           ;u_uart.c: 58:         {;u_uart.c: 59:             uart_rx_buffer[uart_rx_index++] = rec
      +                          eived;
   935   0006B4  5011               	movf	_uart_rx_index^0,w,c
   936   0006B6  0F01               	addlw	low _uart_rx_buffer
   937   0006B8  6ED9               	movwf	fsr2l,c
   938   0006BA  6ADA               	clrf	fsr2h,c
   939   0006BC  C015  FFDF         	movff	ISR@received,indf2
   940   0006C0  2A11               	incf	_uart_rx_index^0,f,c	;volatile
   941   0006C2                     
   942                           ;u_uart.c: 60:             if (uart_rx_index >= 16)
   943   0006C2  0E0F               	movlw	15
   944   0006C4  6411               	cpfsgt	_uart_rx_index^0,c	;volatile
   945   0006C6  EF67  F003         	goto	i2u16_41
   946   0006CA  EF69  F003         	goto	i2u16_40
   947   0006CE                     i2u16_41:
   948   0006CE  EF6C  F003         	goto	i2l93
   949   0006D2                     i2u16_40:
   950   0006D2                     
   951                           ;u_uart.c: 61:             {;u_uart.c: 62:                 uart_frame_ready = 1;
   952   0006D2  0E01               	movlw	1
   953   0006D4  6E12               	movwf	_uart_frame_ready^0,c	;volatile
   954   0006D6                     
   955                           ;u_uart.c: 63:                 uart_rx_index = 0;
   956   0006D6  6A11               	clrf	_uart_rx_index^0,c	;volatile
   957   0006D8                     i2l93:
   958   0006D8  C014  FFDA         	movff	??_ISR+1,fsr2h
   959   0006DC  C013  FFD9         	movff	??_ISR,fsr2l
   960   0006E0  921A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   961   0006E2  0011               	retfie		f
   962   0006E4                     __end_of_ISR:
   963                           	callstack 0
   964                           
   965                           	psect	rparam
   966   000001                     ___rparam_used  equ	1
   967   000000                     ___param_bank   equ	0
   968   000000                     __Lparam        equ	__Lrparam
   969   000000                     __Hparam        equ	__Hrparam
   970                           
   971                           	psect	temp
   972   00001A                     btemp:
   973                           	callstack 0
   974   00001A                     	ds	1
   975   00001A                     int$flags       set	btemp
   976   00001B                     wtemp8          set	btemp+1
   977   00001B                     ttemp5          set	btemp+1
   978   00001E                     ttemp6          set	btemp+4
   979   000022                     ttemp7          set	btemp+8
   980                           
   981                           	psect	config
   982                           
   983                           ; Padding undefined space
   984   300000                     	org	3145728
   985   300000  FF                 	db	255
   986                           
   987                           ;Config register CONFIG1H @ 0x300001
   988                           ;	Oscillator Selection bits
   989                           ;	OSC = HS, HS oscillator
   990                           ;	Fail-Safe Clock Monitor Enable bit
   991                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   992                           ;	Internal/External Oscillator Switchover bit
   993                           ;	IESO = OFF, Oscillator Switchover mode disabled
   994   300001                     	org	3145729
   995   300001  02                 	db	2
   996                           
   997                           ;Config register CONFIG2L @ 0x300002
   998                           ;	Power-up Timer Enable bit
   999                           ;	PWRT = OFF, PWRT disabled
  1000                           ;	Brown-out Reset Enable bits
  1001                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1002                           ;	Brown Out Reset Voltage bits
  1003                           ;	BORV = 3, Minimum setting
  1004   300002                     	org	3145730
  1005   300002  19                 	db	25
  1006                           
  1007                           ;Config register CONFIG2H @ 0x300003
  1008                           ;	Watchdog Timer Enable bit
  1009                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1010                           ;	Watchdog Timer Postscale Select bits
  1011                           ;	WDTPS = 32768, 1:32768
  1012   300003                     	org	3145731
  1013   300003  1E                 	db	30
  1014                           
  1015                           ; Padding undefined space
  1016   300004                     	org	3145732
  1017   300004  FF                 	db	255
  1018                           
  1019                           ;Config register CONFIG3H @ 0x300005
  1020                           ;	CCP2 MUX bit
  1021                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1022                           ;	PORTB A/D Enable bit
  1023                           ;	PBADEN = 0x1, unprogrammed default
  1024                           ;	Low-Power Timer1 Oscillator Enable bit
  1025                           ;	LPT1OSC = 0x0, unprogrammed default
  1026                           ;	MCLR Pin Enable bit
  1027                           ;	MCLRE = 0x1, unprogrammed default
  1028   300005                     	org	3145733
  1029   300005  83                 	db	131
  1030                           
  1031                           ;Config register CONFIG4L @ 0x300006
  1032                           ;	Stack Full/Underflow Reset Enable bit
  1033                           ;	STVREN = 0x1, unprogrammed default
  1034                           ;	Single-Supply ICSP Enable bit
  1035                           ;	LVP = OFF, Single-Supply ICSP disabled
  1036                           ;	Extended Instruction Set Enable bit
  1037                           ;	XINST = 0x0, unprogrammed default
  1038                           ;	Background Debugger Enable bit
  1039                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1040   300006                     	org	3145734
  1041   300006  81                 	db	129
  1042                           
  1043                           ; Padding undefined space
  1044   300007                     	org	3145735
  1045   300007  FF                 	db	255
  1046                           tosu	equ	0xFFF
  1047                           tosh	equ	0xFFE
  1048                           tosl	equ	0xFFD
  1049                           stkptr	equ	0xFFC
  1050                           pclatu	equ	0xFFB
  1051                           pclath	equ	0xFFA
  1052                           pcl	equ	0xFF9
  1053                           tblptru	equ	0xFF8
  1054                           tblptrh	equ	0xFF7
  1055                           tblptrl	equ	0xFF6
  1056                           tablat	equ	0xFF5
  1057                           prodh	equ	0xFF4
  1058                           prodl	equ	0xFF3
  1059                           indf0	equ	0xFEF
  1060                           postinc0	equ	0xFEE
  1061                           postdec0	equ	0xFED
  1062                           preinc0	equ	0xFEC
  1063                           plusw0	equ	0xFEB
  1064                           fsr0h	equ	0xFEA
  1065                           fsr0l	equ	0xFE9
  1066                           wreg	equ	0xFE8
  1067                           indf1	equ	0xFE7
  1068                           postinc1	equ	0xFE6
  1069                           postdec1	equ	0xFE5
  1070                           preinc1	equ	0xFE4
  1071                           plusw1	equ	0xFE3
  1072                           fsr1h	equ	0xFE2
  1073                           fsr1l	equ	0xFE1
  1074                           bsr	equ	0xFE0
  1075                           indf2	equ	0xFDF
  1076                           postinc2	equ	0xFDE
  1077                           postdec2	equ	0xFDD
  1078                           preinc2	equ	0xFDC
  1079                           plusw2	equ	0xFDB
  1080                           fsr2h	equ	0xFDA
  1081                           fsr2l	equ	0xFD9
  1082                           status	equ	0xFD8

Data Sizes:
    Strings     26
    Constant    0
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      7      25
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    UART_SendString@str	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), STR_2(CODE[11]), STR_3(CODE[3]), 


Critical Paths under _main in COMRAM

    _main->_delay_ms
    _UART_SendString->_UART_SendChar

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     175
                                              6 COMRAM     1     1      0
                          _UART_Init
                      _UART_SendChar
                    _UART_SendString
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             3     1      2      23
                                              3 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _UART_SendString                                      1     0      1      77
                                              4 COMRAM     1     0      1
                      _UART_SendChar
 ---------------------------------------------------------------------------------
 (2) _UART_SendChar                                        1     1      0      29
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0      23
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
   _UART_SendChar
   _UART_SendString
     _UART_SendChar
   _delay_ms

 _ISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            1518      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK5           239      0       0      0.0%
BANK5              239      0       0      0.0%
BITBANK0           128      0       0      0.0%
BANK0              128      0       0      0.0%
BITCOMRAM          126      0       0      0.0%
COMRAM             126      7      25     19.8%
BITBIGSFR_1h        38      0       0      0.0%
BITBIGSFRl          20      0       0      0.0%
BITBIGSFR_1l        12      0       0      0.0%
BITBIGSFR_5h         9      0       0      0.0%
BITBIGSFRh           7      0       0      0.0%
BITBIGSFR_2          6      0       0      0.0%
BITBIGSFR_4          3      0       0      0.0%
BITBIGSFR_3          3      0       0      0.0%
BITBIGSFR_5l         2      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      28      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon May 05 14:06:19 2025

                     l20 0710                       l73 0778                       l76 077C  
                     l85 073C                       l79 078E                       u90 078A  
                     u91 0786                      l901 0646                      l911 0676  
                    l903 064E                      l913 067E                      l905 0654  
                    l851 078A                      l907 0662                      l861 0760  
                    l853 06E4                      l909 0664                      l871 076C  
                    l863 0764                      l855 06E8                      l881 0776  
                    l873 076E                      l865 0766                      l849 077C  
                    l857 06F6                      l875 0770                      l867 0768  
                    l859 075C                      l883 0712                      l891 061C  
                    l877 0772                      l869 076A                      l885 0716  
                    l893 0628                      l879 0774                      l887 0722  
                    l895 062C                      l889 0724                      l897 0634  
                    l899 0644                      _GIE 7F97                      u100 0710  
                    u101 070C                      u110 073C                      u111 0738  
                    u120 0644                      u121 0640                      u130 0676  
                    u131 0672                      u177 06EE                      _ISR 0008  
                    wreg 0FE8                     ?_ISR 0013                     STR_1 0601  
                   STR_2 0610                     STR_3 060D                     _BRGH 7D62  
                   _CREN 7D5C                     _PEIE 7F96                     _RCIE 7CED  
                   _RCIF 7CF5                     i2l93 06D8                     _SPEN 7D5F  
                   _TXEN 7D65                     _TXIF 7CF4                     _SYNC 7D64  
                   _main 061C                     fsr2h 0FDA                     indf2 0FDF  
                   fsr2l 0FD9                     btemp 001A                     start 000E  
           ___param_bank 0000                    ??_ISR 0013                    ?_main 0013  
                  _BRG16 7DC3                    i2l921 06B4                    i2l923 06C0  
                  i2l915 0692                    i2l925 06C2                    i2l917 06A0  
                  i2l927 06D2                    i2l919 06A4                    i2l929 06D6  
                  _RCREG 0FAE                    _SPBRG 0FAF                    _TXREG 0FAD  
                  main@i 0019         ?_UART_SendString 0017                    tablat 0FF5  
                  ttemp5 001B                    ttemp6 001E                    ttemp7 0022  
                  status 0FD8                    wtemp8 001B          __initialization 073E  
           __end_of_main 0688                   ??_main 0019            __activetblptr 0001  
                 _TRISC6 7CA6                   _TRISC7 7CA7         __end_of_delay_ms 0712  
      __end_of_UART_Init 077A                   clear_0 0744                   isa$std 0001  
           __mediumconst 0600                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8    __end_of_UART_SendChar 0790               __accesstop 0080  
__end_of__initialization 074A            ___rparam_used 0001           __pcstackCOMRAM 0013  
            ISR@received 0015                ?_delay_ms 0016                  i2u14_40 06A0  
                i2u14_41 069C                  i2u15_40 06B4                  i2u15_41 06B0  
                i2u16_40 06D2                  i2u16_41 06CE                  __Hparam 0000  
                __Lparam 0000       UART_SendString@str 0017             __psmallconst 0600  
                __pcinit 073E                  __ramtop 0600                  __ptext0 061C  
                __ptext1 06E4                  __ptext2 0712                  __ptext3 077A  
                __ptext4 075C               ??_delay_ms 0018           __pintcode_body 0688  
             delay_ms@ms 0016     end_of_initialization 074A                  int_func 0688  
                postinc0 0FEE                _UART_Init 075C               ?_UART_Init 0013  
    start_initialization 073E              __end_of_ISR 06E4        ??_UART_SendString 0018  
       _uart_frame_ready 0012              __pbssCOMRAM 0001                __pintcode 0008  
            ??_UART_Init 0016              __smallconst 0600            _UART_SendChar 077A  
         _uart_rx_buffer 0001          UART_SendChar@ch 0016           ?_UART_SendChar 0013  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0600  
               _delay_ms 06E4            _uart_rx_index 0011          _UART_SendString 0712  
               isa$xinst 0000                 int$flags 001A          ??_UART_SendChar 0016  
               intlevel2 0000  __end_of_UART_SendString 073E  
