

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon May 05 13:40:38 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15   000000                     
    16                           ; Generated 17/10/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4520 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50   000FE0                     bsr             equ	4064
    51   000FE9                     fsr0            equ	4073
    52   000FEA                     fsr0h           equ	4074
    53   000FE9                     fsr0l           equ	4073
    54   000FE1                     fsr1            equ	4065
    55   000FE2                     fsr1h           equ	4066
    56   000FE1                     fsr1l           equ	4065
    57   000FD9                     fsr2            equ	4057
    58   000FDA                     fsr2h           equ	4058
    59   000FD9                     fsr2l           equ	4057
    60   000FEF                     indf0           equ	4079
    61   000FE7                     indf1           equ	4071
    62   000FDF                     indf2           equ	4063
    63   000FF2                     intcon          equ	4082
    64   000000                     nvmcon          equ	0
    65   000FF9                     pcl             equ	4089
    66   000FFA                     pclath          equ	4090
    67   000FFB                     pclatu          equ	4091
    68   000FEB                     plusw0          equ	4075
    69   000FE3                     plusw1          equ	4067
    70   000FDB                     plusw2          equ	4059
    71   000FED                     postdec0        equ	4077
    72   000FE5                     postdec1        equ	4069
    73   000FDD                     postdec2        equ	4061
    74   000FEE                     postinc0        equ	4078
    75   000FE6                     postinc1        equ	4070
    76   000FDE                     postinc2        equ	4062
    77   000FEC                     preinc0         equ	4076
    78   000FE4                     preinc1         equ	4068
    79   000FDC                     preinc2         equ	4060
    80   000FF3                     prod            equ	4083
    81   000FF4                     prodh           equ	4084
    82   000FF3                     prodl           equ	4083
    83   000FD8                     status          equ	4056
    84   000FF5                     tablat          equ	4085
    85   000FF6                     tblptr          equ	4086
    86   000FF7                     tblptrh         equ	4087
    87   000FF6                     tblptrl         equ	4086
    88   000FF8                     tblptru         equ	4088
    89   000FFD                     tosl            equ	4093
    90   000FE8                     wreg            equ	4072
    91   000F80                     PORTA           equ	3968	;# 
    92   000F81                     PORTB           equ	3969	;# 
    93   000F82                     PORTC           equ	3970	;# 
    94   000F83                     PORTD           equ	3971	;# 
    95   000F84                     PORTE           equ	3972	;# 
    96   000F89                     LATA            equ	3977	;# 
    97   000F8A                     LATB            equ	3978	;# 
    98   000F8B                     LATC            equ	3979	;# 
    99   000F8C                     LATD            equ	3980	;# 
   100   000F8D                     LATE            equ	3981	;# 
   101   000F92                     TRISA           equ	3986	;# 
   102   000F92                     DDRA            equ	3986	;# 
   103   000F93                     TRISB           equ	3987	;# 
   104   000F93                     DDRB            equ	3987	;# 
   105   000F94                     TRISC           equ	3988	;# 
   106   000F94                     DDRC            equ	3988	;# 
   107   000F95                     TRISD           equ	3989	;# 
   108   000F95                     DDRD            equ	3989	;# 
   109   000F96                     TRISE           equ	3990	;# 
   110   000F96                     DDRE            equ	3990	;# 
   111   000F9B                     OSCTUNE         equ	3995	;# 
   112   000F9D                     PIE1            equ	3997	;# 
   113   000F9E                     PIR1            equ	3998	;# 
   114   000F9F                     IPR1            equ	3999	;# 
   115   000FA0                     PIE2            equ	4000	;# 
   116   000FA1                     PIR2            equ	4001	;# 
   117   000FA2                     IPR2            equ	4002	;# 
   118   000FA6                     EECON1          equ	4006	;# 
   119   000FA7                     EECON2          equ	4007	;# 
   120   000FA8                     EEDATA          equ	4008	;# 
   121   000FA9                     EEADR           equ	4009	;# 
   122   000FAB                     RCSTA           equ	4011	;# 
   123   000FAB                     RCSTA1          equ	4011	;# 
   124   000FAC                     TXSTA           equ	4012	;# 
   125   000FAC                     TXSTA1          equ	4012	;# 
   126   000FAD                     TXREG           equ	4013	;# 
   127   000FAD                     TXREG1          equ	4013	;# 
   128   000FAE                     RCREG           equ	4014	;# 
   129   000FAE                     RCREG1          equ	4014	;# 
   130   000FAF                     SPBRG           equ	4015	;# 
   131   000FAF                     SPBRG1          equ	4015	;# 
   132   000FB0                     SPBRGH          equ	4016	;# 
   133   000FB1                     T3CON           equ	4017	;# 
   134   000FB2                     TMR3            equ	4018	;# 
   135   000FB2                     TMR3L           equ	4018	;# 
   136   000FB3                     TMR3H           equ	4019	;# 
   137   000FB4                     CMCON           equ	4020	;# 
   138   000FB5                     CVRCON          equ	4021	;# 
   139   000FB6                     ECCP1AS         equ	4022	;# 
   140   000FB6                     ECCPAS          equ	4022	;# 
   141   000FB7                     PWM1CON         equ	4023	;# 
   142   000FB7                     ECCP1DEL        equ	4023	;# 
   143   000FB8                     BAUDCON         equ	4024	;# 
   144   000FB8                     BAUDCTL         equ	4024	;# 
   145   000FBA                     CCP2CON         equ	4026	;# 
   146   000FBB                     CCPR2           equ	4027	;# 
   147   000FBB                     CCPR2L          equ	4027	;# 
   148   000FBC                     CCPR2H          equ	4028	;# 
   149   000FBD                     CCP1CON         equ	4029	;# 
   150   000FBE                     CCPR1           equ	4030	;# 
   151   000FBE                     CCPR1L          equ	4030	;# 
   152   000FBF                     CCPR1H          equ	4031	;# 
   153   000FC0                     ADCON2          equ	4032	;# 
   154   000FC1                     ADCON1          equ	4033	;# 
   155   000FC2                     ADCON0          equ	4034	;# 
   156   000FC3                     ADRES           equ	4035	;# 
   157   000FC3                     ADRESL          equ	4035	;# 
   158   000FC4                     ADRESH          equ	4036	;# 
   159   000FC5                     SSPCON2         equ	4037	;# 
   160   000FC6                     SSPCON1         equ	4038	;# 
   161   000FC7                     SSPSTAT         equ	4039	;# 
   162   000FC8                     SSPADD          equ	4040	;# 
   163   000FC9                     SSPBUF          equ	4041	;# 
   164   000FCA                     T2CON           equ	4042	;# 
   165   000FCB                     PR2             equ	4043	;# 
   166   000FCB                     MEMCON          equ	4043	;# 
   167   000FCC                     TMR2            equ	4044	;# 
   168   000FCD                     T1CON           equ	4045	;# 
   169   000FCE                     TMR1            equ	4046	;# 
   170   000FCE                     TMR1L           equ	4046	;# 
   171   000FCF                     TMR1H           equ	4047	;# 
   172   000FD0                     RCON            equ	4048	;# 
   173   000FD1                     WDTCON          equ	4049	;# 
   174   000FD2                     HLVDCON         equ	4050	;# 
   175   000FD2                     LVDCON          equ	4050	;# 
   176   000FD3                     OSCCON          equ	4051	;# 
   177   000FD5                     T0CON           equ	4053	;# 
   178   000FD6                     TMR0            equ	4054	;# 
   179   000FD6                     TMR0L           equ	4054	;# 
   180   000FD7                     TMR0H           equ	4055	;# 
   181   000FD8                     STATUS          equ	4056	;# 
   182   000FD9                     FSR2            equ	4057	;# 
   183   000FD9                     FSR2L           equ	4057	;# 
   184   000FDA                     FSR2H           equ	4058	;# 
   185   000FDB                     PLUSW2          equ	4059	;# 
   186   000FDC                     PREINC2         equ	4060	;# 
   187   000FDD                     POSTDEC2        equ	4061	;# 
   188   000FDE                     POSTINC2        equ	4062	;# 
   189   000FDF                     INDF2           equ	4063	;# 
   190   000FE0                     BSR             equ	4064	;# 
   191   000FE1                     FSR1            equ	4065	;# 
   192   000FE1                     FSR1L           equ	4065	;# 
   193   000FE2                     FSR1H           equ	4066	;# 
   194   000FE3                     PLUSW1          equ	4067	;# 
   195   000FE4                     PREINC1         equ	4068	;# 
   196   000FE5                     POSTDEC1        equ	4069	;# 
   197   000FE6                     POSTINC1        equ	4070	;# 
   198   000FE7                     INDF1           equ	4071	;# 
   199   000FE8                     WREG            equ	4072	;# 
   200   000FE9                     FSR0            equ	4073	;# 
   201   000FE9                     FSR0L           equ	4073	;# 
   202   000FEA                     FSR0H           equ	4074	;# 
   203   000FEB                     PLUSW0          equ	4075	;# 
   204   000FEC                     PREINC0         equ	4076	;# 
   205   000FED                     POSTDEC0        equ	4077	;# 
   206   000FEE                     POSTINC0        equ	4078	;# 
   207   000FEF                     INDF0           equ	4079	;# 
   208   000FF0                     INTCON3         equ	4080	;# 
   209   000FF1                     INTCON2         equ	4081	;# 
   210   000FF2                     INTCON          equ	4082	;# 
   211   000FF3                     PROD            equ	4083	;# 
   212   000FF3                     PRODL           equ	4083	;# 
   213   000FF4                     PRODH           equ	4084	;# 
   214   000FF5                     TABLAT          equ	4085	;# 
   215   000FF6                     TBLPTR          equ	4086	;# 
   216   000FF6                     TBLPTRL         equ	4086	;# 
   217   000FF7                     TBLPTRH         equ	4087	;# 
   218   000FF8                     TBLPTRU         equ	4088	;# 
   219   000FF9                     PCLAT           equ	4089	;# 
   220   000FF9                     PC              equ	4089	;# 
   221   000FF9                     PCL             equ	4089	;# 
   222   000FFA                     PCLATH          equ	4090	;# 
   223   000FFB                     PCLATU          equ	4091	;# 
   224   000FFC                     STKPTR          equ	4092	;# 
   225   000FFD                     TOS             equ	4093	;# 
   226   000FFD                     TOSL            equ	4093	;# 
   227   000FFE                     TOSH            equ	4094	;# 
   228   000FFF                     TOSU            equ	4095	;# 
   229   000F80                     PORTA           equ	3968	;# 
   230   000F81                     PORTB           equ	3969	;# 
   231   000F82                     PORTC           equ	3970	;# 
   232   000F83                     PORTD           equ	3971	;# 
   233   000F84                     PORTE           equ	3972	;# 
   234   000F89                     LATA            equ	3977	;# 
   235   000F8A                     LATB            equ	3978	;# 
   236   000F8B                     LATC            equ	3979	;# 
   237   000F8C                     LATD            equ	3980	;# 
   238   000F8D                     LATE            equ	3981	;# 
   239   000F92                     TRISA           equ	3986	;# 
   240   000F92                     DDRA            equ	3986	;# 
   241   000F93                     TRISB           equ	3987	;# 
   242   000F93                     DDRB            equ	3987	;# 
   243   000F94                     TRISC           equ	3988	;# 
   244   000F94                     DDRC            equ	3988	;# 
   245   000F95                     TRISD           equ	3989	;# 
   246   000F95                     DDRD            equ	3989	;# 
   247   000F96                     TRISE           equ	3990	;# 
   248   000F96                     DDRE            equ	3990	;# 
   249   000F9B                     OSCTUNE         equ	3995	;# 
   250   000F9D                     PIE1            equ	3997	;# 
   251   000F9E                     PIR1            equ	3998	;# 
   252   000F9F                     IPR1            equ	3999	;# 
   253   000FA0                     PIE2            equ	4000	;# 
   254   000FA1                     PIR2            equ	4001	;# 
   255   000FA2                     IPR2            equ	4002	;# 
   256   000FA6                     EECON1          equ	4006	;# 
   257   000FA7                     EECON2          equ	4007	;# 
   258   000FA8                     EEDATA          equ	4008	;# 
   259   000FA9                     EEADR           equ	4009	;# 
   260   000FAB                     RCSTA           equ	4011	;# 
   261   000FAB                     RCSTA1          equ	4011	;# 
   262   000FAC                     TXSTA           equ	4012	;# 
   263   000FAC                     TXSTA1          equ	4012	;# 
   264   000FAD                     TXREG           equ	4013	;# 
   265   000FAD                     TXREG1          equ	4013	;# 
   266   000FAE                     RCREG           equ	4014	;# 
   267   000FAE                     RCREG1          equ	4014	;# 
   268   000FAF                     SPBRG           equ	4015	;# 
   269   000FAF                     SPBRG1          equ	4015	;# 
   270   000FB0                     SPBRGH          equ	4016	;# 
   271   000FB1                     T3CON           equ	4017	;# 
   272   000FB2                     TMR3            equ	4018	;# 
   273   000FB2                     TMR3L           equ	4018	;# 
   274   000FB3                     TMR3H           equ	4019	;# 
   275   000FB4                     CMCON           equ	4020	;# 
   276   000FB5                     CVRCON          equ	4021	;# 
   277   000FB6                     ECCP1AS         equ	4022	;# 
   278   000FB6                     ECCPAS          equ	4022	;# 
   279   000FB7                     PWM1CON         equ	4023	;# 
   280   000FB7                     ECCP1DEL        equ	4023	;# 
   281   000FB8                     BAUDCON         equ	4024	;# 
   282   000FB8                     BAUDCTL         equ	4024	;# 
   283   000FBA                     CCP2CON         equ	4026	;# 
   284   000FBB                     CCPR2           equ	4027	;# 
   285   000FBB                     CCPR2L          equ	4027	;# 
   286   000FBC                     CCPR2H          equ	4028	;# 
   287   000FBD                     CCP1CON         equ	4029	;# 
   288   000FBE                     CCPR1           equ	4030	;# 
   289   000FBE                     CCPR1L          equ	4030	;# 
   290   000FBF                     CCPR1H          equ	4031	;# 
   291   000FC0                     ADCON2          equ	4032	;# 
   292   000FC1                     ADCON1          equ	4033	;# 
   293   000FC2                     ADCON0          equ	4034	;# 
   294   000FC3                     ADRES           equ	4035	;# 
   295   000FC3                     ADRESL          equ	4035	;# 
   296   000FC4                     ADRESH          equ	4036	;# 
   297   000FC5                     SSPCON2         equ	4037	;# 
   298   000FC6                     SSPCON1         equ	4038	;# 
   299   000FC7                     SSPSTAT         equ	4039	;# 
   300   000FC8                     SSPADD          equ	4040	;# 
   301   000FC9                     SSPBUF          equ	4041	;# 
   302   000FCA                     T2CON           equ	4042	;# 
   303   000FCB                     PR2             equ	4043	;# 
   304   000FCB                     MEMCON          equ	4043	;# 
   305   000FCC                     TMR2            equ	4044	;# 
   306   000FCD                     T1CON           equ	4045	;# 
   307   000FCE                     TMR1            equ	4046	;# 
   308   000FCE                     TMR1L           equ	4046	;# 
   309   000FCF                     TMR1H           equ	4047	;# 
   310   000FD0                     RCON            equ	4048	;# 
   311   000FD1                     WDTCON          equ	4049	;# 
   312   000FD2                     HLVDCON         equ	4050	;# 
   313   000FD2                     LVDCON          equ	4050	;# 
   314   000FD3                     OSCCON          equ	4051	;# 
   315   000FD5                     T0CON           equ	4053	;# 
   316   000FD6                     TMR0            equ	4054	;# 
   317   000FD6                     TMR0L           equ	4054	;# 
   318   000FD7                     TMR0H           equ	4055	;# 
   319   000FD8                     STATUS          equ	4056	;# 
   320   000FD9                     FSR2            equ	4057	;# 
   321   000FD9                     FSR2L           equ	4057	;# 
   322   000FDA                     FSR2H           equ	4058	;# 
   323   000FDB                     PLUSW2          equ	4059	;# 
   324   000FDC                     PREINC2         equ	4060	;# 
   325   000FDD                     POSTDEC2        equ	4061	;# 
   326   000FDE                     POSTINC2        equ	4062	;# 
   327   000FDF                     INDF2           equ	4063	;# 
   328   000FE0                     BSR             equ	4064	;# 
   329   000FE1                     FSR1            equ	4065	;# 
   330   000FE1                     FSR1L           equ	4065	;# 
   331   000FE2                     FSR1H           equ	4066	;# 
   332   000FE3                     PLUSW1          equ	4067	;# 
   333   000FE4                     PREINC1         equ	4068	;# 
   334   000FE5                     POSTDEC1        equ	4069	;# 
   335   000FE6                     POSTINC1        equ	4070	;# 
   336   000FE7                     INDF1           equ	4071	;# 
   337   000FE8                     WREG            equ	4072	;# 
   338   000FE9                     FSR0            equ	4073	;# 
   339   000FE9                     FSR0L           equ	4073	;# 
   340   000FEA                     FSR0H           equ	4074	;# 
   341   000FEB                     PLUSW0          equ	4075	;# 
   342   000FEC                     PREINC0         equ	4076	;# 
   343   000FED                     POSTDEC0        equ	4077	;# 
   344   000FEE                     POSTINC0        equ	4078	;# 
   345   000FEF                     INDF0           equ	4079	;# 
   346   000FF0                     INTCON3         equ	4080	;# 
   347   000FF1                     INTCON2         equ	4081	;# 
   348   000FF2                     INTCON          equ	4082	;# 
   349   000FF3                     PROD            equ	4083	;# 
   350   000FF3                     PRODL           equ	4083	;# 
   351   000FF4                     PRODH           equ	4084	;# 
   352   000FF5                     TABLAT          equ	4085	;# 
   353   000FF6                     TBLPTR          equ	4086	;# 
   354   000FF6                     TBLPTRL         equ	4086	;# 
   355   000FF7                     TBLPTRH         equ	4087	;# 
   356   000FF8                     TBLPTRU         equ	4088	;# 
   357   000FF9                     PCLAT           equ	4089	;# 
   358   000FF9                     PC              equ	4089	;# 
   359   000FF9                     PCL             equ	4089	;# 
   360   000FFA                     PCLATH          equ	4090	;# 
   361   000FFB                     PCLATU          equ	4091	;# 
   362   000FFC                     STKPTR          equ	4092	;# 
   363   000FFD                     TOS             equ	4093	;# 
   364   000FFD                     TOSL            equ	4093	;# 
   365   000FFE                     TOSH            equ	4094	;# 
   366   000FFF                     TOSU            equ	4095	;# 
   367   007CA7                     _TRISC7         set	31911
   368   007CA6                     _TRISC6         set	31910
   369   007CF5                     _RCIF           set	31989
   370   007CF4                     _TXIF           set	31988
   371   007D5C                     _CREN           set	32092
   372   007D65                     _TXEN           set	32101
   373   007D5F                     _SPEN           set	32095
   374   007D64                     _SYNC           set	32100
   375   007DC3                     _BRG16          set	32195
   376   007D62                     _BRGH           set	32098
   377   000FAE                     _RCREG          set	4014
   378   000FAD                     _TXREG          set	4013
   379   000FAF                     _SPBRG          set	4015
   380                           
   381                           	psect	smallconst
   382   000600                     __psmallconst:
   383                           	callstack 0
   384   000600  00                 	db	0
   385   000601                     STR_1:
   386   000601  55                 	db	85	;'U'
   387   000602  41                 	db	65	;'A'
   388   000603  52                 	db	82	;'R'
   389   000604  54                 	db	84	;'T'
   390   000605  20                 	db	32
   391   000606  49                 	db	73	;'I'
   392   000607  6E                 	db	110	;'n'
   393   000608  69                 	db	105	;'i'
   394   000609  74                 	db	116	;'t'
   395   00060A  20                 	db	32
   396   00060B  4F                 	db	79	;'O'
   397   00060C  4B                 	db	75	;'K'
   398   00060D  0D                 	db	13
   399   00060E  0A                 	db	10
   400   00060F  00                 	db	0
   401   000610  00                 	db	0	; dummy byte at the end
   402   000600                     __smallconst    set	__psmallconst
   403   000600                     __mediumconst   set	__psmallconst
   404   000001                     __activetblptr  equ	1
   405                           
   406                           ; #config settings
   407                           
   408                           	psect	cinit
   409   000684                     __pcinit:
   410                           	callstack 0
   411   000684                     start_initialization:
   412                           	callstack 0
   413   000684                     __initialization:
   414                           	callstack 0
   415   000684                     end_of_initialization:
   416                           	callstack 0
   417   000684                     __end_of__initialization:
   418                           	callstack 0
   419   000684  0E00               	movlw	low (__Lsmallconst shr (0+16))
   420   000686  6EF8               	movwf	tblptru,c
   421   000688  0E06               	movlw	high __Lsmallconst
   422   00068A  6EF7               	movwf	tblptrh,c
   423   00068C  0100               	movlb	0
   424   00068E  EF1F  F003         	goto	_main	;jump to C main() function
   425                           
   426                           	psect	cstackCOMRAM
   427   000001                     __pcstackCOMRAM:
   428                           	callstack 0
   429   000001                     UART_SendChar@ch:
   430                           	callstack 0
   431   000001                     
   432                           ; 1 bytes @ 0x0
   433   000001                     	ds	1
   434   000002                     UART_SendString@str:
   435                           	callstack 0
   436                           
   437                           ; 1 bytes @ 0x1
   438   000002                     	ds	1
   439   000003                     
   440                           ; 1 bytes @ 0x2
   441 ;;
   442 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   443 ;;
   444 ;; *************** function _main *****************
   445 ;; Defined at:
   446 ;;		line 35 in file "main.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;		None
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      void 
   453 ;; Registers used:
   454 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   460 ;;      Params:         0       0       0       0       0       0       0
   461 ;;      Locals:         0       0       0       0       0       0       0
   462 ;;      Temps:          0       0       0       0       0       0       0
   463 ;;      Totals:         0       0       0       0       0       0       0
   464 ;;Total ram usage:        0 bytes
   465 ;; Hardware stack levels required when called: 2
   466 ;; This function calls:
   467 ;;		_UART_Init
   468 ;;		_UART_SendChar
   469 ;;		_UART_SendString
   470 ;; This function is called by:
   471 ;;		Startup code after reset
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475                           	psect	text0
   476   00063E                     __ptext0:
   477                           	callstack 0
   478   00063E                     _main:
   479                           	callstack 29
   480   00063E  EC37  F003         	call	_UART_Init	;wreg free
   481   000642  0E01               	movlw	low STR_1
   482   000644  6E02               	movwf	UART_SendString@str^0,c
   483   000646  EC09  F003         	call	_UART_SendString	;wreg free
   484   00064A                     l789:
   485   00064A  0E41               	movlw	65
   486   00064C  EC2C  F003         	call	_UART_SendChar
   487   000650  EF25  F003         	goto	l789
   488   000654  EF9E  F03E         	goto	start
   489   000658                     __end_of_main:
   490                           	callstack 0
   491                           
   492 ;; *************** function _UART_SendString *****************
   493 ;; Defined at:
   494 ;;		line 29 in file "u_uart.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;  str             1    1[COMRAM] PTR const unsigned char 
   497 ;;		 -> STR_1(15), 
   498 ;; Auto vars:     Size  Location     Type
   499 ;;		None
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   504 ;; Tracked objects:
   505 ;;		On entry : 0/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   509 ;;      Params:         1       0       0       0       0       0       0
   510 ;;      Locals:         0       0       0       0       0       0       0
   511 ;;      Temps:          0       0       0       0       0       0       0
   512 ;;      Totals:         1       0       0       0       0       0       0
   513 ;;Total ram usage:        1 bytes
   514 ;; Hardware stack levels used: 1
   515 ;; Hardware stack levels required when called: 1
   516 ;; This function calls:
   517 ;;		_UART_SendChar
   518 ;; This function is called by:
   519 ;;		_main
   520 ;; This function uses a non-reentrant model
   521 ;;
   522                           
   523                           	psect	text1
   524   000612                     __ptext1:
   525                           	callstack 0
   526   000612                     _UART_SendString:
   527                           	callstack 29
   528   000612                     
   529                           ;u_uart.c: 29: void UART_SendString(const char *str);u_uart.c: 30: {;u_uart.c: 31:     w
      +                          hile (*str)
   530   000612  EF12  F003         	goto	l783
   531   000616                     l779:
   532                           
   533                           ;u_uart.c: 32:     {;u_uart.c: 33:         UART_SendChar(*str++);
   534   000616  C002  FFF6         	movff	UART_SendString@str,tblptrl
   535   00061A                     	if	0	;There is only one active tblptr byte
   536   00061A                     	endif
   537   00061A                     	if	0	;tblptru may be non-zero
   538   00061A                     	endif
   539   00061A                     	if	0	;tblptru may be non-zero
   540   00061A                     	endif
   541   00061A  0008               	tblrd		*
   542   00061C  50F5               	movf	tablat,w,c
   543   00061E  EC2C  F003         	call	_UART_SendChar
   544   000622  2A02               	incf	UART_SendString@str^0,f,c
   545   000624                     l783:
   546                           
   547                           ;u_uart.c: 31:     while (*str)
   548   000624  C002  FFF6         	movff	UART_SendString@str,tblptrl
   549   000628                     	if	0	;There is only one active tblptr byte
   550   000628                     	endif
   551   000628                     	if	0	;tblptru may be non-zero
   552   000628                     	endif
   553   000628                     	if	0	;tblptru may be non-zero
   554   000628                     	endif
   555   000628  0008               	tblrd		*
   556   00062A  50F5               	movf	tablat,w,c
   557   00062C  0900               	iorlw	0
   558   00062E  A4D8               	btfss	status,2,c
   559   000630  EF1C  F003         	goto	u41
   560   000634  EF1E  F003         	goto	u40
   561   000638                     u41:
   562   000638  EF0B  F003         	goto	l779
   563   00063C                     u40:
   564   00063C  0012               	return		;funcret
   565   00063E                     __end_of_UART_SendString:
   566                           	callstack 0
   567                           
   568 ;; *************** function _UART_SendChar *****************
   569 ;; Defined at:
   570 ;;		line 23 in file "u_uart.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;  ch              1    wreg     unsigned char 
   573 ;; Auto vars:     Size  Location     Type
   574 ;;  ch              1    0[COMRAM] unsigned char 
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      void 
   577 ;; Registers used:
   578 ;;		wreg
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   584 ;;      Params:         0       0       0       0       0       0       0
   585 ;;      Locals:         1       0       0       0       0       0       0
   586 ;;      Temps:          0       0       0       0       0       0       0
   587 ;;      Totals:         1       0       0       0       0       0       0
   588 ;;Total ram usage:        1 bytes
   589 ;; Hardware stack levels used: 1
   590 ;; This function calls:
   591 ;;		Nothing
   592 ;; This function is called by:
   593 ;;		_main
   594 ;;		_UART_SendString
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598                           	psect	text2
   599   000658                     __ptext2:
   600                           	callstack 0
   601   000658                     _UART_SendChar:
   602                           	callstack 29
   603                           
   604                           ;incstack = 0
   605                           ;UART_SendChar@ch stored from wreg
   606   000658  6E01               	movwf	UART_SendChar@ch^0,c
   607   00065A                     l46:
   608   00065A  A89E               	btfss	3998,4,c	;volatile
   609   00065C  EF32  F003         	goto	u11
   610   000660  EF34  F003         	goto	u10
   611   000664                     u11:
   612   000664  EF2D  F003         	goto	l46
   613   000668                     u10:
   614   000668                     
   615                           ;u_uart.c: 26:     TXREG = ch;
   616   000668  C001  FFAD         	movff	UART_SendChar@ch,4013	;volatile
   617   00066C  0012               	return		;funcret
   618   00066E                     __end_of_UART_SendChar:
   619                           	callstack 0
   620                           
   621 ;; *************** function _UART_Init *****************
   622 ;; Defined at:
   623 ;;		line 6 in file "u_uart.c"
   624 ;; Parameters:    Size  Location     Type
   625 ;;		None
   626 ;; Auto vars:     Size  Location     Type
   627 ;;		None
   628 ;; Return value:  Size  Location     Type
   629 ;;                  1    wreg      void 
   630 ;; Registers used:
   631 ;;		wreg, status,2
   632 ;; Tracked objects:
   633 ;;		On entry : 0/0
   634 ;;		On exit  : 0/0
   635 ;;		Unchanged: 0/0
   636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   637 ;;      Params:         0       0       0       0       0       0       0
   638 ;;      Locals:         0       0       0       0       0       0       0
   639 ;;      Temps:          0       0       0       0       0       0       0
   640 ;;      Totals:         0       0       0       0       0       0       0
   641 ;;Total ram usage:        0 bytes
   642 ;; Hardware stack levels used: 1
   643 ;; This function calls:
   644 ;;		Nothing
   645 ;; This function is called by:
   646 ;;		_main
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           	psect	text3
   651   00066E                     __ptext3:
   652                           	callstack 0
   653   00066E                     _UART_Init:
   654                           	callstack 30
   655   00066E                     
   656                           ;u_uart.c: 9:     TRISC6 = 0;
   657   00066E  9C94               	bcf	3988,6,c	;volatile
   658                           
   659                           ;u_uart.c: 10:     TRISC7 = 1;
   660   000670  8E94               	bsf	3988,7,c	;volatile
   661   000672                     
   662                           ;u_uart.c: 13:     SPBRG = 15;
   663   000672  0E0F               	movlw	15
   664   000674  6EAF               	movwf	175,c	;volatile
   665   000676                     
   666                           ;u_uart.c: 14:     BRGH = 0;
   667   000676  94AC               	bcf	4012,2,c	;volatile
   668   000678                     
   669                           ;u_uart.c: 15:     BRG16 = 0;
   670   000678  96B8               	bcf	4024,3,c	;volatile
   671   00067A                     
   672                           ;u_uart.c: 17:     SYNC = 0;
   673   00067A  98AC               	bcf	4012,4,c	;volatile
   674   00067C                     
   675                           ;u_uart.c: 18:     SPEN = 1;
   676   00067C  8EAB               	bsf	4011,7,c	;volatile
   677   00067E                     
   678                           ;u_uart.c: 19:     TXEN = 1;
   679   00067E  8AAC               	bsf	4012,5,c	;volatile
   680   000680                     
   681                           ;u_uart.c: 20:     CREN = 1;
   682   000680  88AB               	bsf	4011,4,c	;volatile
   683   000682  0012               	return		;funcret
   684   000684                     __end_of_UART_Init:
   685                           	callstack 0
   686                           
   687                           	psect	rparam
   688   000001                     ___rparam_used  equ	1
   689   000000                     ___param_bank   equ	0
   690   000000                     __Lparam        equ	__Lrparam
   691   000000                     __Hparam        equ	__Hrparam
   692                           
   693                           	psect	config
   694                           
   695                           ; Padding undefined space
   696   300000                     	org	3145728
   697   300000  FF                 	db	255
   698                           
   699                           ;Config register CONFIG1H @ 0x300001
   700                           ;	Oscillator Selection bits
   701                           ;	OSC = HS, HS oscillator
   702                           ;	Fail-Safe Clock Monitor Enable bit
   703                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   704                           ;	Internal/External Oscillator Switchover bit
   705                           ;	IESO = OFF, Oscillator Switchover mode disabled
   706   300001                     	org	3145729
   707   300001  02                 	db	2
   708                           
   709                           ;Config register CONFIG2L @ 0x300002
   710                           ;	Power-up Timer Enable bit
   711                           ;	PWRT = OFF, PWRT disabled
   712                           ;	Brown-out Reset Enable bits
   713                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   714                           ;	Brown Out Reset Voltage bits
   715                           ;	BORV = 3, Minimum setting
   716   300002                     	org	3145730
   717   300002  19                 	db	25
   718                           
   719                           ;Config register CONFIG2H @ 0x300003
   720                           ;	Watchdog Timer Enable bit
   721                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   722                           ;	Watchdog Timer Postscale Select bits
   723                           ;	WDTPS = 32768, 1:32768
   724   300003                     	org	3145731
   725   300003  1E                 	db	30
   726                           
   727                           ; Padding undefined space
   728   300004                     	org	3145732
   729   300004  FF                 	db	255
   730                           
   731                           ;Config register CONFIG3H @ 0x300005
   732                           ;	CCP2 MUX bit
   733                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   734                           ;	PORTB A/D Enable bit
   735                           ;	PBADEN = 0x1, unprogrammed default
   736                           ;	Low-Power Timer1 Oscillator Enable bit
   737                           ;	LPT1OSC = 0x0, unprogrammed default
   738                           ;	MCLR Pin Enable bit
   739                           ;	MCLRE = 0x1, unprogrammed default
   740   300005                     	org	3145733
   741   300005  83                 	db	131
   742                           
   743                           ;Config register CONFIG4L @ 0x300006
   744                           ;	Stack Full/Underflow Reset Enable bit
   745                           ;	STVREN = 0x1, unprogrammed default
   746                           ;	Single-Supply ICSP Enable bit
   747                           ;	LVP = OFF, Single-Supply ICSP disabled
   748                           ;	Extended Instruction Set Enable bit
   749                           ;	XINST = 0x0, unprogrammed default
   750                           ;	Background Debugger Enable bit
   751                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
   752   300006                     	org	3145734
   753   300006  81                 	db	129
   754                           
   755                           ; Padding undefined space
   756   300007                     	org	3145735
   757   300007  FF                 	db	255
   758                           tosu	equ	0xFFF
   759                           tosh	equ	0xFFE
   760                           tosl	equ	0xFFD
   761                           stkptr	equ	0xFFC
   762                           pclatu	equ	0xFFB
   763                           pclath	equ	0xFFA
   764                           pcl	equ	0xFF9
   765                           tblptru	equ	0xFF8
   766                           tblptrh	equ	0xFF7
   767                           tblptrl	equ	0xFF6
   768                           tablat	equ	0xFF5
   769                           prodh	equ	0xFF4
   770                           prodl	equ	0xFF3
   771                           indf0	equ	0xFEF
   772                           postinc0	equ	0xFEE
   773                           postdec0	equ	0xFED
   774                           preinc0	equ	0xFEC
   775                           plusw0	equ	0xFEB
   776                           fsr0h	equ	0xFEA
   777                           fsr0l	equ	0xFE9
   778                           wreg	equ	0xFE8
   779                           indf1	equ	0xFE7
   780                           postinc1	equ	0xFE6
   781                           postdec1	equ	0xFE5
   782                           preinc1	equ	0xFE4
   783                           plusw1	equ	0xFE3
   784                           fsr1h	equ	0xFE2
   785                           fsr1l	equ	0xFE1
   786                           bsr	equ	0xFE0
   787                           indf2	equ	0xFDF
   788                           postinc2	equ	0xFDE
   789                           postdec2	equ	0xFDD
   790                           preinc2	equ	0xFDC
   791                           plusw2	equ	0xFDB
   792                           fsr2h	equ	0xFDA
   793                           fsr2l	equ	0xFD9
   794                           status	equ	0xFD8

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      2       2
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           239      0       0

Pointer List with Targets:

    UART_SendString@str	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_UART_SendString
    _UART_SendString->_UART_SendChar

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      76
                          _UART_Init
                      _UART_SendChar
                    _UART_SendString
 ---------------------------------------------------------------------------------
 (1) _UART_SendString                                      1     0      1      61
                                              1 COMRAM     1     0      1
                      _UART_SendChar
 ---------------------------------------------------------------------------------
 (2) _UART_SendChar                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
   _UART_SendChar
   _UART_SendString
     _UART_SendChar

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM          127      0       0      0.0%
BITBANK0           128      0       0      0.0%
BITBANK1           256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BITBANK5           239      0       0      0.0%
BITBIGSFR_1h        38      0       0      0.0%
BITBIGSFRl          20      0       0      0.0%
BITBIGSFR_1lh       12      0       0      0.0%
BITBIGSFR_5         12      0       0      0.0%
BITBIGSFRh           7      0       0      0.0%
BITBIGSFR_2          6      0       0      0.0%
BITBIGSFR_3          3      0       0      0.0%
BITBIGSFR_4          3      0       0      0.0%
BITBIGSFR_1ll        1      0       0      0.0%
COMRAM             127      2       2      1.6%
BANK0              128      0       0      0.0%
BANK1              256      0       0      0.0%
BANK2              256      0       0      0.0%
BANK3              256      0       0      0.0%
BANK4              256      0       0      0.0%
BANK5              239      0       0      0.0%
BIGRAM            1518      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       2      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon May 05 13:40:38 2025

                     l43 0682                       l46 065A                       l55 063C  
                     l49 066C                       u10 0668                       u11 0664  
                     u40 063C                       u41 0638                      l741 066E  
                    l751 067C                      l743 0672                      l753 067E  
                    l745 0676                      l737 065A                      l755 0680  
                    l747 0678                      l739 0668                      l749 067A  
                    l781 0622                      l783 0624                      l777 0612  
                    l785 063E                      l779 0616                      l787 0642  
                    l789 064A                     STR_1 0601                     _BRGH 7D62  
                   _CREN 7D5C                     _RCIF 7CF5                     _SPEN 7D5F  
                   _TXEN 7D65                     _TXIF 7CF4                     _SYNC 7D64  
                   _main 063E                     start 7D3C             ___param_bank 0000  
                  ?_main 0001                    _BRG16 7DC3                    _RCREG 0FAE  
                  _SPBRG 0FAF                    _TXREG 0FAD         ?_UART_SendString 0002  
                  tablat 0FF5                    status 0FD8          __initialization 0684  
           __end_of_main 0658                   ??_main 0003            __activetblptr 0001  
                 _TRISC6 7CA6                   _TRISC7 7CA7        __end_of_UART_Init 0684  
                 isa$std 0001             __mediumconst 0600                   tblptrh 0FF7  
                 tblptrl 0FF6                   tblptru 0FF8    __end_of_UART_SendChar 066E  
             __accesstop 0080  __end_of__initialization 0684            ___rparam_used 0001  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
     UART_SendString@str 0002             __psmallconst 0600                  __pcinit 0684  
                __ramtop 0600                  __ptext0 063E                  __ptext1 0612  
                __ptext2 0658                  __ptext3 066E     end_of_initialization 0684  
              _UART_Init 066E               ?_UART_Init 0001      start_initialization 0684  
      ??_UART_SendString 0003              ??_UART_Init 0001              __smallconst 0600  
          _UART_SendChar 0658          UART_SendChar@ch 0001           ?_UART_SendChar 0001  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0600  
        _UART_SendString 0612                 isa$xinst 0000          ??_UART_SendChar 0001  
__end_of_UART_SendString 063E  
